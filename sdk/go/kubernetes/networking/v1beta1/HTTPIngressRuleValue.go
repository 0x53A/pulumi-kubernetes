// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example:
// http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986,
// this resource will be used to match against everything after the last '/' and before the first
// '?' or '#'.
type HTTPIngressRuleValue struct {
	// A collection of paths that map requests to backends.
	Paths []HTTPIngressPath `pulumi:"paths"`

}

var _HTTPIngressRuleValueType = reflect.TypeOf((*HTTPIngressRuleValue)(nil)).Elem()

// HTTPIngressRuleValueInput represents an input type that resolves to a HTTPIngressRuleValue.
type HTTPIngressRuleValueInput interface {
	ElementType() reflect.Type

	ToHTTPIngressRuleValueOutput() HTTPIngressRuleValueOutput
	ToHTTPIngressRuleValueOutputWithContext(ctx context.Context) HTTPIngressRuleValueOutput
}

// HTTPIngressRuleValueArgs is a HTTPIngressRuleValueInput whose fields are all Input types.
type HTTPIngressRuleValueArgs struct {
	// A collection of paths that map requests to backends.
	Paths HTTPIngressPathArrayInput `pulumi:"paths"`

}

func (a HTTPIngressRuleValueArgs) ElementType() reflect.Type {
	return _HTTPIngressRuleValueType
}

func (a HTTPIngressRuleValueArgs) ToHTTPIngressRuleValueOutput() HTTPIngressRuleValueOutput {
	return pulumi.ToOutput(a).(HTTPIngressRuleValueOutput)
}

func (a HTTPIngressRuleValueArgs) ToHTTPIngressRuleValueOutputWithContext(ctx context.Context) HTTPIngressRuleValueOutput {
	return pulumi.ToOutputWithContext(ctx, a).(HTTPIngressRuleValueOutput)
}

// HTTPIngressRuleValueOutput is an output type that resolves to a Input.
type HTTPIngressRuleValueOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(HTTPIngressRuleValueOutput{}) }

func (HTTPIngressRuleValueOutput) ElementType() reflect.Type {
	return _HTTPIngressRuleValueType
}

func (o HTTPIngressRuleValueOutput) Paths() HTTPIngressPathArrayOutput {
	return o.Apply(func(v HTTPIngressRuleValue) []HTTPIngressPath {
		return v.Paths
	}).(HTTPIngressPathArrayOutput)
}

