// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	metaV1 "github.com/pulumi/pulumi-kubernetes/sdk/go/kubernetes/meta/v1"
)

// NetworkPolicy describes what network traffic is allowed for a set of Pods
type NetworkPolicy struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`

	// Standard object's metadata. More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metaV1.ObjectMetaOutput `pulumi:"metadata"`

	// Specification of the desired behavior for this NetworkPolicy.
	Spec NetworkPolicySpecOutput `pulumi:"spec"`

}

// NetworkPolicyArgs is the set of arguments needed to create a NetworkPolicy resource.
type NetworkPolicyArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringInput `pulumi:"kind"`

	// Standard object's metadata. More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metaV1.ObjectMetaInput `pulumi:"metadata"`

	// Specification of the desired behavior for this NetworkPolicy.
	Spec NetworkPolicySpecInput `pulumi:"spec"`

}

// NewNetworkPolicy creates a NetworkPolicy resource with the given unique name, arguments, and options.
func NewNetworkPolicy(ctx *pulumi.Context, name string, args *NetworkPolicyArgs, opts ...pulumi.ResourceOption) (*NetworkPolicy, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		args.ApiVersion = pulumi.String("networking.k8s.io/v1")
		args.Kind = pulumi.String("NetworkPolicy")
		if i := args.ApiVersion; i != nil {
			inputs["apiVersion"] = i.ToStringOutput()
		}
		if i := args.Kind; i != nil {
			inputs["kind"] = i.ToStringOutput()
		}
		if i := args.Metadata; i != nil {
			inputs["metadata"] = i.ToObjectMetaOutput()
		}
		if i := args.Spec; i != nil {
			inputs["spec"] = i.ToNetworkPolicySpecOutput()
		}
	}
	var resource NetworkPolicy
	err := ctx.RegisterResource("kubernetes:networking.k8s.io/v1:NetworkPolicy", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkPolicy gets an existing NetworkPolicy resource's state with the given name and ID.
func GetNetworkPolicy(ctx *pulumi.Context, name string, id pulumi.IDInput, opts ...pulumi.ResourceOption) (*NetworkPolicy, error) {
	var resource NetworkPolicy
	err := ctx.ReadResource("kubernetes:networking.k8s.io/v1:NetworkPolicy", name, id, nil, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// NetworkPolicy describes what network traffic is allowed for a set of Pods
type NetworkPolicyProperty struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`

	// Standard object's metadata. More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metaV1.ObjectMeta `pulumi:"metadata"`

	// Specification of the desired behavior for this NetworkPolicy.
	Spec *NetworkPolicySpec `pulumi:"spec"`

}

var _NetworkPolicyPropertyType = reflect.TypeOf((*NetworkPolicyProperty)(nil)).Elem()

// NetworkPolicyPropertyInput represents an input type that resolves to a NetworkPolicyProperty.
type NetworkPolicyPropertyInput interface {
	ElementType() reflect.Type

	ToNetworkPolicyPropertyOutput() NetworkPolicyPropertyOutput
	ToNetworkPolicyPropertyOutputWithContext(ctx context.Context) NetworkPolicyPropertyOutput
}

// NetworkPolicyPropertyArgs is a NetworkPolicyPropertyInput whose fields are all Input types.
type NetworkPolicyPropertyArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringInput `pulumi:"kind"`

	// Standard object's metadata. More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metaV1.ObjectMetaInput `pulumi:"metadata"`

	// Specification of the desired behavior for this NetworkPolicy.
	Spec NetworkPolicySpecInput `pulumi:"spec"`

}

func (a NetworkPolicyPropertyArgs) ElementType() reflect.Type {
	return _NetworkPolicyPropertyType
}

func (a NetworkPolicyPropertyArgs) ToNetworkPolicyPropertyOutput() NetworkPolicyPropertyOutput {
	return pulumi.ToOutput(a).(NetworkPolicyPropertyOutput)
}

func (a NetworkPolicyPropertyArgs) ToNetworkPolicyPropertyOutputWithContext(ctx context.Context) NetworkPolicyPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, a).(NetworkPolicyPropertyOutput)
}

// NetworkPolicyPropertyOutput is an output type that resolves to a Input.
type NetworkPolicyPropertyOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(NetworkPolicyPropertyOutput{}) }

func (NetworkPolicyPropertyOutput) ElementType() reflect.Type {
	return _NetworkPolicyPropertyType
}

func (o NetworkPolicyPropertyOutput) ApiVersion() pulumi.StringOutput {
	return o.Apply(func(v NetworkPolicyProperty) *string {
		return v.ApiVersion
	}).(pulumi.StringOutput)
}

func (o NetworkPolicyPropertyOutput) Kind() pulumi.StringOutput {
	return o.Apply(func(v NetworkPolicyProperty) *string {
		return v.Kind
	}).(pulumi.StringOutput)
}

func (o NetworkPolicyPropertyOutput) Metadata() metaV1.ObjectMetaOutput {
	return o.Apply(func(v NetworkPolicyProperty) *metaV1.ObjectMeta {
		return v.Metadata
	}).(metaV1.ObjectMetaOutput)
}

func (o NetworkPolicyPropertyOutput) Spec() NetworkPolicySpecOutput {
	return o.Apply(func(v NetworkPolicyProperty) *NetworkPolicySpec {
		return v.Spec
	}).(NetworkPolicySpecOutput)
}

var _NetworkPolicyPropertyArrayType = reflect.TypeOf((*[]NetworkPolicyProperty)(nil)).Elem()

type NetworkPolicyPropertyArrayInput interface {
	ElementType() reflect.Type

	ToNetworkPolicyPropertyArrayOutput() NetworkPolicyPropertyArrayOutput
	ToNetworkPolicyPropertyArrayOutputWithContext(ctx context.Context) NetworkPolicyPropertyArrayOutput
}

type NetworkPolicyPropertyArray []NetworkPolicyPropertyInput

func (a NetworkPolicyPropertyArray) ElementType() reflect.Type {
	return _NetworkPolicyPropertyArrayType
}

func (a NetworkPolicyPropertyArray) ToNetworkPolicyPropertyArrayOutput() NetworkPolicyPropertyArrayOutput {
	return pulumi.ToOutput(a).(NetworkPolicyPropertyArrayOutput)
}

func (a NetworkPolicyPropertyArray) ToNetworkPolicyPropertyArrayOutputWithContext(ctx context.Context) NetworkPolicyPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(NetworkPolicyPropertyArrayOutput)
}

type NetworkPolicyPropertyArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(NetworkPolicyPropertyArrayOutput{}) }

func (NetworkPolicyPropertyArrayOutput) ElementType() reflect.Type {
	return _NetworkPolicyPropertyArrayType
}

func (o NetworkPolicyPropertyArrayOutput) Index(i pulumi.IntInput) NetworkPolicyPropertyOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) NetworkPolicyProperty {
		return vs[0].([]NetworkPolicyProperty)[vs[1].(int)]
	}).(NetworkPolicyPropertyOutput)
}
