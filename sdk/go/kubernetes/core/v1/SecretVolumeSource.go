// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Adapts a Secret into a volume.
// 
// The contents of the target Secret's Data field will be presented in a volume as files using the
// keys in the Data field as the file names. Secret volumes support ownership management and SELinux
// relabeling.
type SecretVolumeSource struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777.
	// Defaults to 0644. Directories within the path are not affected by this setting. This might be in
	// conflict with other options that affect the file mode, like fsGroup, and the result can be other
	// mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`

	// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected
	// into the volume as a file whose name is the key and content is the value. If specified, the
	// listed keys will be projected into the specified paths, and unlisted keys will not be present.
	// If a key is specified which is not present in the Secret, the volume setup will error unless it
	// is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items []KeyToPath `pulumi:"items"`

	// Specify whether the Secret or its keys must be defined
	Optional *bool `pulumi:"optional"`

	// Name of the secret in the pod's namespace to use. More info:
	// https://kubernetes.io/docs/concepts/storage/volumes#secret
	SecretName *string `pulumi:"secretName"`

}

var _SecretVolumeSourceType = reflect.TypeOf((*SecretVolumeSource)(nil)).Elem()

// SecretVolumeSourceInput represents an input type that resolves to a SecretVolumeSource.
type SecretVolumeSourceInput interface {
	ElementType() reflect.Type

	ToSecretVolumeSourceOutput() SecretVolumeSourceOutput
	ToSecretVolumeSourceOutputWithContext(ctx context.Context) SecretVolumeSourceOutput
}

// SecretVolumeSourceArgs is a SecretVolumeSourceInput whose fields are all Input types.
type SecretVolumeSourceArgs struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777.
	// Defaults to 0644. Directories within the path are not affected by this setting. This might be in
	// conflict with other options that affect the file mode, like fsGroup, and the result can be other
	// mode bits set.
	DefaultMode pulumi.IntInput `pulumi:"defaultMode"`

	// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected
	// into the volume as a file whose name is the key and content is the value. If specified, the
	// listed keys will be projected into the specified paths, and unlisted keys will not be present.
	// If a key is specified which is not present in the Secret, the volume setup will error unless it
	// is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items KeyToPathArrayInput `pulumi:"items"`

	// Specify whether the Secret or its keys must be defined
	Optional pulumi.BoolInput `pulumi:"optional"`

	// Name of the secret in the pod's namespace to use. More info:
	// https://kubernetes.io/docs/concepts/storage/volumes#secret
	SecretName pulumi.StringInput `pulumi:"secretName"`

}

func (a SecretVolumeSourceArgs) ElementType() reflect.Type {
	return _SecretVolumeSourceType
}

func (a SecretVolumeSourceArgs) ToSecretVolumeSourceOutput() SecretVolumeSourceOutput {
	return pulumi.ToOutput(a).(SecretVolumeSourceOutput)
}

func (a SecretVolumeSourceArgs) ToSecretVolumeSourceOutputWithContext(ctx context.Context) SecretVolumeSourceOutput {
	return pulumi.ToOutputWithContext(ctx, a).(SecretVolumeSourceOutput)
}

// SecretVolumeSourceOutput is an output type that resolves to a Input.
type SecretVolumeSourceOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(SecretVolumeSourceOutput{}) }

func (SecretVolumeSourceOutput) ElementType() reflect.Type {
	return _SecretVolumeSourceType
}

func (o SecretVolumeSourceOutput) DefaultMode() pulumi.IntOutput {
	return o.Apply(func(v SecretVolumeSource) *int {
		return v.DefaultMode
	}).(pulumi.IntOutput)
}

func (o SecretVolumeSourceOutput) Items() KeyToPathArrayOutput {
	return o.Apply(func(v SecretVolumeSource) []KeyToPath {
		return v.Items
	}).(KeyToPathArrayOutput)
}

func (o SecretVolumeSourceOutput) Optional() pulumi.BoolOutput {
	return o.Apply(func(v SecretVolumeSource) *bool {
		return v.Optional
	}).(pulumi.BoolOutput)
}

func (o SecretVolumeSourceOutput) SecretName() pulumi.StringOutput {
	return o.Apply(func(v SecretVolumeSource) *string {
		return v.SecretName
	}).(pulumi.StringOutput)
}

