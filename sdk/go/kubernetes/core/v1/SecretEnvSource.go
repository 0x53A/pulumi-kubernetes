// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// SecretEnvSource selects a Secret to populate the environment variables with.
// 
// The contents of the target Secret's Data field will represent the key-value pairs as environment
// variables.
type SecretEnvSource struct {
	// Name of the referent. More info:
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`

	// Specify whether the Secret must be defined
	Optional *bool `pulumi:"optional"`

}

var _SecretEnvSourceType = reflect.TypeOf((*SecretEnvSource)(nil)).Elem()

// SecretEnvSourceInput represents an input type that resolves to a SecretEnvSource.
type SecretEnvSourceInput interface {
	ElementType() reflect.Type

	ToSecretEnvSourceOutput() SecretEnvSourceOutput
	ToSecretEnvSourceOutputWithContext(ctx context.Context) SecretEnvSourceOutput
}

// SecretEnvSourceArgs is a SecretEnvSourceInput whose fields are all Input types.
type SecretEnvSourceArgs struct {
	// Name of the referent. More info:
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`

	// Specify whether the Secret must be defined
	Optional pulumi.BoolInput `pulumi:"optional"`

}

func (a SecretEnvSourceArgs) ElementType() reflect.Type {
	return _SecretEnvSourceType
}

func (a SecretEnvSourceArgs) ToSecretEnvSourceOutput() SecretEnvSourceOutput {
	return pulumi.ToOutput(a).(SecretEnvSourceOutput)
}

func (a SecretEnvSourceArgs) ToSecretEnvSourceOutputWithContext(ctx context.Context) SecretEnvSourceOutput {
	return pulumi.ToOutputWithContext(ctx, a).(SecretEnvSourceOutput)
}

// SecretEnvSourceOutput is an output type that resolves to a Input.
type SecretEnvSourceOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(SecretEnvSourceOutput{}) }

func (SecretEnvSourceOutput) ElementType() reflect.Type {
	return _SecretEnvSourceType
}

func (o SecretEnvSourceOutput) Name() pulumi.StringOutput {
	return o.Apply(func(v SecretEnvSource) *string {
		return v.Name
	}).(pulumi.StringOutput)
}

func (o SecretEnvSourceOutput) Optional() pulumi.BoolOutput {
	return o.Apply(func(v SecretEnvSource) *bool {
		return v.Optional
	}).(pulumi.BoolOutput)
}

