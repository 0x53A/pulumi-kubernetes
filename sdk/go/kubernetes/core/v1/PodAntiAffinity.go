// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Pod anti affinity is a group of inter pod anti affinity scheduling rules.
type PodAntiAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions
	// specified by this field, but it may choose a node that violates one or more of the expressions.
	// The node that is most preferred is the one with the greatest sum of weights, i.e. for each node
	// that meets all of the scheduling requirements (resource request, requiredDuringScheduling
	// anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field
	// and adding "weight" to the sum if the node has pods which matches the corresponding
	// podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []WeightedPodAffinityTerm `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`

	// If the anti-affinity requirements specified by this field are not met at scheduling time, the
	// pod will not be scheduled onto the node. If the anti-affinity requirements specified by this
	// field cease to be met at some point during pod execution (e.g. due to a pod label update), the
	// system may or may not try to eventually evict the pod from its node. When there are multiple
	// elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all
	// terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []PodAffinityTerm `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`

}

var _PodAntiAffinityType = reflect.TypeOf((*PodAntiAffinity)(nil)).Elem()

// PodAntiAffinityInput represents an input type that resolves to a PodAntiAffinity.
type PodAntiAffinityInput interface {
	ElementType() reflect.Type

	ToPodAntiAffinityOutput() PodAntiAffinityOutput
	ToPodAntiAffinityOutputWithContext(ctx context.Context) PodAntiAffinityOutput
}

// PodAntiAffinityArgs is a PodAntiAffinityInput whose fields are all Input types.
type PodAntiAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions
	// specified by this field, but it may choose a node that violates one or more of the expressions.
	// The node that is most preferred is the one with the greatest sum of weights, i.e. for each node
	// that meets all of the scheduling requirements (resource request, requiredDuringScheduling
	// anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field
	// and adding "weight" to the sum if the node has pods which matches the corresponding
	// podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution WeightedPodAffinityTermArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`

	// If the anti-affinity requirements specified by this field are not met at scheduling time, the
	// pod will not be scheduled onto the node. If the anti-affinity requirements specified by this
	// field cease to be met at some point during pod execution (e.g. due to a pod label update), the
	// system may or may not try to eventually evict the pod from its node. When there are multiple
	// elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all
	// terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution PodAffinityTermArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`

}

func (a PodAntiAffinityArgs) ElementType() reflect.Type {
	return _PodAntiAffinityType
}

func (a PodAntiAffinityArgs) ToPodAntiAffinityOutput() PodAntiAffinityOutput {
	return pulumi.ToOutput(a).(PodAntiAffinityOutput)
}

func (a PodAntiAffinityArgs) ToPodAntiAffinityOutputWithContext(ctx context.Context) PodAntiAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, a).(PodAntiAffinityOutput)
}

// PodAntiAffinityOutput is an output type that resolves to a Input.
type PodAntiAffinityOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(PodAntiAffinityOutput{}) }

func (PodAntiAffinityOutput) ElementType() reflect.Type {
	return _PodAntiAffinityType
}

func (o PodAntiAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() WeightedPodAffinityTermArrayOutput {
	return o.Apply(func(v PodAntiAffinity) []WeightedPodAffinityTerm {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(WeightedPodAffinityTermArrayOutput)
}

func (o PodAntiAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() PodAffinityTermArrayOutput {
	return o.Apply(func(v PodAntiAffinity) []PodAffinityTerm {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(PodAffinityTermArrayOutput)
}

