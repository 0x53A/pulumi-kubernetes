// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// IP address information for entries in the (plural) PodIPs field. Each entry includes:
//    IP: An IP address allocated to the pod. Routable at least within the cluster.
type PodIP struct {
	// ip is an IP address (IPv4 or IPv6) assigned to the pod
	Ip *string `pulumi:"ip"`

}

var _PodIPType = reflect.TypeOf((*PodIP)(nil)).Elem()

// PodIPInput represents an input type that resolves to a PodIP.
type PodIPInput interface {
	ElementType() reflect.Type

	ToPodIPOutput() PodIPOutput
	ToPodIPOutputWithContext(ctx context.Context) PodIPOutput
}

// PodIPArgs is a PodIPInput whose fields are all Input types.
type PodIPArgs struct {
	// ip is an IP address (IPv4 or IPv6) assigned to the pod
	Ip pulumi.StringInput `pulumi:"ip"`

}

func (a PodIPArgs) ElementType() reflect.Type {
	return _PodIPType
}

func (a PodIPArgs) ToPodIPOutput() PodIPOutput {
	return pulumi.ToOutput(a).(PodIPOutput)
}

func (a PodIPArgs) ToPodIPOutputWithContext(ctx context.Context) PodIPOutput {
	return pulumi.ToOutputWithContext(ctx, a).(PodIPOutput)
}

// PodIPOutput is an output type that resolves to a Input.
type PodIPOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(PodIPOutput{}) }

func (PodIPOutput) ElementType() reflect.Type {
	return _PodIPType
}

func (o PodIPOutput) Ip() pulumi.StringOutput {
	return o.Apply(func(v PodIP) *string {
		return v.Ip
	}).(pulumi.StringOutput)
}

var _PodIPArrayType = reflect.TypeOf((*[]PodIP)(nil)).Elem()

type PodIPArrayInput interface {
	ElementType() reflect.Type

	ToPodIPArrayOutput() PodIPArrayOutput
	ToPodIPArrayOutputWithContext(ctx context.Context) PodIPArrayOutput
}

type PodIPArray []PodIPInput

func (a PodIPArray) ElementType() reflect.Type {
	return _PodIPArrayType
}

func (a PodIPArray) ToPodIPArrayOutput() PodIPArrayOutput {
	return pulumi.ToOutput(a).(PodIPArrayOutput)
}

func (a PodIPArray) ToPodIPArrayOutputWithContext(ctx context.Context) PodIPArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(PodIPArrayOutput)
}

type PodIPArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(PodIPArrayOutput{}) }

func (PodIPArrayOutput) ElementType() reflect.Type {
	return _PodIPArrayType
}

func (o PodIPArrayOutput) Index(i pulumi.IntInput) PodIPOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) PodIP {
		return vs[0].([]PodIP)[vs[1].(int)]
	}).(PodIPOutput)
}
