// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// ClientIPConfig represents the configurations of Client IP based session affinity.
type ClientIPConfig struct {
	// timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0
	// && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`

}

var _ClientIPConfigType = reflect.TypeOf((*ClientIPConfig)(nil)).Elem()

// ClientIPConfigInput represents an input type that resolves to a ClientIPConfig.
type ClientIPConfigInput interface {
	ElementType() reflect.Type

	ToClientIPConfigOutput() ClientIPConfigOutput
	ToClientIPConfigOutputWithContext(ctx context.Context) ClientIPConfigOutput
}

// ClientIPConfigArgs is a ClientIPConfigInput whose fields are all Input types.
type ClientIPConfigArgs struct {
	// timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0
	// && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
	TimeoutSeconds pulumi.IntInput `pulumi:"timeoutSeconds"`

}

func (a ClientIPConfigArgs) ElementType() reflect.Type {
	return _ClientIPConfigType
}

func (a ClientIPConfigArgs) ToClientIPConfigOutput() ClientIPConfigOutput {
	return pulumi.ToOutput(a).(ClientIPConfigOutput)
}

func (a ClientIPConfigArgs) ToClientIPConfigOutputWithContext(ctx context.Context) ClientIPConfigOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ClientIPConfigOutput)
}

// ClientIPConfigOutput is an output type that resolves to a Input.
type ClientIPConfigOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ClientIPConfigOutput{}) }

func (ClientIPConfigOutput) ElementType() reflect.Type {
	return _ClientIPConfigType
}

func (o ClientIPConfigOutput) TimeoutSeconds() pulumi.IntOutput {
	return o.Apply(func(v ClientIPConfig) *int {
		return v.TimeoutSeconds
	}).(pulumi.IntOutput)
}

