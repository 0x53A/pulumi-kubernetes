// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// ResourceQuotaStatus defines the enforced hard limits and observed use.
type ResourceQuotaStatus struct {
	// Hard is the set of enforced hard limits for each named resource. More info:
	// https://kubernetes.io/docs/concepts/policy/resource-quotas/
	Hard map[string]string `pulumi:"hard"`

	// Used is the current observed total usage of the resource in the namespace.
	Used map[string]string `pulumi:"used"`

}

var _ResourceQuotaStatusType = reflect.TypeOf((*ResourceQuotaStatus)(nil)).Elem()

// ResourceQuotaStatusInput represents an input type that resolves to a ResourceQuotaStatus.
type ResourceQuotaStatusInput interface {
	ElementType() reflect.Type

	ToResourceQuotaStatusOutput() ResourceQuotaStatusOutput
	ToResourceQuotaStatusOutputWithContext(ctx context.Context) ResourceQuotaStatusOutput
}

// ResourceQuotaStatusArgs is a ResourceQuotaStatusInput whose fields are all Input types.
type ResourceQuotaStatusArgs struct {
	// Hard is the set of enforced hard limits for each named resource. More info:
	// https://kubernetes.io/docs/concepts/policy/resource-quotas/
	Hard pulumi.StringMapInput `pulumi:"hard"`

	// Used is the current observed total usage of the resource in the namespace.
	Used pulumi.StringMapInput `pulumi:"used"`

}

func (a ResourceQuotaStatusArgs) ElementType() reflect.Type {
	return _ResourceQuotaStatusType
}

func (a ResourceQuotaStatusArgs) ToResourceQuotaStatusOutput() ResourceQuotaStatusOutput {
	return pulumi.ToOutput(a).(ResourceQuotaStatusOutput)
}

func (a ResourceQuotaStatusArgs) ToResourceQuotaStatusOutputWithContext(ctx context.Context) ResourceQuotaStatusOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ResourceQuotaStatusOutput)
}

// ResourceQuotaStatusOutput is an output type that resolves to a Input.
type ResourceQuotaStatusOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ResourceQuotaStatusOutput{}) }

func (ResourceQuotaStatusOutput) ElementType() reflect.Type {
	return _ResourceQuotaStatusType
}

func (o ResourceQuotaStatusOutput) Hard() pulumi.StringMapOutput {
	return o.Apply(func(v ResourceQuotaStatus) map[string]string {
		return v.Hard
	}).(pulumi.StringMapOutput)
}

func (o ResourceQuotaStatusOutput) Used() pulumi.StringMapOutput {
	return o.Apply(func(v ResourceQuotaStatus) map[string]string {
		return v.Used
	}).(pulumi.StringMapOutput)
}

