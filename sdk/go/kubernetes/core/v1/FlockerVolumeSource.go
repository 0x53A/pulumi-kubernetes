// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and
// datasetUUID should be set. Flocker volumes do not support ownership management or SELinux
// relabeling.
type FlockerVolumeSource struct {
	// Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered
	// as deprecated
	DatasetName *string `pulumi:"datasetName"`

	// UUID of the dataset. This is unique identifier of a Flocker dataset
	DatasetUUID *string `pulumi:"datasetUUID"`

}

var _FlockerVolumeSourceType = reflect.TypeOf((*FlockerVolumeSource)(nil)).Elem()

// FlockerVolumeSourceInput represents an input type that resolves to a FlockerVolumeSource.
type FlockerVolumeSourceInput interface {
	ElementType() reflect.Type

	ToFlockerVolumeSourceOutput() FlockerVolumeSourceOutput
	ToFlockerVolumeSourceOutputWithContext(ctx context.Context) FlockerVolumeSourceOutput
}

// FlockerVolumeSourceArgs is a FlockerVolumeSourceInput whose fields are all Input types.
type FlockerVolumeSourceArgs struct {
	// Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered
	// as deprecated
	DatasetName pulumi.StringInput `pulumi:"datasetName"`

	// UUID of the dataset. This is unique identifier of a Flocker dataset
	DatasetUUID pulumi.StringInput `pulumi:"datasetUUID"`

}

func (a FlockerVolumeSourceArgs) ElementType() reflect.Type {
	return _FlockerVolumeSourceType
}

func (a FlockerVolumeSourceArgs) ToFlockerVolumeSourceOutput() FlockerVolumeSourceOutput {
	return pulumi.ToOutput(a).(FlockerVolumeSourceOutput)
}

func (a FlockerVolumeSourceArgs) ToFlockerVolumeSourceOutputWithContext(ctx context.Context) FlockerVolumeSourceOutput {
	return pulumi.ToOutputWithContext(ctx, a).(FlockerVolumeSourceOutput)
}

// FlockerVolumeSourceOutput is an output type that resolves to a Input.
type FlockerVolumeSourceOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(FlockerVolumeSourceOutput{}) }

func (FlockerVolumeSourceOutput) ElementType() reflect.Type {
	return _FlockerVolumeSourceType
}

func (o FlockerVolumeSourceOutput) DatasetName() pulumi.StringOutput {
	return o.Apply(func(v FlockerVolumeSource) *string {
		return v.DatasetName
	}).(pulumi.StringOutput)
}

func (o FlockerVolumeSourceOutput) DatasetUUID() pulumi.StringOutput {
	return o.Apply(func(v FlockerVolumeSource) *string {
		return v.DatasetUUID
	}).(pulumi.StringOutput)
}

