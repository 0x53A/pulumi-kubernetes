// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// SELinuxOptions are the labels to be applied to the container
type SELinuxOptions struct {
	// Level is SELinux level label that applies to the container.
	Level *string `pulumi:"level"`

	// Role is a SELinux role label that applies to the container.
	Role *string `pulumi:"role"`

	// Type is a SELinux type label that applies to the container.
	Type *string `pulumi:"type"`

	// User is a SELinux user label that applies to the container.
	User *string `pulumi:"user"`

}

var _SELinuxOptionsType = reflect.TypeOf((*SELinuxOptions)(nil)).Elem()

// SELinuxOptionsInput represents an input type that resolves to a SELinuxOptions.
type SELinuxOptionsInput interface {
	ElementType() reflect.Type

	ToSELinuxOptionsOutput() SELinuxOptionsOutput
	ToSELinuxOptionsOutputWithContext(ctx context.Context) SELinuxOptionsOutput
}

// SELinuxOptionsArgs is a SELinuxOptionsInput whose fields are all Input types.
type SELinuxOptionsArgs struct {
	// Level is SELinux level label that applies to the container.
	Level pulumi.StringInput `pulumi:"level"`

	// Role is a SELinux role label that applies to the container.
	Role pulumi.StringInput `pulumi:"role"`

	// Type is a SELinux type label that applies to the container.
	Type pulumi.StringInput `pulumi:"type"`

	// User is a SELinux user label that applies to the container.
	User pulumi.StringInput `pulumi:"user"`

}

func (a SELinuxOptionsArgs) ElementType() reflect.Type {
	return _SELinuxOptionsType
}

func (a SELinuxOptionsArgs) ToSELinuxOptionsOutput() SELinuxOptionsOutput {
	return pulumi.ToOutput(a).(SELinuxOptionsOutput)
}

func (a SELinuxOptionsArgs) ToSELinuxOptionsOutputWithContext(ctx context.Context) SELinuxOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, a).(SELinuxOptionsOutput)
}

// SELinuxOptionsOutput is an output type that resolves to a Input.
type SELinuxOptionsOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(SELinuxOptionsOutput{}) }

func (SELinuxOptionsOutput) ElementType() reflect.Type {
	return _SELinuxOptionsType
}

func (o SELinuxOptionsOutput) Level() pulumi.StringOutput {
	return o.Apply(func(v SELinuxOptions) *string {
		return v.Level
	}).(pulumi.StringOutput)
}

func (o SELinuxOptionsOutput) Role() pulumi.StringOutput {
	return o.Apply(func(v SELinuxOptions) *string {
		return v.Role
	}).(pulumi.StringOutput)
}

func (o SELinuxOptionsOutput) Type() pulumi.StringOutput {
	return o.Apply(func(v SELinuxOptions) *string {
		return v.Type
	}).(pulumi.StringOutput)
}

func (o SELinuxOptionsOutput) User() pulumi.StringOutput {
	return o.Apply(func(v SELinuxOptions) *string {
		return v.User
	}).(pulumi.StringOutput)
}

