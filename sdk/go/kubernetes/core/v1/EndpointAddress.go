// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// EndpointAddress is a tuple that describes single IP address.
type EndpointAddress struct {
	// The Hostname of this endpoint
	Hostname *string `pulumi:"hostname"`

	// The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or
	// link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all
	// platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready.
	Ip string `pulumi:"ip"`

	// Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node.
	NodeName *string `pulumi:"nodeName"`

	// Reference to object providing the endpoint.
	TargetRef *ObjectReference `pulumi:"targetRef"`

}

var _EndpointAddressType = reflect.TypeOf((*EndpointAddress)(nil)).Elem()

// EndpointAddressInput represents an input type that resolves to a EndpointAddress.
type EndpointAddressInput interface {
	ElementType() reflect.Type

	ToEndpointAddressOutput() EndpointAddressOutput
	ToEndpointAddressOutputWithContext(ctx context.Context) EndpointAddressOutput
}

// EndpointAddressArgs is a EndpointAddressInput whose fields are all Input types.
type EndpointAddressArgs struct {
	// The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or
	// link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all
	// platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready.
	Ip pulumi.StringInput `pulumi:"ip"`

	// The Hostname of this endpoint
	Hostname pulumi.StringInput `pulumi:"hostname"`

	// Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node.
	NodeName pulumi.StringInput `pulumi:"nodeName"`

	// Reference to object providing the endpoint.
	TargetRef ObjectReferenceInput `pulumi:"targetRef"`

}

func (a EndpointAddressArgs) ElementType() reflect.Type {
	return _EndpointAddressType
}

func (a EndpointAddressArgs) ToEndpointAddressOutput() EndpointAddressOutput {
	return pulumi.ToOutput(a).(EndpointAddressOutput)
}

func (a EndpointAddressArgs) ToEndpointAddressOutputWithContext(ctx context.Context) EndpointAddressOutput {
	return pulumi.ToOutputWithContext(ctx, a).(EndpointAddressOutput)
}

// EndpointAddressOutput is an output type that resolves to a Input.
type EndpointAddressOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(EndpointAddressOutput{}) }

func (EndpointAddressOutput) ElementType() reflect.Type {
	return _EndpointAddressType
}

func (o EndpointAddressOutput) Hostname() pulumi.StringOutput {
	return o.Apply(func(v EndpointAddress) *string {
		return v.Hostname
	}).(pulumi.StringOutput)
}

func (o EndpointAddressOutput) Ip() pulumi.StringOutput {
	return o.Apply(func(v EndpointAddress) string {
		return v.Ip
	}).(pulumi.StringOutput)
}

func (o EndpointAddressOutput) NodeName() pulumi.StringOutput {
	return o.Apply(func(v EndpointAddress) *string {
		return v.NodeName
	}).(pulumi.StringOutput)
}

func (o EndpointAddressOutput) TargetRef() ObjectReferenceOutput {
	return o.Apply(func(v EndpointAddress) *ObjectReference {
		return v.TargetRef
	}).(ObjectReferenceOutput)
}

var _EndpointAddressArrayType = reflect.TypeOf((*[]EndpointAddress)(nil)).Elem()

type EndpointAddressArrayInput interface {
	ElementType() reflect.Type

	ToEndpointAddressArrayOutput() EndpointAddressArrayOutput
	ToEndpointAddressArrayOutputWithContext(ctx context.Context) EndpointAddressArrayOutput
}

type EndpointAddressArray []EndpointAddressInput

func (a EndpointAddressArray) ElementType() reflect.Type {
	return _EndpointAddressArrayType
}

func (a EndpointAddressArray) ToEndpointAddressArrayOutput() EndpointAddressArrayOutput {
	return pulumi.ToOutput(a).(EndpointAddressArrayOutput)
}

func (a EndpointAddressArray) ToEndpointAddressArrayOutputWithContext(ctx context.Context) EndpointAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(EndpointAddressArrayOutput)
}

type EndpointAddressArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(EndpointAddressArrayOutput{}) }

func (EndpointAddressArrayOutput) ElementType() reflect.Type {
	return _EndpointAddressArrayType
}

func (o EndpointAddressArrayOutput) Index(i pulumi.IntInput) EndpointAddressOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) EndpointAddress {
		return vs[0].([]EndpointAddress)[vs[1].(int)]
	}).(EndpointAddressOutput)
}
