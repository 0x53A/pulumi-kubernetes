// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Adapts a ConfigMap into a volume.
// 
// The contents of the target ConfigMap's Data field will be presented in a volume as files using
// the keys in the Data field as the file names, unless the items element is populated with specific
// mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
type ConfigMapVolumeSource struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777.
	// Defaults to 0644. Directories within the path are not affected by this setting. This might be in
	// conflict with other options that affect the file mode, like fsGroup, and the result can be other
	// mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`

	// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be
	// projected into the volume as a file whose name is the key and content is the value. If
	// specified, the listed keys will be projected into the specified paths, and unlisted keys will
	// not be present. If a key is specified which is not present in the ConfigMap, the volume setup
	// will error unless it is marked optional. Paths must be relative and may not contain the '..'
	// path or start with '..'.
	Items []KeyToPath `pulumi:"items"`

	// Name of the referent. More info:
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`

	// Specify whether the ConfigMap or its keys must be defined
	Optional *bool `pulumi:"optional"`

}

var _ConfigMapVolumeSourceType = reflect.TypeOf((*ConfigMapVolumeSource)(nil)).Elem()

// ConfigMapVolumeSourceInput represents an input type that resolves to a ConfigMapVolumeSource.
type ConfigMapVolumeSourceInput interface {
	ElementType() reflect.Type

	ToConfigMapVolumeSourceOutput() ConfigMapVolumeSourceOutput
	ToConfigMapVolumeSourceOutputWithContext(ctx context.Context) ConfigMapVolumeSourceOutput
}

// ConfigMapVolumeSourceArgs is a ConfigMapVolumeSourceInput whose fields are all Input types.
type ConfigMapVolumeSourceArgs struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777.
	// Defaults to 0644. Directories within the path are not affected by this setting. This might be in
	// conflict with other options that affect the file mode, like fsGroup, and the result can be other
	// mode bits set.
	DefaultMode pulumi.IntInput `pulumi:"defaultMode"`

	// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be
	// projected into the volume as a file whose name is the key and content is the value. If
	// specified, the listed keys will be projected into the specified paths, and unlisted keys will
	// not be present. If a key is specified which is not present in the ConfigMap, the volume setup
	// will error unless it is marked optional. Paths must be relative and may not contain the '..'
	// path or start with '..'.
	Items KeyToPathArrayInput `pulumi:"items"`

	// Name of the referent. More info:
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`

	// Specify whether the ConfigMap or its keys must be defined
	Optional pulumi.BoolInput `pulumi:"optional"`

}

func (a ConfigMapVolumeSourceArgs) ElementType() reflect.Type {
	return _ConfigMapVolumeSourceType
}

func (a ConfigMapVolumeSourceArgs) ToConfigMapVolumeSourceOutput() ConfigMapVolumeSourceOutput {
	return pulumi.ToOutput(a).(ConfigMapVolumeSourceOutput)
}

func (a ConfigMapVolumeSourceArgs) ToConfigMapVolumeSourceOutputWithContext(ctx context.Context) ConfigMapVolumeSourceOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ConfigMapVolumeSourceOutput)
}

// ConfigMapVolumeSourceOutput is an output type that resolves to a Input.
type ConfigMapVolumeSourceOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ConfigMapVolumeSourceOutput{}) }

func (ConfigMapVolumeSourceOutput) ElementType() reflect.Type {
	return _ConfigMapVolumeSourceType
}

func (o ConfigMapVolumeSourceOutput) DefaultMode() pulumi.IntOutput {
	return o.Apply(func(v ConfigMapVolumeSource) *int {
		return v.DefaultMode
	}).(pulumi.IntOutput)
}

func (o ConfigMapVolumeSourceOutput) Items() KeyToPathArrayOutput {
	return o.Apply(func(v ConfigMapVolumeSource) []KeyToPath {
		return v.Items
	}).(KeyToPathArrayOutput)
}

func (o ConfigMapVolumeSourceOutput) Name() pulumi.StringOutput {
	return o.Apply(func(v ConfigMapVolumeSource) *string {
		return v.Name
	}).(pulumi.StringOutput)
}

func (o ConfigMapVolumeSourceOutput) Optional() pulumi.BoolOutput {
	return o.Apply(func(v ConfigMapVolumeSource) *bool {
		return v.Optional
	}).(pulumi.BoolOutput)
}

