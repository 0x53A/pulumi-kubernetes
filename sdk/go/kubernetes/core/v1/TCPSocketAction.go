// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// TCPSocketAction describes an action based on opening a socket
type TCPSocketAction struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`

	// Number or name of the port to access on the container. Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port interface{} `pulumi:"port"`

}

var _TCPSocketActionType = reflect.TypeOf((*TCPSocketAction)(nil)).Elem()

// TCPSocketActionInput represents an input type that resolves to a TCPSocketAction.
type TCPSocketActionInput interface {
	ElementType() reflect.Type

	ToTCPSocketActionOutput() TCPSocketActionOutput
	ToTCPSocketActionOutputWithContext(ctx context.Context) TCPSocketActionOutput
}

// TCPSocketActionArgs is a TCPSocketActionInput whose fields are all Input types.
type TCPSocketActionArgs struct {
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port pulumi.Input `pulumi:"port"`

	// Optional: Host name to connect to, defaults to the pod IP.
	Host pulumi.StringInput `pulumi:"host"`

}

func (a TCPSocketActionArgs) ElementType() reflect.Type {
	return _TCPSocketActionType
}

func (a TCPSocketActionArgs) ToTCPSocketActionOutput() TCPSocketActionOutput {
	return pulumi.ToOutput(a).(TCPSocketActionOutput)
}

func (a TCPSocketActionArgs) ToTCPSocketActionOutputWithContext(ctx context.Context) TCPSocketActionOutput {
	return pulumi.ToOutputWithContext(ctx, a).(TCPSocketActionOutput)
}

// TCPSocketActionOutput is an output type that resolves to a Input.
type TCPSocketActionOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(TCPSocketActionOutput{}) }

func (TCPSocketActionOutput) ElementType() reflect.Type {
	return _TCPSocketActionType
}

func (o TCPSocketActionOutput) Host() pulumi.StringOutput {
	return o.Apply(func(v TCPSocketAction) *string {
		return v.Host
	}).(pulumi.StringOutput)
}

func (o TCPSocketActionOutput) Port() pulumi.AnyOutput {
	return o.Apply(func(v TCPSocketAction) interface{} {
		return v.Port
	}).(pulumi.AnyOutput)
}

