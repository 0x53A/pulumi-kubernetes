// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// LimitRangeItem defines a min/max usage limit for any resource that matches on kind.
type LimitRangeItem struct {
	// Default resource requirement limit value by resource name if resource limit is omitted.
	Default map[string]string `pulumi:"default"`

	// DefaultRequest is the default resource requirement request value by resource name if resource
	// request is omitted.
	DefaultRequest map[string]string `pulumi:"defaultRequest"`

	// Max usage constraints on this kind by resource name.
	Max map[string]string `pulumi:"max"`

	// MaxLimitRequestRatio if specified, the named resource must have a request and limit that are
	// both non-zero where limit divided by request is less than or equal to the enumerated value; this
	// represents the max burst for the named resource.
	MaxLimitRequestRatio map[string]string `pulumi:"maxLimitRequestRatio"`

	// Min usage constraints on this kind by resource name.
	Min map[string]string `pulumi:"min"`

	// Type of resource that this limit applies to.
	Type *string `pulumi:"type"`

}

var _LimitRangeItemType = reflect.TypeOf((*LimitRangeItem)(nil)).Elem()

// LimitRangeItemInput represents an input type that resolves to a LimitRangeItem.
type LimitRangeItemInput interface {
	ElementType() reflect.Type

	ToLimitRangeItemOutput() LimitRangeItemOutput
	ToLimitRangeItemOutputWithContext(ctx context.Context) LimitRangeItemOutput
}

// LimitRangeItemArgs is a LimitRangeItemInput whose fields are all Input types.
type LimitRangeItemArgs struct {
	// Default resource requirement limit value by resource name if resource limit is omitted.
	Default pulumi.StringMapInput `pulumi:"default"`

	// DefaultRequest is the default resource requirement request value by resource name if resource
	// request is omitted.
	DefaultRequest pulumi.StringMapInput `pulumi:"defaultRequest"`

	// Max usage constraints on this kind by resource name.
	Max pulumi.StringMapInput `pulumi:"max"`

	// MaxLimitRequestRatio if specified, the named resource must have a request and limit that are
	// both non-zero where limit divided by request is less than or equal to the enumerated value; this
	// represents the max burst for the named resource.
	MaxLimitRequestRatio pulumi.StringMapInput `pulumi:"maxLimitRequestRatio"`

	// Min usage constraints on this kind by resource name.
	Min pulumi.StringMapInput `pulumi:"min"`

	// Type of resource that this limit applies to.
	Type pulumi.StringInput `pulumi:"type"`

}

func (a LimitRangeItemArgs) ElementType() reflect.Type {
	return _LimitRangeItemType
}

func (a LimitRangeItemArgs) ToLimitRangeItemOutput() LimitRangeItemOutput {
	return pulumi.ToOutput(a).(LimitRangeItemOutput)
}

func (a LimitRangeItemArgs) ToLimitRangeItemOutputWithContext(ctx context.Context) LimitRangeItemOutput {
	return pulumi.ToOutputWithContext(ctx, a).(LimitRangeItemOutput)
}

// LimitRangeItemOutput is an output type that resolves to a Input.
type LimitRangeItemOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(LimitRangeItemOutput{}) }

func (LimitRangeItemOutput) ElementType() reflect.Type {
	return _LimitRangeItemType
}

func (o LimitRangeItemOutput) Default() pulumi.StringMapOutput {
	return o.Apply(func(v LimitRangeItem) map[string]string {
		return v.Default
	}).(pulumi.StringMapOutput)
}

func (o LimitRangeItemOutput) DefaultRequest() pulumi.StringMapOutput {
	return o.Apply(func(v LimitRangeItem) map[string]string {
		return v.DefaultRequest
	}).(pulumi.StringMapOutput)
}

func (o LimitRangeItemOutput) Max() pulumi.StringMapOutput {
	return o.Apply(func(v LimitRangeItem) map[string]string {
		return v.Max
	}).(pulumi.StringMapOutput)
}

func (o LimitRangeItemOutput) MaxLimitRequestRatio() pulumi.StringMapOutput {
	return o.Apply(func(v LimitRangeItem) map[string]string {
		return v.MaxLimitRequestRatio
	}).(pulumi.StringMapOutput)
}

func (o LimitRangeItemOutput) Min() pulumi.StringMapOutput {
	return o.Apply(func(v LimitRangeItem) map[string]string {
		return v.Min
	}).(pulumi.StringMapOutput)
}

func (o LimitRangeItemOutput) Type() pulumi.StringOutput {
	return o.Apply(func(v LimitRangeItem) *string {
		return v.Type
	}).(pulumi.StringOutput)
}

var _LimitRangeItemArrayType = reflect.TypeOf((*[]LimitRangeItem)(nil)).Elem()

type LimitRangeItemArrayInput interface {
	ElementType() reflect.Type

	ToLimitRangeItemArrayOutput() LimitRangeItemArrayOutput
	ToLimitRangeItemArrayOutputWithContext(ctx context.Context) LimitRangeItemArrayOutput
}

type LimitRangeItemArray []LimitRangeItemInput

func (a LimitRangeItemArray) ElementType() reflect.Type {
	return _LimitRangeItemArrayType
}

func (a LimitRangeItemArray) ToLimitRangeItemArrayOutput() LimitRangeItemArrayOutput {
	return pulumi.ToOutput(a).(LimitRangeItemArrayOutput)
}

func (a LimitRangeItemArray) ToLimitRangeItemArrayOutputWithContext(ctx context.Context) LimitRangeItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(LimitRangeItemArrayOutput)
}

type LimitRangeItemArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(LimitRangeItemArrayOutput{}) }

func (LimitRangeItemArrayOutput) ElementType() reflect.Type {
	return _LimitRangeItemArrayType
}

func (o LimitRangeItemArrayOutput) Index(i pulumi.IntInput) LimitRangeItemOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) LimitRangeItem {
		return vs[0].([]LimitRangeItem)[vs[1].(int)]
	}).(LimitRangeItemOutput)
}
