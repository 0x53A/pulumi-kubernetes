// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	metaV1 "github.com/pulumi/pulumi-kubernetes/sdk/go/kubernetes/meta/v1"
)

// ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems,
// for an identity * a principal that can be authenticated and authorized * a set of secrets
type ServiceAccount struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`

	// AutomountServiceAccountToken indicates whether pods running as this service account should have
	// an API token automatically mounted. Can be overridden at the pod level.
	AutomountServiceAccountToken pulumi.BoolOutput `pulumi:"automountServiceAccountToken"`

	// ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any
	// images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets
	// because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the
	// kubelet. More info:
	// https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
	ImagePullSecrets LocalObjectReferenceArrayOutput `pulumi:"imagePullSecrets"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`

	// Standard object's metadata. More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metaV1.ObjectMetaOutput `pulumi:"metadata"`

	// Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount.
	// More info: https://kubernetes.io/docs/concepts/configuration/secret
	Secrets ObjectReferenceArrayOutput `pulumi:"secrets"`

}

// ServiceAccountArgs is the set of arguments needed to create a ServiceAccount resource.
type ServiceAccountArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`

	// AutomountServiceAccountToken indicates whether pods running as this service account should have
	// an API token automatically mounted. Can be overridden at the pod level.
	AutomountServiceAccountToken pulumi.BoolInput `pulumi:"automountServiceAccountToken"`

	// ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any
	// images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets
	// because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the
	// kubelet. More info:
	// https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
	ImagePullSecrets LocalObjectReferenceArrayInput `pulumi:"imagePullSecrets"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringInput `pulumi:"kind"`

	// Standard object's metadata. More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metaV1.ObjectMetaInput `pulumi:"metadata"`

	// Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount.
	// More info: https://kubernetes.io/docs/concepts/configuration/secret
	Secrets ObjectReferenceArrayInput `pulumi:"secrets"`

}

// NewServiceAccount creates a ServiceAccount resource with the given unique name, arguments, and options.
func NewServiceAccount(ctx *pulumi.Context, name string, args *ServiceAccountArgs, opts ...pulumi.ResourceOption) (*ServiceAccount, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		args.ApiVersion = pulumi.String("v1")
		args.Kind = pulumi.String("ServiceAccount")
		if i := args.ApiVersion; i != nil {
			inputs["apiVersion"] = i.ToStringOutput()
		}
		if i := args.AutomountServiceAccountToken; i != nil {
			inputs["automountServiceAccountToken"] = i.ToBoolOutput()
		}
		if i := args.ImagePullSecrets; i != nil {
			inputs["imagePullSecrets"] = i.ToLocalObjectReferenceArrayOutput()
		}
		if i := args.Kind; i != nil {
			inputs["kind"] = i.ToStringOutput()
		}
		if i := args.Metadata; i != nil {
			inputs["metadata"] = i.ToObjectMetaOutput()
		}
		if i := args.Secrets; i != nil {
			inputs["secrets"] = i.ToObjectReferenceArrayOutput()
		}
	}
	var resource ServiceAccount
	err := ctx.RegisterResource("kubernetes:core/v1:ServiceAccount", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceAccount gets an existing ServiceAccount resource's state with the given name and ID.
func GetServiceAccount(ctx *pulumi.Context, name string, id pulumi.IDInput, opts ...pulumi.ResourceOption) (*ServiceAccount, error) {
	var resource ServiceAccount
	err := ctx.ReadResource("kubernetes:core/v1:ServiceAccount", name, id, nil, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems,
// for an identity * a principal that can be authenticated and authorized * a set of secrets
type ServiceAccountProperty struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`

	// AutomountServiceAccountToken indicates whether pods running as this service account should have
	// an API token automatically mounted. Can be overridden at the pod level.
	AutomountServiceAccountToken *bool `pulumi:"automountServiceAccountToken"`

	// ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any
	// images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets
	// because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the
	// kubelet. More info:
	// https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
	ImagePullSecrets []LocalObjectReference `pulumi:"imagePullSecrets"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`

	// Standard object's metadata. More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metaV1.ObjectMeta `pulumi:"metadata"`

	// Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount.
	// More info: https://kubernetes.io/docs/concepts/configuration/secret
	Secrets []ObjectReference `pulumi:"secrets"`

}

var _ServiceAccountPropertyType = reflect.TypeOf((*ServiceAccountProperty)(nil)).Elem()

// ServiceAccountPropertyInput represents an input type that resolves to a ServiceAccountProperty.
type ServiceAccountPropertyInput interface {
	ElementType() reflect.Type

	ToServiceAccountPropertyOutput() ServiceAccountPropertyOutput
	ToServiceAccountPropertyOutputWithContext(ctx context.Context) ServiceAccountPropertyOutput
}

// ServiceAccountPropertyArgs is a ServiceAccountPropertyInput whose fields are all Input types.
type ServiceAccountPropertyArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`

	// AutomountServiceAccountToken indicates whether pods running as this service account should have
	// an API token automatically mounted. Can be overridden at the pod level.
	AutomountServiceAccountToken pulumi.BoolInput `pulumi:"automountServiceAccountToken"`

	// ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any
	// images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets
	// because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the
	// kubelet. More info:
	// https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
	ImagePullSecrets LocalObjectReferenceArrayInput `pulumi:"imagePullSecrets"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringInput `pulumi:"kind"`

	// Standard object's metadata. More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metaV1.ObjectMetaInput `pulumi:"metadata"`

	// Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount.
	// More info: https://kubernetes.io/docs/concepts/configuration/secret
	Secrets ObjectReferenceArrayInput `pulumi:"secrets"`

}

func (a ServiceAccountPropertyArgs) ElementType() reflect.Type {
	return _ServiceAccountPropertyType
}

func (a ServiceAccountPropertyArgs) ToServiceAccountPropertyOutput() ServiceAccountPropertyOutput {
	return pulumi.ToOutput(a).(ServiceAccountPropertyOutput)
}

func (a ServiceAccountPropertyArgs) ToServiceAccountPropertyOutputWithContext(ctx context.Context) ServiceAccountPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ServiceAccountPropertyOutput)
}

// ServiceAccountPropertyOutput is an output type that resolves to a Input.
type ServiceAccountPropertyOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ServiceAccountPropertyOutput{}) }

func (ServiceAccountPropertyOutput) ElementType() reflect.Type {
	return _ServiceAccountPropertyType
}

func (o ServiceAccountPropertyOutput) ApiVersion() pulumi.StringOutput {
	return o.Apply(func(v ServiceAccountProperty) *string {
		return v.ApiVersion
	}).(pulumi.StringOutput)
}

func (o ServiceAccountPropertyOutput) AutomountServiceAccountToken() pulumi.BoolOutput {
	return o.Apply(func(v ServiceAccountProperty) *bool {
		return v.AutomountServiceAccountToken
	}).(pulumi.BoolOutput)
}

func (o ServiceAccountPropertyOutput) ImagePullSecrets() LocalObjectReferenceArrayOutput {
	return o.Apply(func(v ServiceAccountProperty) []LocalObjectReference {
		return v.ImagePullSecrets
	}).(LocalObjectReferenceArrayOutput)
}

func (o ServiceAccountPropertyOutput) Kind() pulumi.StringOutput {
	return o.Apply(func(v ServiceAccountProperty) *string {
		return v.Kind
	}).(pulumi.StringOutput)
}

func (o ServiceAccountPropertyOutput) Metadata() metaV1.ObjectMetaOutput {
	return o.Apply(func(v ServiceAccountProperty) *metaV1.ObjectMeta {
		return v.Metadata
	}).(metaV1.ObjectMetaOutput)
}

func (o ServiceAccountPropertyOutput) Secrets() ObjectReferenceArrayOutput {
	return o.Apply(func(v ServiceAccountProperty) []ObjectReference {
		return v.Secrets
	}).(ObjectReferenceArrayOutput)
}

var _ServiceAccountPropertyArrayType = reflect.TypeOf((*[]ServiceAccountProperty)(nil)).Elem()

type ServiceAccountPropertyArrayInput interface {
	ElementType() reflect.Type

	ToServiceAccountPropertyArrayOutput() ServiceAccountPropertyArrayOutput
	ToServiceAccountPropertyArrayOutputWithContext(ctx context.Context) ServiceAccountPropertyArrayOutput
}

type ServiceAccountPropertyArray []ServiceAccountPropertyInput

func (a ServiceAccountPropertyArray) ElementType() reflect.Type {
	return _ServiceAccountPropertyArrayType
}

func (a ServiceAccountPropertyArray) ToServiceAccountPropertyArrayOutput() ServiceAccountPropertyArrayOutput {
	return pulumi.ToOutput(a).(ServiceAccountPropertyArrayOutput)
}

func (a ServiceAccountPropertyArray) ToServiceAccountPropertyArrayOutputWithContext(ctx context.Context) ServiceAccountPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ServiceAccountPropertyArrayOutput)
}

type ServiceAccountPropertyArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ServiceAccountPropertyArrayOutput{}) }

func (ServiceAccountPropertyArrayOutput) ElementType() reflect.Type {
	return _ServiceAccountPropertyArrayType
}

func (o ServiceAccountPropertyArrayOutput) Index(i pulumi.IntInput) ServiceAccountPropertyOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) ServiceAccountProperty {
		return vs[0].([]ServiceAccountProperty)[vs[1].(int)]
	}).(ServiceAccountPropertyOutput)
}
