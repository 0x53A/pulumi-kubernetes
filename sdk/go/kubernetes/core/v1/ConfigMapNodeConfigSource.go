// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source
// for the Node.
type ConfigMapNodeConfigSource struct {
	// KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the
	// KubeletConfiguration structure This field is required in all cases.
	KubeletConfigKey string `pulumi:"kubeletConfigKey"`

	// Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.
	Name string `pulumi:"name"`

	// Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all
	// cases.
	Namespace string `pulumi:"namespace"`

	// ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is
	// forbidden in Node.Spec, and required in Node.Status.
	ResourceVersion *string `pulumi:"resourceVersion"`

	// UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and
	// required in Node.Status.
	Uid *string `pulumi:"uid"`

}

var _ConfigMapNodeConfigSourceType = reflect.TypeOf((*ConfigMapNodeConfigSource)(nil)).Elem()

// ConfigMapNodeConfigSourceInput represents an input type that resolves to a ConfigMapNodeConfigSource.
type ConfigMapNodeConfigSourceInput interface {
	ElementType() reflect.Type

	ToConfigMapNodeConfigSourceOutput() ConfigMapNodeConfigSourceOutput
	ToConfigMapNodeConfigSourceOutputWithContext(ctx context.Context) ConfigMapNodeConfigSourceOutput
}

// ConfigMapNodeConfigSourceArgs is a ConfigMapNodeConfigSourceInput whose fields are all Input types.
type ConfigMapNodeConfigSourceArgs struct {
	// KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the
	// KubeletConfiguration structure This field is required in all cases.
	KubeletConfigKey pulumi.StringInput `pulumi:"kubeletConfigKey"`

	// Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.
	Name pulumi.StringInput `pulumi:"name"`

	// Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all
	// cases.
	Namespace pulumi.StringInput `pulumi:"namespace"`

	// ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is
	// forbidden in Node.Spec, and required in Node.Status.
	ResourceVersion pulumi.StringInput `pulumi:"resourceVersion"`

	// UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and
	// required in Node.Status.
	Uid pulumi.StringInput `pulumi:"uid"`

}

func (a ConfigMapNodeConfigSourceArgs) ElementType() reflect.Type {
	return _ConfigMapNodeConfigSourceType
}

func (a ConfigMapNodeConfigSourceArgs) ToConfigMapNodeConfigSourceOutput() ConfigMapNodeConfigSourceOutput {
	return pulumi.ToOutput(a).(ConfigMapNodeConfigSourceOutput)
}

func (a ConfigMapNodeConfigSourceArgs) ToConfigMapNodeConfigSourceOutputWithContext(ctx context.Context) ConfigMapNodeConfigSourceOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ConfigMapNodeConfigSourceOutput)
}

// ConfigMapNodeConfigSourceOutput is an output type that resolves to a Input.
type ConfigMapNodeConfigSourceOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ConfigMapNodeConfigSourceOutput{}) }

func (ConfigMapNodeConfigSourceOutput) ElementType() reflect.Type {
	return _ConfigMapNodeConfigSourceType
}

func (o ConfigMapNodeConfigSourceOutput) KubeletConfigKey() pulumi.StringOutput {
	return o.Apply(func(v ConfigMapNodeConfigSource) string {
		return v.KubeletConfigKey
	}).(pulumi.StringOutput)
}

func (o ConfigMapNodeConfigSourceOutput) Name() pulumi.StringOutput {
	return o.Apply(func(v ConfigMapNodeConfigSource) string {
		return v.Name
	}).(pulumi.StringOutput)
}

func (o ConfigMapNodeConfigSourceOutput) Namespace() pulumi.StringOutput {
	return o.Apply(func(v ConfigMapNodeConfigSource) string {
		return v.Namespace
	}).(pulumi.StringOutput)
}

func (o ConfigMapNodeConfigSourceOutput) ResourceVersion() pulumi.StringOutput {
	return o.Apply(func(v ConfigMapNodeConfigSource) *string {
		return v.ResourceVersion
	}).(pulumi.StringOutput)
}

func (o ConfigMapNodeConfigSourceOutput) Uid() pulumi.StringOutput {
	return o.Apply(func(v ConfigMapNodeConfigSource) *string {
		return v.Uid
	}).(pulumi.StringOutput)
}

