// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// ContainerStateRunning is a running state of a container.
type ContainerStateRunning struct {
	// Time at which the container was last (re-)started
	StartedAt *string `pulumi:"startedAt"`

}

var _ContainerStateRunningType = reflect.TypeOf((*ContainerStateRunning)(nil)).Elem()

// ContainerStateRunningInput represents an input type that resolves to a ContainerStateRunning.
type ContainerStateRunningInput interface {
	ElementType() reflect.Type

	ToContainerStateRunningOutput() ContainerStateRunningOutput
	ToContainerStateRunningOutputWithContext(ctx context.Context) ContainerStateRunningOutput
}

// ContainerStateRunningArgs is a ContainerStateRunningInput whose fields are all Input types.
type ContainerStateRunningArgs struct {
	// Time at which the container was last (re-)started
	StartedAt pulumi.StringInput `pulumi:"startedAt"`

}

func (a ContainerStateRunningArgs) ElementType() reflect.Type {
	return _ContainerStateRunningType
}

func (a ContainerStateRunningArgs) ToContainerStateRunningOutput() ContainerStateRunningOutput {
	return pulumi.ToOutput(a).(ContainerStateRunningOutput)
}

func (a ContainerStateRunningArgs) ToContainerStateRunningOutputWithContext(ctx context.Context) ContainerStateRunningOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ContainerStateRunningOutput)
}

// ContainerStateRunningOutput is an output type that resolves to a Input.
type ContainerStateRunningOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ContainerStateRunningOutput{}) }

func (ContainerStateRunningOutput) ElementType() reflect.Type {
	return _ContainerStateRunningType
}

func (o ContainerStateRunningOutput) StartedAt() pulumi.StringOutput {
	return o.Apply(func(v ContainerStateRunning) *string {
		return v.StartedAt
	}).(pulumi.StringOutput)
}

