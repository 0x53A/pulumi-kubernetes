// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// ScaleIOVolumeSource represents a persistent ScaleIO volume
type ScaleIOVolumeSource struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex.
	// "ext4", "xfs", "ntfs". Default is "xfs".
	FsType *string `pulumi:"fsType"`

	// The host address of the ScaleIO API Gateway.
	Gateway string `pulumi:"gateway"`

	// The name of the ScaleIO Protection Domain for the configured storage.
	ProtectionDomain *string `pulumi:"protectionDomain"`

	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`

	// SecretRef references to the secret for ScaleIO user and other sensitive information. If this is
	// not provided, Login operation will fail.
	SecretRef LocalObjectReference `pulumi:"secretRef"`

	// Flag to enable/disable SSL communication with Gateway, default false
	SslEnabled *bool `pulumi:"sslEnabled"`

	// Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
	// Default is ThinProvisioned.
	StorageMode *string `pulumi:"storageMode"`

	// The ScaleIO Storage Pool associated with the protection domain.
	StoragePool *string `pulumi:"storagePool"`

	// The name of the storage system as configured in ScaleIO.
	System string `pulumi:"system"`

	// The name of a volume already created in the ScaleIO system that is associated with this volume
	// source.
	VolumeName *string `pulumi:"volumeName"`

}

var _ScaleIOVolumeSourceType = reflect.TypeOf((*ScaleIOVolumeSource)(nil)).Elem()

// ScaleIOVolumeSourceInput represents an input type that resolves to a ScaleIOVolumeSource.
type ScaleIOVolumeSourceInput interface {
	ElementType() reflect.Type

	ToScaleIOVolumeSourceOutput() ScaleIOVolumeSourceOutput
	ToScaleIOVolumeSourceOutputWithContext(ctx context.Context) ScaleIOVolumeSourceOutput
}

// ScaleIOVolumeSourceArgs is a ScaleIOVolumeSourceInput whose fields are all Input types.
type ScaleIOVolumeSourceArgs struct {
	// The host address of the ScaleIO API Gateway.
	Gateway pulumi.StringInput `pulumi:"gateway"`

	// SecretRef references to the secret for ScaleIO user and other sensitive information. If this is
	// not provided, Login operation will fail.
	SecretRef LocalObjectReferenceInput `pulumi:"secretRef"`

	// The name of the storage system as configured in ScaleIO.
	System pulumi.StringInput `pulumi:"system"`

	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex.
	// "ext4", "xfs", "ntfs". Default is "xfs".
	FsType pulumi.StringInput `pulumi:"fsType"`

	// The name of the ScaleIO Protection Domain for the configured storage.
	ProtectionDomain pulumi.StringInput `pulumi:"protectionDomain"`

	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolInput `pulumi:"readOnly"`

	// Flag to enable/disable SSL communication with Gateway, default false
	SslEnabled pulumi.BoolInput `pulumi:"sslEnabled"`

	// Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
	// Default is ThinProvisioned.
	StorageMode pulumi.StringInput `pulumi:"storageMode"`

	// The ScaleIO Storage Pool associated with the protection domain.
	StoragePool pulumi.StringInput `pulumi:"storagePool"`

	// The name of a volume already created in the ScaleIO system that is associated with this volume
	// source.
	VolumeName pulumi.StringInput `pulumi:"volumeName"`

}

func (a ScaleIOVolumeSourceArgs) ElementType() reflect.Type {
	return _ScaleIOVolumeSourceType
}

func (a ScaleIOVolumeSourceArgs) ToScaleIOVolumeSourceOutput() ScaleIOVolumeSourceOutput {
	return pulumi.ToOutput(a).(ScaleIOVolumeSourceOutput)
}

func (a ScaleIOVolumeSourceArgs) ToScaleIOVolumeSourceOutputWithContext(ctx context.Context) ScaleIOVolumeSourceOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ScaleIOVolumeSourceOutput)
}

// ScaleIOVolumeSourceOutput is an output type that resolves to a Input.
type ScaleIOVolumeSourceOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ScaleIOVolumeSourceOutput{}) }

func (ScaleIOVolumeSourceOutput) ElementType() reflect.Type {
	return _ScaleIOVolumeSourceType
}

func (o ScaleIOVolumeSourceOutput) FsType() pulumi.StringOutput {
	return o.Apply(func(v ScaleIOVolumeSource) *string {
		return v.FsType
	}).(pulumi.StringOutput)
}

func (o ScaleIOVolumeSourceOutput) Gateway() pulumi.StringOutput {
	return o.Apply(func(v ScaleIOVolumeSource) string {
		return v.Gateway
	}).(pulumi.StringOutput)
}

func (o ScaleIOVolumeSourceOutput) ProtectionDomain() pulumi.StringOutput {
	return o.Apply(func(v ScaleIOVolumeSource) *string {
		return v.ProtectionDomain
	}).(pulumi.StringOutput)
}

func (o ScaleIOVolumeSourceOutput) ReadOnly() pulumi.BoolOutput {
	return o.Apply(func(v ScaleIOVolumeSource) *bool {
		return v.ReadOnly
	}).(pulumi.BoolOutput)
}

func (o ScaleIOVolumeSourceOutput) SecretRef() LocalObjectReferenceOutput {
	return o.Apply(func(v ScaleIOVolumeSource) LocalObjectReference {
		return v.SecretRef
	}).(LocalObjectReferenceOutput)
}

func (o ScaleIOVolumeSourceOutput) SslEnabled() pulumi.BoolOutput {
	return o.Apply(func(v ScaleIOVolumeSource) *bool {
		return v.SslEnabled
	}).(pulumi.BoolOutput)
}

func (o ScaleIOVolumeSourceOutput) StorageMode() pulumi.StringOutput {
	return o.Apply(func(v ScaleIOVolumeSource) *string {
		return v.StorageMode
	}).(pulumi.StringOutput)
}

func (o ScaleIOVolumeSourceOutput) StoragePool() pulumi.StringOutput {
	return o.Apply(func(v ScaleIOVolumeSource) *string {
		return v.StoragePool
	}).(pulumi.StringOutput)
}

func (o ScaleIOVolumeSourceOutput) System() pulumi.StringOutput {
	return o.Apply(func(v ScaleIOVolumeSource) string {
		return v.System
	}).(pulumi.StringOutput)
}

func (o ScaleIOVolumeSourceOutput) VolumeName() pulumi.StringOutput {
	return o.Apply(func(v ScaleIOVolumeSource) *string {
		return v.VolumeName
	}).(pulumi.StringOutput)
}

