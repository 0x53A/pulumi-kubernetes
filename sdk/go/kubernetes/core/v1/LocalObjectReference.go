// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// LocalObjectReference contains enough information to let you locate the referenced object inside
// the same namespace.
type LocalObjectReference struct {
	// Name of the referent. More info:
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`

}

var _LocalObjectReferenceType = reflect.TypeOf((*LocalObjectReference)(nil)).Elem()

// LocalObjectReferenceInput represents an input type that resolves to a LocalObjectReference.
type LocalObjectReferenceInput interface {
	ElementType() reflect.Type

	ToLocalObjectReferenceOutput() LocalObjectReferenceOutput
	ToLocalObjectReferenceOutputWithContext(ctx context.Context) LocalObjectReferenceOutput
}

// LocalObjectReferenceArgs is a LocalObjectReferenceInput whose fields are all Input types.
type LocalObjectReferenceArgs struct {
	// Name of the referent. More info:
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`

}

func (a LocalObjectReferenceArgs) ElementType() reflect.Type {
	return _LocalObjectReferenceType
}

func (a LocalObjectReferenceArgs) ToLocalObjectReferenceOutput() LocalObjectReferenceOutput {
	return pulumi.ToOutput(a).(LocalObjectReferenceOutput)
}

func (a LocalObjectReferenceArgs) ToLocalObjectReferenceOutputWithContext(ctx context.Context) LocalObjectReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, a).(LocalObjectReferenceOutput)
}

// LocalObjectReferenceOutput is an output type that resolves to a Input.
type LocalObjectReferenceOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(LocalObjectReferenceOutput{}) }

func (LocalObjectReferenceOutput) ElementType() reflect.Type {
	return _LocalObjectReferenceType
}

func (o LocalObjectReferenceOutput) Name() pulumi.StringOutput {
	return o.Apply(func(v LocalObjectReference) *string {
		return v.Name
	}).(pulumi.StringOutput)
}

var _LocalObjectReferenceArrayType = reflect.TypeOf((*[]LocalObjectReference)(nil)).Elem()

type LocalObjectReferenceArrayInput interface {
	ElementType() reflect.Type

	ToLocalObjectReferenceArrayOutput() LocalObjectReferenceArrayOutput
	ToLocalObjectReferenceArrayOutputWithContext(ctx context.Context) LocalObjectReferenceArrayOutput
}

type LocalObjectReferenceArray []LocalObjectReferenceInput

func (a LocalObjectReferenceArray) ElementType() reflect.Type {
	return _LocalObjectReferenceArrayType
}

func (a LocalObjectReferenceArray) ToLocalObjectReferenceArrayOutput() LocalObjectReferenceArrayOutput {
	return pulumi.ToOutput(a).(LocalObjectReferenceArrayOutput)
}

func (a LocalObjectReferenceArray) ToLocalObjectReferenceArrayOutputWithContext(ctx context.Context) LocalObjectReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(LocalObjectReferenceArrayOutput)
}

type LocalObjectReferenceArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(LocalObjectReferenceArrayOutput{}) }

func (LocalObjectReferenceArrayOutput) ElementType() reflect.Type {
	return _LocalObjectReferenceArrayType
}

func (o LocalObjectReferenceArrayOutput) Index(i pulumi.IntInput) LocalObjectReferenceOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) LocalObjectReference {
		return vs[0].([]LocalObjectReference)[vs[1].(int)]
	}).(LocalObjectReferenceOutput)
}
