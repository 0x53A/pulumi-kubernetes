// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	metaV1 "github.com/pulumi/pulumi-kubernetes/sdk/go/kubernetes/meta/v1"
)

// ComponentStatus (and ComponentStatusList) holds the cluster validation info.
type ComponentStatus struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`

	// List of component conditions observed
	Conditions ComponentConditionArrayOutput `pulumi:"conditions"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`

	// Standard object's metadata. More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metaV1.ObjectMetaOutput `pulumi:"metadata"`

}

// ComponentStatusArgs is the set of arguments needed to create a ComponentStatus resource.
type ComponentStatusArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`

	// List of component conditions observed
	Conditions ComponentConditionArrayInput `pulumi:"conditions"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringInput `pulumi:"kind"`

	// Standard object's metadata. More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metaV1.ObjectMetaInput `pulumi:"metadata"`

}

// NewComponentStatus creates a ComponentStatus resource with the given unique name, arguments, and options.
func NewComponentStatus(ctx *pulumi.Context, name string, args *ComponentStatusArgs, opts ...pulumi.ResourceOption) (*ComponentStatus, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		args.ApiVersion = pulumi.String("v1")
		args.Kind = pulumi.String("ComponentStatus")
		if i := args.ApiVersion; i != nil {
			inputs["apiVersion"] = i.ToStringOutput()
		}
		if i := args.Conditions; i != nil {
			inputs["conditions"] = i.ToComponentConditionArrayOutput()
		}
		if i := args.Kind; i != nil {
			inputs["kind"] = i.ToStringOutput()
		}
		if i := args.Metadata; i != nil {
			inputs["metadata"] = i.ToObjectMetaOutput()
		}
	}
	var resource ComponentStatus
	err := ctx.RegisterResource("kubernetes:core/v1:ComponentStatus", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComponentStatus gets an existing ComponentStatus resource's state with the given name and ID.
func GetComponentStatus(ctx *pulumi.Context, name string, id pulumi.IDInput, opts ...pulumi.ResourceOption) (*ComponentStatus, error) {
	var resource ComponentStatus
	err := ctx.ReadResource("kubernetes:core/v1:ComponentStatus", name, id, nil, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// ComponentStatus (and ComponentStatusList) holds the cluster validation info.
type ComponentStatusProperty struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`

	// List of component conditions observed
	Conditions []ComponentCondition `pulumi:"conditions"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`

	// Standard object's metadata. More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metaV1.ObjectMeta `pulumi:"metadata"`

}

var _ComponentStatusPropertyType = reflect.TypeOf((*ComponentStatusProperty)(nil)).Elem()

// ComponentStatusPropertyInput represents an input type that resolves to a ComponentStatusProperty.
type ComponentStatusPropertyInput interface {
	ElementType() reflect.Type

	ToComponentStatusPropertyOutput() ComponentStatusPropertyOutput
	ToComponentStatusPropertyOutputWithContext(ctx context.Context) ComponentStatusPropertyOutput
}

// ComponentStatusPropertyArgs is a ComponentStatusPropertyInput whose fields are all Input types.
type ComponentStatusPropertyArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`

	// List of component conditions observed
	Conditions ComponentConditionArrayInput `pulumi:"conditions"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringInput `pulumi:"kind"`

	// Standard object's metadata. More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metaV1.ObjectMetaInput `pulumi:"metadata"`

}

func (a ComponentStatusPropertyArgs) ElementType() reflect.Type {
	return _ComponentStatusPropertyType
}

func (a ComponentStatusPropertyArgs) ToComponentStatusPropertyOutput() ComponentStatusPropertyOutput {
	return pulumi.ToOutput(a).(ComponentStatusPropertyOutput)
}

func (a ComponentStatusPropertyArgs) ToComponentStatusPropertyOutputWithContext(ctx context.Context) ComponentStatusPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ComponentStatusPropertyOutput)
}

// ComponentStatusPropertyOutput is an output type that resolves to a Input.
type ComponentStatusPropertyOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ComponentStatusPropertyOutput{}) }

func (ComponentStatusPropertyOutput) ElementType() reflect.Type {
	return _ComponentStatusPropertyType
}

func (o ComponentStatusPropertyOutput) ApiVersion() pulumi.StringOutput {
	return o.Apply(func(v ComponentStatusProperty) *string {
		return v.ApiVersion
	}).(pulumi.StringOutput)
}

func (o ComponentStatusPropertyOutput) Conditions() ComponentConditionArrayOutput {
	return o.Apply(func(v ComponentStatusProperty) []ComponentCondition {
		return v.Conditions
	}).(ComponentConditionArrayOutput)
}

func (o ComponentStatusPropertyOutput) Kind() pulumi.StringOutput {
	return o.Apply(func(v ComponentStatusProperty) *string {
		return v.Kind
	}).(pulumi.StringOutput)
}

func (o ComponentStatusPropertyOutput) Metadata() metaV1.ObjectMetaOutput {
	return o.Apply(func(v ComponentStatusProperty) *metaV1.ObjectMeta {
		return v.Metadata
	}).(metaV1.ObjectMetaOutput)
}

var _ComponentStatusPropertyArrayType = reflect.TypeOf((*[]ComponentStatusProperty)(nil)).Elem()

type ComponentStatusPropertyArrayInput interface {
	ElementType() reflect.Type

	ToComponentStatusPropertyArrayOutput() ComponentStatusPropertyArrayOutput
	ToComponentStatusPropertyArrayOutputWithContext(ctx context.Context) ComponentStatusPropertyArrayOutput
}

type ComponentStatusPropertyArray []ComponentStatusPropertyInput

func (a ComponentStatusPropertyArray) ElementType() reflect.Type {
	return _ComponentStatusPropertyArrayType
}

func (a ComponentStatusPropertyArray) ToComponentStatusPropertyArrayOutput() ComponentStatusPropertyArrayOutput {
	return pulumi.ToOutput(a).(ComponentStatusPropertyArrayOutput)
}

func (a ComponentStatusPropertyArray) ToComponentStatusPropertyArrayOutputWithContext(ctx context.Context) ComponentStatusPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ComponentStatusPropertyArrayOutput)
}

type ComponentStatusPropertyArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ComponentStatusPropertyArrayOutput{}) }

func (ComponentStatusPropertyArrayOutput) ElementType() reflect.Type {
	return _ComponentStatusPropertyArrayType
}

func (o ComponentStatusPropertyArrayOutput) Index(i pulumi.IntInput) ComponentStatusPropertyOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) ComponentStatusProperty {
		return vs[0].([]ComponentStatusProperty)[vs[1].(int)]
	}).(ComponentStatusPropertyOutput)
}
