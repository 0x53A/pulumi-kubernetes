// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Represents a Persistent Disk resource in AWS.
// 
// An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS
// zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes
// support ownership management and SELinux relabeling.
type AWSElasticBlockStoreVolumeSource struct {
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is
	// supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to
	// be "ext4" if unspecified. More info:
	// https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	FsType *string `pulumi:"fsType"`

	// The partition in the volume that you want to mount. If omitted, the default is to mount by
	// volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the
	// volume partition for /dev/sda is "0" (or you can leave the property empty).
	Partition *int `pulumi:"partition"`

	// Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the
	// default is "false". More info:
	// https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	ReadOnly *bool `pulumi:"readOnly"`

	// Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info:
	// https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	VolumeID string `pulumi:"volumeID"`

}

var _AWSElasticBlockStoreVolumeSourceType = reflect.TypeOf((*AWSElasticBlockStoreVolumeSource)(nil)).Elem()

// AWSElasticBlockStoreVolumeSourceInput represents an input type that resolves to a AWSElasticBlockStoreVolumeSource.
type AWSElasticBlockStoreVolumeSourceInput interface {
	ElementType() reflect.Type

	ToAWSElasticBlockStoreVolumeSourceOutput() AWSElasticBlockStoreVolumeSourceOutput
	ToAWSElasticBlockStoreVolumeSourceOutputWithContext(ctx context.Context) AWSElasticBlockStoreVolumeSourceOutput
}

// AWSElasticBlockStoreVolumeSourceArgs is a AWSElasticBlockStoreVolumeSourceInput whose fields are all Input types.
type AWSElasticBlockStoreVolumeSourceArgs struct {
	// Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info:
	// https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	VolumeID pulumi.StringInput `pulumi:"volumeID"`

	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is
	// supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to
	// be "ext4" if unspecified. More info:
	// https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	FsType pulumi.StringInput `pulumi:"fsType"`

	// The partition in the volume that you want to mount. If omitted, the default is to mount by
	// volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the
	// volume partition for /dev/sda is "0" (or you can leave the property empty).
	Partition pulumi.IntInput `pulumi:"partition"`

	// Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the
	// default is "false". More info:
	// https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	ReadOnly pulumi.BoolInput `pulumi:"readOnly"`

}

func (a AWSElasticBlockStoreVolumeSourceArgs) ElementType() reflect.Type {
	return _AWSElasticBlockStoreVolumeSourceType
}

func (a AWSElasticBlockStoreVolumeSourceArgs) ToAWSElasticBlockStoreVolumeSourceOutput() AWSElasticBlockStoreVolumeSourceOutput {
	return pulumi.ToOutput(a).(AWSElasticBlockStoreVolumeSourceOutput)
}

func (a AWSElasticBlockStoreVolumeSourceArgs) ToAWSElasticBlockStoreVolumeSourceOutputWithContext(ctx context.Context) AWSElasticBlockStoreVolumeSourceOutput {
	return pulumi.ToOutputWithContext(ctx, a).(AWSElasticBlockStoreVolumeSourceOutput)
}

// AWSElasticBlockStoreVolumeSourceOutput is an output type that resolves to a Input.
type AWSElasticBlockStoreVolumeSourceOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(AWSElasticBlockStoreVolumeSourceOutput{}) }

func (AWSElasticBlockStoreVolumeSourceOutput) ElementType() reflect.Type {
	return _AWSElasticBlockStoreVolumeSourceType
}

func (o AWSElasticBlockStoreVolumeSourceOutput) FsType() pulumi.StringOutput {
	return o.Apply(func(v AWSElasticBlockStoreVolumeSource) *string {
		return v.FsType
	}).(pulumi.StringOutput)
}

func (o AWSElasticBlockStoreVolumeSourceOutput) Partition() pulumi.IntOutput {
	return o.Apply(func(v AWSElasticBlockStoreVolumeSource) *int {
		return v.Partition
	}).(pulumi.IntOutput)
}

func (o AWSElasticBlockStoreVolumeSourceOutput) ReadOnly() pulumi.BoolOutput {
	return o.Apply(func(v AWSElasticBlockStoreVolumeSource) *bool {
		return v.ReadOnly
	}).(pulumi.BoolOutput)
}

func (o AWSElasticBlockStoreVolumeSourceOutput) VolumeID() pulumi.StringOutput {
	return o.Apply(func(v AWSElasticBlockStoreVolumeSource) string {
		return v.VolumeID
	}).(pulumi.StringOutput)
}

