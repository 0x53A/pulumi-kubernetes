// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints
// is the Cartesian product of Addresses x Ports. For example, given:
//   {
//     Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
//     Ports:     [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
//   }
// The resulting set of endpoints can be viewed as:
//     a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],
//     b: [ 10.10.1.1:309, 10.10.2.2:309 ]
type EndpointSubset struct {
	// IP addresses which offer the related ports that are marked as ready. These endpoints should be
	// considered safe for load balancers and clients to utilize.
	Addresses []EndpointAddress `pulumi:"addresses"`

	// IP addresses which offer the related ports but are not currently marked as ready because they
	// have not yet finished starting, have recently failed a readiness check, or have recently failed
	// a liveness check.
	NotReadyAddresses []EndpointAddress `pulumi:"notReadyAddresses"`

	// Port numbers available on the related IP addresses.
	Ports []EndpointPort `pulumi:"ports"`

}

var _EndpointSubsetType = reflect.TypeOf((*EndpointSubset)(nil)).Elem()

// EndpointSubsetInput represents an input type that resolves to a EndpointSubset.
type EndpointSubsetInput interface {
	ElementType() reflect.Type

	ToEndpointSubsetOutput() EndpointSubsetOutput
	ToEndpointSubsetOutputWithContext(ctx context.Context) EndpointSubsetOutput
}

// EndpointSubsetArgs is a EndpointSubsetInput whose fields are all Input types.
type EndpointSubsetArgs struct {
	// IP addresses which offer the related ports that are marked as ready. These endpoints should be
	// considered safe for load balancers and clients to utilize.
	Addresses EndpointAddressArrayInput `pulumi:"addresses"`

	// IP addresses which offer the related ports but are not currently marked as ready because they
	// have not yet finished starting, have recently failed a readiness check, or have recently failed
	// a liveness check.
	NotReadyAddresses EndpointAddressArrayInput `pulumi:"notReadyAddresses"`

	// Port numbers available on the related IP addresses.
	Ports EndpointPortArrayInput `pulumi:"ports"`

}

func (a EndpointSubsetArgs) ElementType() reflect.Type {
	return _EndpointSubsetType
}

func (a EndpointSubsetArgs) ToEndpointSubsetOutput() EndpointSubsetOutput {
	return pulumi.ToOutput(a).(EndpointSubsetOutput)
}

func (a EndpointSubsetArgs) ToEndpointSubsetOutputWithContext(ctx context.Context) EndpointSubsetOutput {
	return pulumi.ToOutputWithContext(ctx, a).(EndpointSubsetOutput)
}

// EndpointSubsetOutput is an output type that resolves to a Input.
type EndpointSubsetOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(EndpointSubsetOutput{}) }

func (EndpointSubsetOutput) ElementType() reflect.Type {
	return _EndpointSubsetType
}

func (o EndpointSubsetOutput) Addresses() EndpointAddressArrayOutput {
	return o.Apply(func(v EndpointSubset) []EndpointAddress {
		return v.Addresses
	}).(EndpointAddressArrayOutput)
}

func (o EndpointSubsetOutput) NotReadyAddresses() EndpointAddressArrayOutput {
	return o.Apply(func(v EndpointSubset) []EndpointAddress {
		return v.NotReadyAddresses
	}).(EndpointAddressArrayOutput)
}

func (o EndpointSubsetOutput) Ports() EndpointPortArrayOutput {
	return o.Apply(func(v EndpointSubset) []EndpointPort {
		return v.Ports
	}).(EndpointPortArrayOutput)
}

var _EndpointSubsetArrayType = reflect.TypeOf((*[]EndpointSubset)(nil)).Elem()

type EndpointSubsetArrayInput interface {
	ElementType() reflect.Type

	ToEndpointSubsetArrayOutput() EndpointSubsetArrayOutput
	ToEndpointSubsetArrayOutputWithContext(ctx context.Context) EndpointSubsetArrayOutput
}

type EndpointSubsetArray []EndpointSubsetInput

func (a EndpointSubsetArray) ElementType() reflect.Type {
	return _EndpointSubsetArrayType
}

func (a EndpointSubsetArray) ToEndpointSubsetArrayOutput() EndpointSubsetArrayOutput {
	return pulumi.ToOutput(a).(EndpointSubsetArrayOutput)
}

func (a EndpointSubsetArray) ToEndpointSubsetArrayOutputWithContext(ctx context.Context) EndpointSubsetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(EndpointSubsetArrayOutput)
}

type EndpointSubsetArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(EndpointSubsetArrayOutput{}) }

func (EndpointSubsetArrayOutput) ElementType() reflect.Type {
	return _EndpointSubsetArrayType
}

func (o EndpointSubsetArrayOutput) Index(i pulumi.IntInput) EndpointSubsetOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) EndpointSubset {
		return vs[0].([]EndpointSubset)[vs[1].(int)]
	}).(EndpointSubsetOutput)
}
