// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// SecretKeySelector selects a key of a Secret.
type SecretKeySelector struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key string `pulumi:"key"`

	// Name of the referent. More info:
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`

	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`

}

var _SecretKeySelectorType = reflect.TypeOf((*SecretKeySelector)(nil)).Elem()

// SecretKeySelectorInput represents an input type that resolves to a SecretKeySelector.
type SecretKeySelectorInput interface {
	ElementType() reflect.Type

	ToSecretKeySelectorOutput() SecretKeySelectorOutput
	ToSecretKeySelectorOutputWithContext(ctx context.Context) SecretKeySelectorOutput
}

// SecretKeySelectorArgs is a SecretKeySelectorInput whose fields are all Input types.
type SecretKeySelectorArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringInput `pulumi:"key"`

	// Name of the referent. More info:
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`

	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolInput `pulumi:"optional"`

}

func (a SecretKeySelectorArgs) ElementType() reflect.Type {
	return _SecretKeySelectorType
}

func (a SecretKeySelectorArgs) ToSecretKeySelectorOutput() SecretKeySelectorOutput {
	return pulumi.ToOutput(a).(SecretKeySelectorOutput)
}

func (a SecretKeySelectorArgs) ToSecretKeySelectorOutputWithContext(ctx context.Context) SecretKeySelectorOutput {
	return pulumi.ToOutputWithContext(ctx, a).(SecretKeySelectorOutput)
}

// SecretKeySelectorOutput is an output type that resolves to a Input.
type SecretKeySelectorOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(SecretKeySelectorOutput{}) }

func (SecretKeySelectorOutput) ElementType() reflect.Type {
	return _SecretKeySelectorType
}

func (o SecretKeySelectorOutput) Key() pulumi.StringOutput {
	return o.Apply(func(v SecretKeySelector) string {
		return v.Key
	}).(pulumi.StringOutput)
}

func (o SecretKeySelectorOutput) Name() pulumi.StringOutput {
	return o.Apply(func(v SecretKeySelector) *string {
		return v.Name
	}).(pulumi.StringOutput)
}

func (o SecretKeySelectorOutput) Optional() pulumi.BoolOutput {
	return o.Apply(func(v SecretKeySelector) *bool {
		return v.Optional
	}).(pulumi.BoolOutput)
}

