// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support
// ownership management or SELinux relabeling.
type QuobyteVolumeSource struct {
	// Group to map volume access to Default is no group
	Group *string `pulumi:"group"`

	// ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults
	// to false.
	ReadOnly *bool `pulumi:"readOnly"`

	// Registry represents a single or multiple Quobyte Registry services specified as a string as
	// host:port pair (multiple entries are separated with commas) which acts as the central registry
	// for volumes
	Registry string `pulumi:"registry"`

	// Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte
	// volumes, value is set by the plugin
	Tenant *string `pulumi:"tenant"`

	// User to map volume access to Defaults to serivceaccount user
	User *string `pulumi:"user"`

	// Volume is a string that references an already created Quobyte volume by name.
	Volume string `pulumi:"volume"`

}

var _QuobyteVolumeSourceType = reflect.TypeOf((*QuobyteVolumeSource)(nil)).Elem()

// QuobyteVolumeSourceInput represents an input type that resolves to a QuobyteVolumeSource.
type QuobyteVolumeSourceInput interface {
	ElementType() reflect.Type

	ToQuobyteVolumeSourceOutput() QuobyteVolumeSourceOutput
	ToQuobyteVolumeSourceOutputWithContext(ctx context.Context) QuobyteVolumeSourceOutput
}

// QuobyteVolumeSourceArgs is a QuobyteVolumeSourceInput whose fields are all Input types.
type QuobyteVolumeSourceArgs struct {
	// Registry represents a single or multiple Quobyte Registry services specified as a string as
	// host:port pair (multiple entries are separated with commas) which acts as the central registry
	// for volumes
	Registry pulumi.StringInput `pulumi:"registry"`

	// Volume is a string that references an already created Quobyte volume by name.
	Volume pulumi.StringInput `pulumi:"volume"`

	// Group to map volume access to Default is no group
	Group pulumi.StringInput `pulumi:"group"`

	// ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults
	// to false.
	ReadOnly pulumi.BoolInput `pulumi:"readOnly"`

	// Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte
	// volumes, value is set by the plugin
	Tenant pulumi.StringInput `pulumi:"tenant"`

	// User to map volume access to Defaults to serivceaccount user
	User pulumi.StringInput `pulumi:"user"`

}

func (a QuobyteVolumeSourceArgs) ElementType() reflect.Type {
	return _QuobyteVolumeSourceType
}

func (a QuobyteVolumeSourceArgs) ToQuobyteVolumeSourceOutput() QuobyteVolumeSourceOutput {
	return pulumi.ToOutput(a).(QuobyteVolumeSourceOutput)
}

func (a QuobyteVolumeSourceArgs) ToQuobyteVolumeSourceOutputWithContext(ctx context.Context) QuobyteVolumeSourceOutput {
	return pulumi.ToOutputWithContext(ctx, a).(QuobyteVolumeSourceOutput)
}

// QuobyteVolumeSourceOutput is an output type that resolves to a Input.
type QuobyteVolumeSourceOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(QuobyteVolumeSourceOutput{}) }

func (QuobyteVolumeSourceOutput) ElementType() reflect.Type {
	return _QuobyteVolumeSourceType
}

func (o QuobyteVolumeSourceOutput) Group() pulumi.StringOutput {
	return o.Apply(func(v QuobyteVolumeSource) *string {
		return v.Group
	}).(pulumi.StringOutput)
}

func (o QuobyteVolumeSourceOutput) ReadOnly() pulumi.BoolOutput {
	return o.Apply(func(v QuobyteVolumeSource) *bool {
		return v.ReadOnly
	}).(pulumi.BoolOutput)
}

func (o QuobyteVolumeSourceOutput) Registry() pulumi.StringOutput {
	return o.Apply(func(v QuobyteVolumeSource) string {
		return v.Registry
	}).(pulumi.StringOutput)
}

func (o QuobyteVolumeSourceOutput) Tenant() pulumi.StringOutput {
	return o.Apply(func(v QuobyteVolumeSource) *string {
		return v.Tenant
	}).(pulumi.StringOutput)
}

func (o QuobyteVolumeSourceOutput) User() pulumi.StringOutput {
	return o.Apply(func(v QuobyteVolumeSource) *string {
		return v.User
	}).(pulumi.StringOutput)
}

func (o QuobyteVolumeSourceOutput) Volume() pulumi.StringOutput {
	return o.Apply(func(v QuobyteVolumeSource) string {
		return v.Volume
	}).(pulumi.StringOutput)
}

