// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the
// most preferred node(s)
type WeightedPodAffinityTerm struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm PodAffinityTerm `pulumi:"podAffinityTerm"`

	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int `pulumi:"weight"`

}

var _WeightedPodAffinityTermType = reflect.TypeOf((*WeightedPodAffinityTerm)(nil)).Elem()

// WeightedPodAffinityTermInput represents an input type that resolves to a WeightedPodAffinityTerm.
type WeightedPodAffinityTermInput interface {
	ElementType() reflect.Type

	ToWeightedPodAffinityTermOutput() WeightedPodAffinityTermOutput
	ToWeightedPodAffinityTermOutputWithContext(ctx context.Context) WeightedPodAffinityTermOutput
}

// WeightedPodAffinityTermArgs is a WeightedPodAffinityTermInput whose fields are all Input types.
type WeightedPodAffinityTermArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm PodAffinityTermInput `pulumi:"podAffinityTerm"`

	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`

}

func (a WeightedPodAffinityTermArgs) ElementType() reflect.Type {
	return _WeightedPodAffinityTermType
}

func (a WeightedPodAffinityTermArgs) ToWeightedPodAffinityTermOutput() WeightedPodAffinityTermOutput {
	return pulumi.ToOutput(a).(WeightedPodAffinityTermOutput)
}

func (a WeightedPodAffinityTermArgs) ToWeightedPodAffinityTermOutputWithContext(ctx context.Context) WeightedPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, a).(WeightedPodAffinityTermOutput)
}

// WeightedPodAffinityTermOutput is an output type that resolves to a Input.
type WeightedPodAffinityTermOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(WeightedPodAffinityTermOutput{}) }

func (WeightedPodAffinityTermOutput) ElementType() reflect.Type {
	return _WeightedPodAffinityTermType
}

func (o WeightedPodAffinityTermOutput) PodAffinityTerm() PodAffinityTermOutput {
	return o.Apply(func(v WeightedPodAffinityTerm) PodAffinityTerm {
		return v.PodAffinityTerm
	}).(PodAffinityTermOutput)
}

func (o WeightedPodAffinityTermOutput) Weight() pulumi.IntOutput {
	return o.Apply(func(v WeightedPodAffinityTerm) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

var _WeightedPodAffinityTermArrayType = reflect.TypeOf((*[]WeightedPodAffinityTerm)(nil)).Elem()

type WeightedPodAffinityTermArrayInput interface {
	ElementType() reflect.Type

	ToWeightedPodAffinityTermArrayOutput() WeightedPodAffinityTermArrayOutput
	ToWeightedPodAffinityTermArrayOutputWithContext(ctx context.Context) WeightedPodAffinityTermArrayOutput
}

type WeightedPodAffinityTermArray []WeightedPodAffinityTermInput

func (a WeightedPodAffinityTermArray) ElementType() reflect.Type {
	return _WeightedPodAffinityTermArrayType
}

func (a WeightedPodAffinityTermArray) ToWeightedPodAffinityTermArrayOutput() WeightedPodAffinityTermArrayOutput {
	return pulumi.ToOutput(a).(WeightedPodAffinityTermArrayOutput)
}

func (a WeightedPodAffinityTermArray) ToWeightedPodAffinityTermArrayOutputWithContext(ctx context.Context) WeightedPodAffinityTermArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(WeightedPodAffinityTermArrayOutput)
}

type WeightedPodAffinityTermArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(WeightedPodAffinityTermArrayOutput{}) }

func (WeightedPodAffinityTermArrayOutput) ElementType() reflect.Type {
	return _WeightedPodAffinityTermArrayType
}

func (o WeightedPodAffinityTermArrayOutput) Index(i pulumi.IntInput) WeightedPodAffinityTermOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) WeightedPodAffinityTerm {
		return vs[0].([]WeightedPodAffinityTerm)[vs[1].(int)]
	}).(WeightedPodAffinityTermOutput)
}
