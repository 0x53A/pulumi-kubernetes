// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
// pod's hosts file.
type HostAlias struct {
	// Hostnames for the above IP address.
	Hostnames []string `pulumi:"hostnames"`

	// IP address of the host file entry.
	Ip *string `pulumi:"ip"`

}

var _HostAliasType = reflect.TypeOf((*HostAlias)(nil)).Elem()

// HostAliasInput represents an input type that resolves to a HostAlias.
type HostAliasInput interface {
	ElementType() reflect.Type

	ToHostAliasOutput() HostAliasOutput
	ToHostAliasOutputWithContext(ctx context.Context) HostAliasOutput
}

// HostAliasArgs is a HostAliasInput whose fields are all Input types.
type HostAliasArgs struct {
	// Hostnames for the above IP address.
	Hostnames pulumi.StringArrayInput `pulumi:"hostnames"`

	// IP address of the host file entry.
	Ip pulumi.StringInput `pulumi:"ip"`

}

func (a HostAliasArgs) ElementType() reflect.Type {
	return _HostAliasType
}

func (a HostAliasArgs) ToHostAliasOutput() HostAliasOutput {
	return pulumi.ToOutput(a).(HostAliasOutput)
}

func (a HostAliasArgs) ToHostAliasOutputWithContext(ctx context.Context) HostAliasOutput {
	return pulumi.ToOutputWithContext(ctx, a).(HostAliasOutput)
}

// HostAliasOutput is an output type that resolves to a Input.
type HostAliasOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(HostAliasOutput{}) }

func (HostAliasOutput) ElementType() reflect.Type {
	return _HostAliasType
}

func (o HostAliasOutput) Hostnames() pulumi.StringArrayOutput {
	return o.Apply(func(v HostAlias) []string {
		return v.Hostnames
	}).(pulumi.StringArrayOutput)
}

func (o HostAliasOutput) Ip() pulumi.StringOutput {
	return o.Apply(func(v HostAlias) *string {
		return v.Ip
	}).(pulumi.StringOutput)
}

var _HostAliasArrayType = reflect.TypeOf((*[]HostAlias)(nil)).Elem()

type HostAliasArrayInput interface {
	ElementType() reflect.Type

	ToHostAliasArrayOutput() HostAliasArrayOutput
	ToHostAliasArrayOutputWithContext(ctx context.Context) HostAliasArrayOutput
}

type HostAliasArray []HostAliasInput

func (a HostAliasArray) ElementType() reflect.Type {
	return _HostAliasArrayType
}

func (a HostAliasArray) ToHostAliasArrayOutput() HostAliasArrayOutput {
	return pulumi.ToOutput(a).(HostAliasArrayOutput)
}

func (a HostAliasArray) ToHostAliasArrayOutputWithContext(ctx context.Context) HostAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(HostAliasArrayOutput)
}

type HostAliasArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(HostAliasArrayOutput{}) }

func (HostAliasArrayOutput) ElementType() reflect.Type {
	return _HostAliasArrayType
}

func (o HostAliasArrayOutput) Index(i pulumi.IntInput) HostAliasOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) HostAlias {
		return vs[0].([]HostAlias)[vs[1].(int)]
	}).(HostAliasOutput)
}
