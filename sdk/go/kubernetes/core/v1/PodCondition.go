// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// PodCondition contains details for the current condition of this pod.
type PodCondition struct {
	// Last time we probed the condition.
	LastProbeTime *string `pulumi:"lastProbeTime"`

	// Last time the condition transitioned from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`

	// Human-readable message indicating details about last transition.
	Message *string `pulumi:"message"`

	// Unique, one-word, CamelCase reason for the condition's last transition.
	Reason *string `pulumi:"reason"`

	// Status is the status of the condition. Can be True, False, Unknown. More info:
	// https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
	Status string `pulumi:"status"`

	// Type is the type of the condition. More info:
	// https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
	Type string `pulumi:"type"`

}

var _PodConditionType = reflect.TypeOf((*PodCondition)(nil)).Elem()

// PodConditionInput represents an input type that resolves to a PodCondition.
type PodConditionInput interface {
	ElementType() reflect.Type

	ToPodConditionOutput() PodConditionOutput
	ToPodConditionOutputWithContext(ctx context.Context) PodConditionOutput
}

// PodConditionArgs is a PodConditionInput whose fields are all Input types.
type PodConditionArgs struct {
	// Status is the status of the condition. Can be True, False, Unknown. More info:
	// https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
	Status pulumi.StringInput `pulumi:"status"`

	// Type is the type of the condition. More info:
	// https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
	Type pulumi.StringInput `pulumi:"type"`

	// Last time we probed the condition.
	LastProbeTime pulumi.StringInput `pulumi:"lastProbeTime"`

	// Last time the condition transitioned from one status to another.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`

	// Human-readable message indicating details about last transition.
	Message pulumi.StringInput `pulumi:"message"`

	// Unique, one-word, CamelCase reason for the condition's last transition.
	Reason pulumi.StringInput `pulumi:"reason"`

}

func (a PodConditionArgs) ElementType() reflect.Type {
	return _PodConditionType
}

func (a PodConditionArgs) ToPodConditionOutput() PodConditionOutput {
	return pulumi.ToOutput(a).(PodConditionOutput)
}

func (a PodConditionArgs) ToPodConditionOutputWithContext(ctx context.Context) PodConditionOutput {
	return pulumi.ToOutputWithContext(ctx, a).(PodConditionOutput)
}

// PodConditionOutput is an output type that resolves to a Input.
type PodConditionOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(PodConditionOutput{}) }

func (PodConditionOutput) ElementType() reflect.Type {
	return _PodConditionType
}

func (o PodConditionOutput) LastProbeTime() pulumi.StringOutput {
	return o.Apply(func(v PodCondition) *string {
		return v.LastProbeTime
	}).(pulumi.StringOutput)
}

func (o PodConditionOutput) LastTransitionTime() pulumi.StringOutput {
	return o.Apply(func(v PodCondition) *string {
		return v.LastTransitionTime
	}).(pulumi.StringOutput)
}

func (o PodConditionOutput) Message() pulumi.StringOutput {
	return o.Apply(func(v PodCondition) *string {
		return v.Message
	}).(pulumi.StringOutput)
}

func (o PodConditionOutput) Reason() pulumi.StringOutput {
	return o.Apply(func(v PodCondition) *string {
		return v.Reason
	}).(pulumi.StringOutput)
}

func (o PodConditionOutput) Status() pulumi.StringOutput {
	return o.Apply(func(v PodCondition) string {
		return v.Status
	}).(pulumi.StringOutput)
}

func (o PodConditionOutput) Type() pulumi.StringOutput {
	return o.Apply(func(v PodCondition) string {
		return v.Type
	}).(pulumi.StringOutput)
}

var _PodConditionArrayType = reflect.TypeOf((*[]PodCondition)(nil)).Elem()

type PodConditionArrayInput interface {
	ElementType() reflect.Type

	ToPodConditionArrayOutput() PodConditionArrayOutput
	ToPodConditionArrayOutputWithContext(ctx context.Context) PodConditionArrayOutput
}

type PodConditionArray []PodConditionInput

func (a PodConditionArray) ElementType() reflect.Type {
	return _PodConditionArrayType
}

func (a PodConditionArray) ToPodConditionArrayOutput() PodConditionArrayOutput {
	return pulumi.ToOutput(a).(PodConditionArrayOutput)
}

func (a PodConditionArray) ToPodConditionArrayOutputWithContext(ctx context.Context) PodConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(PodConditionArrayOutput)
}

type PodConditionArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(PodConditionArrayOutput{}) }

func (PodConditionArrayOutput) ElementType() reflect.Type {
	return _PodConditionArrayType
}

func (o PodConditionArrayOutput) Index(i pulumi.IntInput) PodConditionOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) PodCondition {
		return vs[0].([]PodCondition)[vs[1].(int)]
	}).(PodConditionOutput)
}
