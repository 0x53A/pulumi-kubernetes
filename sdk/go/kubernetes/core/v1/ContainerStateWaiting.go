// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// ContainerStateWaiting is a waiting state of a container.
type ContainerStateWaiting struct {
	// Message regarding why the container is not yet running.
	Message *string `pulumi:"message"`

	// (brief) reason the container is not yet running.
	Reason *string `pulumi:"reason"`

}

var _ContainerStateWaitingType = reflect.TypeOf((*ContainerStateWaiting)(nil)).Elem()

// ContainerStateWaitingInput represents an input type that resolves to a ContainerStateWaiting.
type ContainerStateWaitingInput interface {
	ElementType() reflect.Type

	ToContainerStateWaitingOutput() ContainerStateWaitingOutput
	ToContainerStateWaitingOutputWithContext(ctx context.Context) ContainerStateWaitingOutput
}

// ContainerStateWaitingArgs is a ContainerStateWaitingInput whose fields are all Input types.
type ContainerStateWaitingArgs struct {
	// Message regarding why the container is not yet running.
	Message pulumi.StringInput `pulumi:"message"`

	// (brief) reason the container is not yet running.
	Reason pulumi.StringInput `pulumi:"reason"`

}

func (a ContainerStateWaitingArgs) ElementType() reflect.Type {
	return _ContainerStateWaitingType
}

func (a ContainerStateWaitingArgs) ToContainerStateWaitingOutput() ContainerStateWaitingOutput {
	return pulumi.ToOutput(a).(ContainerStateWaitingOutput)
}

func (a ContainerStateWaitingArgs) ToContainerStateWaitingOutputWithContext(ctx context.Context) ContainerStateWaitingOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ContainerStateWaitingOutput)
}

// ContainerStateWaitingOutput is an output type that resolves to a Input.
type ContainerStateWaitingOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ContainerStateWaitingOutput{}) }

func (ContainerStateWaitingOutput) ElementType() reflect.Type {
	return _ContainerStateWaitingType
}

func (o ContainerStateWaitingOutput) Message() pulumi.StringOutput {
	return o.Apply(func(v ContainerStateWaiting) *string {
		return v.Message
	}).(pulumi.StringOutput)
}

func (o ContainerStateWaitingOutput) Reason() pulumi.StringOutput {
	return o.Apply(func(v ContainerStateWaiting) *string {
		return v.Reason
	}).(pulumi.StringOutput)
}

