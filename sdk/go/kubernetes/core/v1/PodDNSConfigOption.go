// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// PodDNSConfigOption defines DNS resolver options of a pod.
type PodDNSConfigOption struct {
	// Required.
	Name *string `pulumi:"name"`

	
	Value *string `pulumi:"value"`

}

var _PodDNSConfigOptionType = reflect.TypeOf((*PodDNSConfigOption)(nil)).Elem()

// PodDNSConfigOptionInput represents an input type that resolves to a PodDNSConfigOption.
type PodDNSConfigOptionInput interface {
	ElementType() reflect.Type

	ToPodDNSConfigOptionOutput() PodDNSConfigOptionOutput
	ToPodDNSConfigOptionOutputWithContext(ctx context.Context) PodDNSConfigOptionOutput
}

// PodDNSConfigOptionArgs is a PodDNSConfigOptionInput whose fields are all Input types.
type PodDNSConfigOptionArgs struct {
	// Required.
	Name pulumi.StringInput `pulumi:"name"`

	
	Value pulumi.StringInput `pulumi:"value"`

}

func (a PodDNSConfigOptionArgs) ElementType() reflect.Type {
	return _PodDNSConfigOptionType
}

func (a PodDNSConfigOptionArgs) ToPodDNSConfigOptionOutput() PodDNSConfigOptionOutput {
	return pulumi.ToOutput(a).(PodDNSConfigOptionOutput)
}

func (a PodDNSConfigOptionArgs) ToPodDNSConfigOptionOutputWithContext(ctx context.Context) PodDNSConfigOptionOutput {
	return pulumi.ToOutputWithContext(ctx, a).(PodDNSConfigOptionOutput)
}

// PodDNSConfigOptionOutput is an output type that resolves to a Input.
type PodDNSConfigOptionOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(PodDNSConfigOptionOutput{}) }

func (PodDNSConfigOptionOutput) ElementType() reflect.Type {
	return _PodDNSConfigOptionType
}

func (o PodDNSConfigOptionOutput) Name() pulumi.StringOutput {
	return o.Apply(func(v PodDNSConfigOption) *string {
		return v.Name
	}).(pulumi.StringOutput)
}

func (o PodDNSConfigOptionOutput) Value() pulumi.StringOutput {
	return o.Apply(func(v PodDNSConfigOption) *string {
		return v.Value
	}).(pulumi.StringOutput)
}

var _PodDNSConfigOptionArrayType = reflect.TypeOf((*[]PodDNSConfigOption)(nil)).Elem()

type PodDNSConfigOptionArrayInput interface {
	ElementType() reflect.Type

	ToPodDNSConfigOptionArrayOutput() PodDNSConfigOptionArrayOutput
	ToPodDNSConfigOptionArrayOutputWithContext(ctx context.Context) PodDNSConfigOptionArrayOutput
}

type PodDNSConfigOptionArray []PodDNSConfigOptionInput

func (a PodDNSConfigOptionArray) ElementType() reflect.Type {
	return _PodDNSConfigOptionArrayType
}

func (a PodDNSConfigOptionArray) ToPodDNSConfigOptionArrayOutput() PodDNSConfigOptionArrayOutput {
	return pulumi.ToOutput(a).(PodDNSConfigOptionArrayOutput)
}

func (a PodDNSConfigOptionArray) ToPodDNSConfigOptionArrayOutputWithContext(ctx context.Context) PodDNSConfigOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(PodDNSConfigOptionArrayOutput)
}

type PodDNSConfigOptionArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(PodDNSConfigOptionArrayOutput{}) }

func (PodDNSConfigOptionArrayOutput) ElementType() reflect.Type {
	return _PodDNSConfigOptionArrayType
}

func (o PodDNSConfigOptionArrayOutput) Index(i pulumi.IntInput) PodDNSConfigOptionOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) PodDNSConfigOption {
		return vs[0].([]PodDNSConfigOption)[vs[1].(int)]
	}).(PodDNSConfigOptionOutput)
}
