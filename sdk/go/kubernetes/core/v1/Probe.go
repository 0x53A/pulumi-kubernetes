// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Probe describes a health check to be performed against a container to determine whether it is
// alive or ready to receive traffic.
type Probe struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec *ExecAction `pulumi:"exec"`

	// Minimum consecutive failures for the probe to be considered failed after having succeeded.
	// Defaults to 3. Minimum value is 1.
	FailureThreshold *int `pulumi:"failureThreshold"`

	// HTTPGet specifies the http request to perform.
	HttpGet *HTTPGetAction `pulumi:"httpGet"`

	// Number of seconds after the container has started before liveness probes are initiated. More
	// info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`

	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds *int `pulumi:"periodSeconds"`

	// Minimum consecutive successes for the probe to be considered successful after having failed.
	// Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold *int `pulumi:"successThreshold"`

	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported
	TcpSocket *TCPSocketAction `pulumi:"tcpSocket"`

	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1.
	// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`

}

var _ProbeType = reflect.TypeOf((*Probe)(nil)).Elem()

// ProbeInput represents an input type that resolves to a Probe.
type ProbeInput interface {
	ElementType() reflect.Type

	ToProbeOutput() ProbeOutput
	ToProbeOutputWithContext(ctx context.Context) ProbeOutput
}

// ProbeArgs is a ProbeInput whose fields are all Input types.
type ProbeArgs struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec ExecActionInput `pulumi:"exec"`

	// Minimum consecutive failures for the probe to be considered failed after having succeeded.
	// Defaults to 3. Minimum value is 1.
	FailureThreshold pulumi.IntInput `pulumi:"failureThreshold"`

	// HTTPGet specifies the http request to perform.
	HttpGet HTTPGetActionInput `pulumi:"httpGet"`

	// Number of seconds after the container has started before liveness probes are initiated. More
	// info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds pulumi.IntInput `pulumi:"initialDelaySeconds"`

	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds pulumi.IntInput `pulumi:"periodSeconds"`

	// Minimum consecutive successes for the probe to be considered successful after having failed.
	// Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold pulumi.IntInput `pulumi:"successThreshold"`

	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported
	TcpSocket TCPSocketActionInput `pulumi:"tcpSocket"`

	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1.
	// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds pulumi.IntInput `pulumi:"timeoutSeconds"`

}

func (a ProbeArgs) ElementType() reflect.Type {
	return _ProbeType
}

func (a ProbeArgs) ToProbeOutput() ProbeOutput {
	return pulumi.ToOutput(a).(ProbeOutput)
}

func (a ProbeArgs) ToProbeOutputWithContext(ctx context.Context) ProbeOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ProbeOutput)
}

// ProbeOutput is an output type that resolves to a Input.
type ProbeOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ProbeOutput{}) }

func (ProbeOutput) ElementType() reflect.Type {
	return _ProbeType
}

func (o ProbeOutput) Exec() ExecActionOutput {
	return o.Apply(func(v Probe) *ExecAction {
		return v.Exec
	}).(ExecActionOutput)
}

func (o ProbeOutput) FailureThreshold() pulumi.IntOutput {
	return o.Apply(func(v Probe) *int {
		return v.FailureThreshold
	}).(pulumi.IntOutput)
}

func (o ProbeOutput) HttpGet() HTTPGetActionOutput {
	return o.Apply(func(v Probe) *HTTPGetAction {
		return v.HttpGet
	}).(HTTPGetActionOutput)
}

func (o ProbeOutput) InitialDelaySeconds() pulumi.IntOutput {
	return o.Apply(func(v Probe) *int {
		return v.InitialDelaySeconds
	}).(pulumi.IntOutput)
}

func (o ProbeOutput) PeriodSeconds() pulumi.IntOutput {
	return o.Apply(func(v Probe) *int {
		return v.PeriodSeconds
	}).(pulumi.IntOutput)
}

func (o ProbeOutput) SuccessThreshold() pulumi.IntOutput {
	return o.Apply(func(v Probe) *int {
		return v.SuccessThreshold
	}).(pulumi.IntOutput)
}

func (o ProbeOutput) TcpSocket() TCPSocketActionOutput {
	return o.Apply(func(v Probe) *TCPSocketAction {
		return v.TcpSocket
	}).(TCPSocketActionOutput)
}

func (o ProbeOutput) TimeoutSeconds() pulumi.IntOutput {
	return o.Apply(func(v Probe) *int {
		return v.TimeoutSeconds
	}).(pulumi.IntOutput)
}

