// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// PersistentVolumeStatus is the current status of a persistent volume.
type PersistentVolumeStatus struct {
	// A human-readable message indicating details about why the volume is in this state.
	Message *string `pulumi:"message"`

	// Phase indicates if a volume is available, bound to a claim, or released by a claim. More info:
	// https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase
	Phase *string `pulumi:"phase"`

	// Reason is a brief CamelCase string that describes any failure and is meant for machine parsing
	// and tidy display in the CLI.
	Reason *string `pulumi:"reason"`

}

var _PersistentVolumeStatusType = reflect.TypeOf((*PersistentVolumeStatus)(nil)).Elem()

// PersistentVolumeStatusInput represents an input type that resolves to a PersistentVolumeStatus.
type PersistentVolumeStatusInput interface {
	ElementType() reflect.Type

	ToPersistentVolumeStatusOutput() PersistentVolumeStatusOutput
	ToPersistentVolumeStatusOutputWithContext(ctx context.Context) PersistentVolumeStatusOutput
}

// PersistentVolumeStatusArgs is a PersistentVolumeStatusInput whose fields are all Input types.
type PersistentVolumeStatusArgs struct {
	// A human-readable message indicating details about why the volume is in this state.
	Message pulumi.StringInput `pulumi:"message"`

	// Phase indicates if a volume is available, bound to a claim, or released by a claim. More info:
	// https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase
	Phase pulumi.StringInput `pulumi:"phase"`

	// Reason is a brief CamelCase string that describes any failure and is meant for machine parsing
	// and tidy display in the CLI.
	Reason pulumi.StringInput `pulumi:"reason"`

}

func (a PersistentVolumeStatusArgs) ElementType() reflect.Type {
	return _PersistentVolumeStatusType
}

func (a PersistentVolumeStatusArgs) ToPersistentVolumeStatusOutput() PersistentVolumeStatusOutput {
	return pulumi.ToOutput(a).(PersistentVolumeStatusOutput)
}

func (a PersistentVolumeStatusArgs) ToPersistentVolumeStatusOutputWithContext(ctx context.Context) PersistentVolumeStatusOutput {
	return pulumi.ToOutputWithContext(ctx, a).(PersistentVolumeStatusOutput)
}

// PersistentVolumeStatusOutput is an output type that resolves to a Input.
type PersistentVolumeStatusOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(PersistentVolumeStatusOutput{}) }

func (PersistentVolumeStatusOutput) ElementType() reflect.Type {
	return _PersistentVolumeStatusType
}

func (o PersistentVolumeStatusOutput) Message() pulumi.StringOutput {
	return o.Apply(func(v PersistentVolumeStatus) *string {
		return v.Message
	}).(pulumi.StringOutput)
}

func (o PersistentVolumeStatusOutput) Phase() pulumi.StringOutput {
	return o.Apply(func(v PersistentVolumeStatus) *string {
		return v.Phase
	}).(pulumi.StringOutput)
}

func (o PersistentVolumeStatusOutput) Reason() pulumi.StringOutput {
	return o.Apply(func(v PersistentVolumeStatus) *string {
		return v.Reason
	}).(pulumi.StringOutput)
}

