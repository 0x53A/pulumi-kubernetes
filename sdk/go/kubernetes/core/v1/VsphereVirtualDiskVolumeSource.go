// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Represents a vSphere volume resource.
type VsphereVirtualDiskVolumeSource struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex.
	// "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`

	// Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
	StoragePolicyID *string `pulumi:"storagePolicyID"`

	// Storage Policy Based Management (SPBM) profile name.
	StoragePolicyName *string `pulumi:"storagePolicyName"`

	// Path that identifies vSphere volume vmdk
	VolumePath string `pulumi:"volumePath"`

}

var _VsphereVirtualDiskVolumeSourceType = reflect.TypeOf((*VsphereVirtualDiskVolumeSource)(nil)).Elem()

// VsphereVirtualDiskVolumeSourceInput represents an input type that resolves to a VsphereVirtualDiskVolumeSource.
type VsphereVirtualDiskVolumeSourceInput interface {
	ElementType() reflect.Type

	ToVsphereVirtualDiskVolumeSourceOutput() VsphereVirtualDiskVolumeSourceOutput
	ToVsphereVirtualDiskVolumeSourceOutputWithContext(ctx context.Context) VsphereVirtualDiskVolumeSourceOutput
}

// VsphereVirtualDiskVolumeSourceArgs is a VsphereVirtualDiskVolumeSourceInput whose fields are all Input types.
type VsphereVirtualDiskVolumeSourceArgs struct {
	// Path that identifies vSphere volume vmdk
	VolumePath pulumi.StringInput `pulumi:"volumePath"`

	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex.
	// "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringInput `pulumi:"fsType"`

	// Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
	StoragePolicyID pulumi.StringInput `pulumi:"storagePolicyID"`

	// Storage Policy Based Management (SPBM) profile name.
	StoragePolicyName pulumi.StringInput `pulumi:"storagePolicyName"`

}

func (a VsphereVirtualDiskVolumeSourceArgs) ElementType() reflect.Type {
	return _VsphereVirtualDiskVolumeSourceType
}

func (a VsphereVirtualDiskVolumeSourceArgs) ToVsphereVirtualDiskVolumeSourceOutput() VsphereVirtualDiskVolumeSourceOutput {
	return pulumi.ToOutput(a).(VsphereVirtualDiskVolumeSourceOutput)
}

func (a VsphereVirtualDiskVolumeSourceArgs) ToVsphereVirtualDiskVolumeSourceOutputWithContext(ctx context.Context) VsphereVirtualDiskVolumeSourceOutput {
	return pulumi.ToOutputWithContext(ctx, a).(VsphereVirtualDiskVolumeSourceOutput)
}

// VsphereVirtualDiskVolumeSourceOutput is an output type that resolves to a Input.
type VsphereVirtualDiskVolumeSourceOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(VsphereVirtualDiskVolumeSourceOutput{}) }

func (VsphereVirtualDiskVolumeSourceOutput) ElementType() reflect.Type {
	return _VsphereVirtualDiskVolumeSourceType
}

func (o VsphereVirtualDiskVolumeSourceOutput) FsType() pulumi.StringOutput {
	return o.Apply(func(v VsphereVirtualDiskVolumeSource) *string {
		return v.FsType
	}).(pulumi.StringOutput)
}

func (o VsphereVirtualDiskVolumeSourceOutput) StoragePolicyID() pulumi.StringOutput {
	return o.Apply(func(v VsphereVirtualDiskVolumeSource) *string {
		return v.StoragePolicyID
	}).(pulumi.StringOutput)
}

func (o VsphereVirtualDiskVolumeSourceOutput) StoragePolicyName() pulumi.StringOutput {
	return o.Apply(func(v VsphereVirtualDiskVolumeSource) *string {
		return v.StoragePolicyName
	}).(pulumi.StringOutput)
}

func (o VsphereVirtualDiskVolumeSourceOutput) VolumePath() pulumi.StringOutput {
	return o.Apply(func(v VsphereVirtualDiskVolumeSource) string {
		return v.VolumePath
	}).(pulumi.StringOutput)
}

