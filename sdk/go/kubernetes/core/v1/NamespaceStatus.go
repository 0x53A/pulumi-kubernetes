// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// NamespaceStatus is information about the current status of a Namespace.
type NamespaceStatus struct {
	// Represents the latest available observations of a namespace's current state.
	Conditions []NamespaceCondition `pulumi:"conditions"`

	// Phase is the current lifecycle phase of the namespace. More info:
	// https://kubernetes.io/docs/tasks/administer-cluster/namespaces/
	Phase *string `pulumi:"phase"`

}

var _NamespaceStatusType = reflect.TypeOf((*NamespaceStatus)(nil)).Elem()

// NamespaceStatusInput represents an input type that resolves to a NamespaceStatus.
type NamespaceStatusInput interface {
	ElementType() reflect.Type

	ToNamespaceStatusOutput() NamespaceStatusOutput
	ToNamespaceStatusOutputWithContext(ctx context.Context) NamespaceStatusOutput
}

// NamespaceStatusArgs is a NamespaceStatusInput whose fields are all Input types.
type NamespaceStatusArgs struct {
	// Represents the latest available observations of a namespace's current state.
	Conditions NamespaceConditionArrayInput `pulumi:"conditions"`

	// Phase is the current lifecycle phase of the namespace. More info:
	// https://kubernetes.io/docs/tasks/administer-cluster/namespaces/
	Phase pulumi.StringInput `pulumi:"phase"`

}

func (a NamespaceStatusArgs) ElementType() reflect.Type {
	return _NamespaceStatusType
}

func (a NamespaceStatusArgs) ToNamespaceStatusOutput() NamespaceStatusOutput {
	return pulumi.ToOutput(a).(NamespaceStatusOutput)
}

func (a NamespaceStatusArgs) ToNamespaceStatusOutputWithContext(ctx context.Context) NamespaceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, a).(NamespaceStatusOutput)
}

// NamespaceStatusOutput is an output type that resolves to a Input.
type NamespaceStatusOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(NamespaceStatusOutput{}) }

func (NamespaceStatusOutput) ElementType() reflect.Type {
	return _NamespaceStatusType
}

func (o NamespaceStatusOutput) Conditions() NamespaceConditionArrayOutput {
	return o.Apply(func(v NamespaceStatus) []NamespaceCondition {
		return v.Conditions
	}).(NamespaceConditionArrayOutput)
}

func (o NamespaceStatusOutput) Phase() pulumi.StringOutput {
	return o.Apply(func(v NamespaceStatus) *string {
		return v.Phase
	}).(pulumi.StringOutput)
}

