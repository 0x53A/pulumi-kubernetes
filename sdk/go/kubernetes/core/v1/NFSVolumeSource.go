// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership
// management or SELinux relabeling.
type NFSVolumeSource struct {
	// Path that is exported by the NFS server. More info:
	// https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Path string `pulumi:"path"`

	// ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to
	// false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	ReadOnly *bool `pulumi:"readOnly"`

	// Server is the hostname or IP address of the NFS server. More info:
	// https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Server string `pulumi:"server"`

}

var _NFSVolumeSourceType = reflect.TypeOf((*NFSVolumeSource)(nil)).Elem()

// NFSVolumeSourceInput represents an input type that resolves to a NFSVolumeSource.
type NFSVolumeSourceInput interface {
	ElementType() reflect.Type

	ToNFSVolumeSourceOutput() NFSVolumeSourceOutput
	ToNFSVolumeSourceOutputWithContext(ctx context.Context) NFSVolumeSourceOutput
}

// NFSVolumeSourceArgs is a NFSVolumeSourceInput whose fields are all Input types.
type NFSVolumeSourceArgs struct {
	// Path that is exported by the NFS server. More info:
	// https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Path pulumi.StringInput `pulumi:"path"`

	// Server is the hostname or IP address of the NFS server. More info:
	// https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Server pulumi.StringInput `pulumi:"server"`

	// ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to
	// false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	ReadOnly pulumi.BoolInput `pulumi:"readOnly"`

}

func (a NFSVolumeSourceArgs) ElementType() reflect.Type {
	return _NFSVolumeSourceType
}

func (a NFSVolumeSourceArgs) ToNFSVolumeSourceOutput() NFSVolumeSourceOutput {
	return pulumi.ToOutput(a).(NFSVolumeSourceOutput)
}

func (a NFSVolumeSourceArgs) ToNFSVolumeSourceOutputWithContext(ctx context.Context) NFSVolumeSourceOutput {
	return pulumi.ToOutputWithContext(ctx, a).(NFSVolumeSourceOutput)
}

// NFSVolumeSourceOutput is an output type that resolves to a Input.
type NFSVolumeSourceOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(NFSVolumeSourceOutput{}) }

func (NFSVolumeSourceOutput) ElementType() reflect.Type {
	return _NFSVolumeSourceType
}

func (o NFSVolumeSourceOutput) Path() pulumi.StringOutput {
	return o.Apply(func(v NFSVolumeSource) string {
		return v.Path
	}).(pulumi.StringOutput)
}

func (o NFSVolumeSourceOutput) ReadOnly() pulumi.BoolOutput {
	return o.Apply(func(v NFSVolumeSource) *bool {
		return v.ReadOnly
	}).(pulumi.BoolOutput)
}

func (o NFSVolumeSourceOutput) Server() pulumi.StringOutput {
	return o.Apply(func(v NFSVolumeSource) string {
		return v.Server
	}).(pulumi.StringOutput)
}

