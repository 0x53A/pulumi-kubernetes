// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Represents a StorageOS persistent volume resource.
type StorageOSPersistentVolumeSource struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex.
	// "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`

	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`

	// SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not
	// specified, default values will be attempted.
	SecretRef *ObjectReference `pulumi:"secretRef"`

	// VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique
	// within a namespace.
	VolumeName *string `pulumi:"volumeName"`

	// VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is
	// specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be
	// mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the
	// default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces
	// that do not pre-exist within StorageOS will be created.
	VolumeNamespace *string `pulumi:"volumeNamespace"`

}

var _StorageOSPersistentVolumeSourceType = reflect.TypeOf((*StorageOSPersistentVolumeSource)(nil)).Elem()

// StorageOSPersistentVolumeSourceInput represents an input type that resolves to a StorageOSPersistentVolumeSource.
type StorageOSPersistentVolumeSourceInput interface {
	ElementType() reflect.Type

	ToStorageOSPersistentVolumeSourceOutput() StorageOSPersistentVolumeSourceOutput
	ToStorageOSPersistentVolumeSourceOutputWithContext(ctx context.Context) StorageOSPersistentVolumeSourceOutput
}

// StorageOSPersistentVolumeSourceArgs is a StorageOSPersistentVolumeSourceInput whose fields are all Input types.
type StorageOSPersistentVolumeSourceArgs struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex.
	// "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringInput `pulumi:"fsType"`

	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolInput `pulumi:"readOnly"`

	// SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not
	// specified, default values will be attempted.
	SecretRef ObjectReferenceInput `pulumi:"secretRef"`

	// VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique
	// within a namespace.
	VolumeName pulumi.StringInput `pulumi:"volumeName"`

	// VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is
	// specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be
	// mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the
	// default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces
	// that do not pre-exist within StorageOS will be created.
	VolumeNamespace pulumi.StringInput `pulumi:"volumeNamespace"`

}

func (a StorageOSPersistentVolumeSourceArgs) ElementType() reflect.Type {
	return _StorageOSPersistentVolumeSourceType
}

func (a StorageOSPersistentVolumeSourceArgs) ToStorageOSPersistentVolumeSourceOutput() StorageOSPersistentVolumeSourceOutput {
	return pulumi.ToOutput(a).(StorageOSPersistentVolumeSourceOutput)
}

func (a StorageOSPersistentVolumeSourceArgs) ToStorageOSPersistentVolumeSourceOutputWithContext(ctx context.Context) StorageOSPersistentVolumeSourceOutput {
	return pulumi.ToOutputWithContext(ctx, a).(StorageOSPersistentVolumeSourceOutput)
}

// StorageOSPersistentVolumeSourceOutput is an output type that resolves to a Input.
type StorageOSPersistentVolumeSourceOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(StorageOSPersistentVolumeSourceOutput{}) }

func (StorageOSPersistentVolumeSourceOutput) ElementType() reflect.Type {
	return _StorageOSPersistentVolumeSourceType
}

func (o StorageOSPersistentVolumeSourceOutput) FsType() pulumi.StringOutput {
	return o.Apply(func(v StorageOSPersistentVolumeSource) *string {
		return v.FsType
	}).(pulumi.StringOutput)
}

func (o StorageOSPersistentVolumeSourceOutput) ReadOnly() pulumi.BoolOutput {
	return o.Apply(func(v StorageOSPersistentVolumeSource) *bool {
		return v.ReadOnly
	}).(pulumi.BoolOutput)
}

func (o StorageOSPersistentVolumeSourceOutput) SecretRef() ObjectReferenceOutput {
	return o.Apply(func(v StorageOSPersistentVolumeSource) *ObjectReference {
		return v.SecretRef
	}).(ObjectReferenceOutput)
}

func (o StorageOSPersistentVolumeSourceOutput) VolumeName() pulumi.StringOutput {
	return o.Apply(func(v StorageOSPersistentVolumeSource) *string {
		return v.VolumeName
	}).(pulumi.StringOutput)
}

func (o StorageOSPersistentVolumeSourceOutput) VolumeNamespace() pulumi.StringOutput {
	return o.Apply(func(v StorageOSPersistentVolumeSource) *string {
		return v.VolumeNamespace
	}).(pulumi.StringOutput)
}

