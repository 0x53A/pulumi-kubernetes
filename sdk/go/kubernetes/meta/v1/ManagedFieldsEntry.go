// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the
// fieldset applies to.
type ManagedFieldsEntry struct {
	// APIVersion defines the version of this resource that this field set applies to. The format is
	// "group/version" just like the top-level APIVersion field. It is necessary to track the version
	// of a field set because it cannot be automatically converted.
	ApiVersion *string `pulumi:"apiVersion"`

	// FieldsType is the discriminator for the different fields format and version. There is currently
	// only one possible value: "FieldsV1"
	FieldsType *string `pulumi:"fieldsType"`

	// FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
	FieldsV1 interface{} `pulumi:"fieldsV1"`

	// Manager is an identifier of the workflow managing these fields.
	Manager *string `pulumi:"manager"`

	// Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only
	// valid values for this field are 'Apply' and 'Update'.
	Operation *string `pulumi:"operation"`

	// Time is timestamp of when these fields were set. It should always be empty if Operation is
	// 'Apply'
	Time *string `pulumi:"time"`

}

var _ManagedFieldsEntryType = reflect.TypeOf((*ManagedFieldsEntry)(nil)).Elem()

// ManagedFieldsEntryInput represents an input type that resolves to a ManagedFieldsEntry.
type ManagedFieldsEntryInput interface {
	ElementType() reflect.Type

	ToManagedFieldsEntryOutput() ManagedFieldsEntryOutput
	ToManagedFieldsEntryOutputWithContext(ctx context.Context) ManagedFieldsEntryOutput
}

// ManagedFieldsEntryArgs is a ManagedFieldsEntryInput whose fields are all Input types.
type ManagedFieldsEntryArgs struct {
	// APIVersion defines the version of this resource that this field set applies to. The format is
	// "group/version" just like the top-level APIVersion field. It is necessary to track the version
	// of a field set because it cannot be automatically converted.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`

	// FieldsType is the discriminator for the different fields format and version. There is currently
	// only one possible value: "FieldsV1"
	FieldsType pulumi.StringInput `pulumi:"fieldsType"`

	// FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
	FieldsV1 pulumi.Input `pulumi:"fieldsV1"`

	// Manager is an identifier of the workflow managing these fields.
	Manager pulumi.StringInput `pulumi:"manager"`

	// Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only
	// valid values for this field are 'Apply' and 'Update'.
	Operation pulumi.StringInput `pulumi:"operation"`

	// Time is timestamp of when these fields were set. It should always be empty if Operation is
	// 'Apply'
	Time pulumi.StringInput `pulumi:"time"`

}

func (a ManagedFieldsEntryArgs) ElementType() reflect.Type {
	return _ManagedFieldsEntryType
}

func (a ManagedFieldsEntryArgs) ToManagedFieldsEntryOutput() ManagedFieldsEntryOutput {
	return pulumi.ToOutput(a).(ManagedFieldsEntryOutput)
}

func (a ManagedFieldsEntryArgs) ToManagedFieldsEntryOutputWithContext(ctx context.Context) ManagedFieldsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ManagedFieldsEntryOutput)
}

// ManagedFieldsEntryOutput is an output type that resolves to a Input.
type ManagedFieldsEntryOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ManagedFieldsEntryOutput{}) }

func (ManagedFieldsEntryOutput) ElementType() reflect.Type {
	return _ManagedFieldsEntryType
}

func (o ManagedFieldsEntryOutput) ApiVersion() pulumi.StringOutput {
	return o.Apply(func(v ManagedFieldsEntry) *string {
		return v.ApiVersion
	}).(pulumi.StringOutput)
}

func (o ManagedFieldsEntryOutput) FieldsType() pulumi.StringOutput {
	return o.Apply(func(v ManagedFieldsEntry) *string {
		return v.FieldsType
	}).(pulumi.StringOutput)
}

func (o ManagedFieldsEntryOutput) FieldsV1() pulumi.AnyOutput {
	return o.Apply(func(v ManagedFieldsEntry) interface{} {
		return v.FieldsV1
	}).(pulumi.AnyOutput)
}

func (o ManagedFieldsEntryOutput) Manager() pulumi.StringOutput {
	return o.Apply(func(v ManagedFieldsEntry) *string {
		return v.Manager
	}).(pulumi.StringOutput)
}

func (o ManagedFieldsEntryOutput) Operation() pulumi.StringOutput {
	return o.Apply(func(v ManagedFieldsEntry) *string {
		return v.Operation
	}).(pulumi.StringOutput)
}

func (o ManagedFieldsEntryOutput) Time() pulumi.StringOutput {
	return o.Apply(func(v ManagedFieldsEntry) *string {
		return v.Time
	}).(pulumi.StringOutput)
}

var _ManagedFieldsEntryArrayType = reflect.TypeOf((*[]ManagedFieldsEntry)(nil)).Elem()

type ManagedFieldsEntryArrayInput interface {
	ElementType() reflect.Type

	ToManagedFieldsEntryArrayOutput() ManagedFieldsEntryArrayOutput
	ToManagedFieldsEntryArrayOutputWithContext(ctx context.Context) ManagedFieldsEntryArrayOutput
}

type ManagedFieldsEntryArray []ManagedFieldsEntryInput

func (a ManagedFieldsEntryArray) ElementType() reflect.Type {
	return _ManagedFieldsEntryArrayType
}

func (a ManagedFieldsEntryArray) ToManagedFieldsEntryArrayOutput() ManagedFieldsEntryArrayOutput {
	return pulumi.ToOutput(a).(ManagedFieldsEntryArrayOutput)
}

func (a ManagedFieldsEntryArray) ToManagedFieldsEntryArrayOutputWithContext(ctx context.Context) ManagedFieldsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ManagedFieldsEntryArrayOutput)
}

type ManagedFieldsEntryArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ManagedFieldsEntryArrayOutput{}) }

func (ManagedFieldsEntryArrayOutput) ElementType() reflect.Type {
	return _ManagedFieldsEntryArrayType
}

func (o ManagedFieldsEntryArrayOutput) Index(i pulumi.IntInput) ManagedFieldsEntryOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) ManagedFieldsEntry {
		return vs[0].([]ManagedFieldsEntry)[vs[1].(int)]
	}).(ManagedFieldsEntryOutput)
}
