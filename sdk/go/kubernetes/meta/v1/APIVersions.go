// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// APIVersions lists the versions that are available, to allow clients to discover the API at /api,
// which is the root path of the legacy v1 API.
type APIVersions struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`

	// a map of client CIDR to server address that is serving this group. This is to help clients reach
	// servers in the most network-efficient way possible. Clients can use the appropriate server
	// address as per the CIDR that they match. In case of multiple matches, clients should use the
	// longest matching CIDR. The server returns only those CIDRs that it thinks that the client can
	// match. For example: the master will return an internal IP CIDR only, if the client reaches the
	// server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or
	// request.RemoteAddr (in that order) to get the client IP.
	ServerAddressByClientCIDRs []ServerAddressByClientCIDR `pulumi:"serverAddressByClientCIDRs"`

	// versions are the api versions that are available.
	Versions []string `pulumi:"versions"`

}

var _APIVersionsType = reflect.TypeOf((*APIVersions)(nil)).Elem()

// APIVersionsInput represents an input type that resolves to a APIVersions.
type APIVersionsInput interface {
	ElementType() reflect.Type

	ToAPIVersionsOutput() APIVersionsOutput
	ToAPIVersionsOutputWithContext(ctx context.Context) APIVersionsOutput
}

// APIVersionsArgs is a APIVersionsInput whose fields are all Input types.
type APIVersionsArgs struct {
	// a map of client CIDR to server address that is serving this group. This is to help clients reach
	// servers in the most network-efficient way possible. Clients can use the appropriate server
	// address as per the CIDR that they match. In case of multiple matches, clients should use the
	// longest matching CIDR. The server returns only those CIDRs that it thinks that the client can
	// match. For example: the master will return an internal IP CIDR only, if the client reaches the
	// server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or
	// request.RemoteAddr (in that order) to get the client IP.
	ServerAddressByClientCIDRs ServerAddressByClientCIDRArrayInput `pulumi:"serverAddressByClientCIDRs"`

	// versions are the api versions that are available.
	Versions pulumi.StringArrayInput `pulumi:"versions"`

	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringInput `pulumi:"kind"`

}

func (a APIVersionsArgs) ElementType() reflect.Type {
	return _APIVersionsType
}

func (a APIVersionsArgs) ToAPIVersionsOutput() APIVersionsOutput {
	return pulumi.ToOutput(a).(APIVersionsOutput)
}

func (a APIVersionsArgs) ToAPIVersionsOutputWithContext(ctx context.Context) APIVersionsOutput {
	return pulumi.ToOutputWithContext(ctx, a).(APIVersionsOutput)
}

// APIVersionsOutput is an output type that resolves to a Input.
type APIVersionsOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(APIVersionsOutput{}) }

func (APIVersionsOutput) ElementType() reflect.Type {
	return _APIVersionsType
}

func (o APIVersionsOutput) ApiVersion() pulumi.StringOutput {
	return o.Apply(func(v APIVersions) *string {
		return v.ApiVersion
	}).(pulumi.StringOutput)
}

func (o APIVersionsOutput) Kind() pulumi.StringOutput {
	return o.Apply(func(v APIVersions) *string {
		return v.Kind
	}).(pulumi.StringOutput)
}

func (o APIVersionsOutput) ServerAddressByClientCIDRs() ServerAddressByClientCIDRArrayOutput {
	return o.Apply(func(v APIVersions) []ServerAddressByClientCIDR {
		return v.ServerAddressByClientCIDRs
	}).(ServerAddressByClientCIDRArrayOutput)
}

func (o APIVersionsOutput) Versions() pulumi.StringArrayOutput {
	return o.Apply(func(v APIVersions) []string {
		return v.Versions
	}).(pulumi.StringArrayOutput)
}

