// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.
type Preconditions struct {
	// Specifies the target ResourceVersion
	ResourceVersion *string `pulumi:"resourceVersion"`

	// Specifies the target UID.
	Uid *string `pulumi:"uid"`

}

var _PreconditionsType = reflect.TypeOf((*Preconditions)(nil)).Elem()

// PreconditionsInput represents an input type that resolves to a Preconditions.
type PreconditionsInput interface {
	ElementType() reflect.Type

	ToPreconditionsOutput() PreconditionsOutput
	ToPreconditionsOutputWithContext(ctx context.Context) PreconditionsOutput
}

// PreconditionsArgs is a PreconditionsInput whose fields are all Input types.
type PreconditionsArgs struct {
	// Specifies the target ResourceVersion
	ResourceVersion pulumi.StringInput `pulumi:"resourceVersion"`

	// Specifies the target UID.
	Uid pulumi.StringInput `pulumi:"uid"`

}

func (a PreconditionsArgs) ElementType() reflect.Type {
	return _PreconditionsType
}

func (a PreconditionsArgs) ToPreconditionsOutput() PreconditionsOutput {
	return pulumi.ToOutput(a).(PreconditionsOutput)
}

func (a PreconditionsArgs) ToPreconditionsOutputWithContext(ctx context.Context) PreconditionsOutput {
	return pulumi.ToOutputWithContext(ctx, a).(PreconditionsOutput)
}

// PreconditionsOutput is an output type that resolves to a Input.
type PreconditionsOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(PreconditionsOutput{}) }

func (PreconditionsOutput) ElementType() reflect.Type {
	return _PreconditionsType
}

func (o PreconditionsOutput) ResourceVersion() pulumi.StringOutput {
	return o.Apply(func(v Preconditions) *string {
		return v.ResourceVersion
	}).(pulumi.StringOutput)
}

func (o PreconditionsOutput) Uid() pulumi.StringOutput {
	return o.Apply(func(v Preconditions) *string {
		return v.Uid
	}).(pulumi.StringOutput)
}

