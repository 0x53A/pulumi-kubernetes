// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	coreV1 "github.com/pulumi/pulumi-kubernetes/sdk/go/kubernetes/core/v1"
	metaV1 "github.com/pulumi/pulumi-kubernetes/sdk/go/kubernetes/meta/v1"
)

// A StatefulSetSpec is the specification of a StatefulSet.
type StatefulSetSpec struct {
	// podManagementPolicy controls how pods are created during initial scale up, when replacing pods
	// on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in
	// increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready
	// before continuing. When scaling down, the pods are removed in the opposite order. The
	// alternative policy is `Parallel` which will create pods in parallel to match the desired scale
	// without waiting, and on scale down will delete all pods at once.
	PodManagementPolicy *string `pulumi:"podManagementPolicy"`

	// replicas is the desired number of replicas of the given Template. These are replicas in the
	// sense that they are instantiations of the same Template, but individual replicas also have a
	// consistent identity. If unspecified, defaults to 1.
	Replicas *int `pulumi:"replicas"`

	// revisionHistoryLimit is the maximum number of revisions that will be maintained in the
	// StatefulSet's revision history. The revision history consists of all revisions not represented
	// by a currently applied StatefulSetSpec version. The default value is 10.
	RevisionHistoryLimit *int `pulumi:"revisionHistoryLimit"`

	// selector is a label query over pods that should match the replica count. If empty, defaulted to
	// labels on the pod template. More info:
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
	Selector *metaV1.LabelSelector `pulumi:"selector"`

	// serviceName is the name of the service that governs this StatefulSet. This service must exist
	// before the StatefulSet, and is responsible for the network identity of the set. Pods get
	// DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local
	// where "pod-specific-string" is managed by the StatefulSet controller.
	ServiceName string `pulumi:"serviceName"`

	// template is the object that describes the pod that will be created if insufficient replicas are
	// detected. Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique
	// identity from the rest of the StatefulSet.
	Template coreV1.PodTemplateSpec `pulumi:"template"`

	// updateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in
	// the StatefulSet when a revision is made to Template.
	UpdateStrategy *StatefulSetUpdateStrategy `pulumi:"updateStrategy"`

	// volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet
	// controller is responsible for mapping network identities to claims in a way that maintains the
	// identity of a pod. Every claim in this list must have at least one matching (by name)
	// volumeMount in one container in the template. A claim in this list takes precedence over any
	// volumes in the template, with the same name.
	VolumeClaimTemplates []coreV1.PersistentVolumeClaimProperty `pulumi:"volumeClaimTemplates"`

}

var _StatefulSetSpecType = reflect.TypeOf((*StatefulSetSpec)(nil)).Elem()

// StatefulSetSpecInput represents an input type that resolves to a StatefulSetSpec.
type StatefulSetSpecInput interface {
	ElementType() reflect.Type

	ToStatefulSetSpecOutput() StatefulSetSpecOutput
	ToStatefulSetSpecOutputWithContext(ctx context.Context) StatefulSetSpecOutput
}

// StatefulSetSpecArgs is a StatefulSetSpecInput whose fields are all Input types.
type StatefulSetSpecArgs struct {
	// serviceName is the name of the service that governs this StatefulSet. This service must exist
	// before the StatefulSet, and is responsible for the network identity of the set. Pods get
	// DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local
	// where "pod-specific-string" is managed by the StatefulSet controller.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`

	// template is the object that describes the pod that will be created if insufficient replicas are
	// detected. Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique
	// identity from the rest of the StatefulSet.
	Template coreV1.PodTemplateSpecInput `pulumi:"template"`

	// podManagementPolicy controls how pods are created during initial scale up, when replacing pods
	// on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in
	// increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready
	// before continuing. When scaling down, the pods are removed in the opposite order. The
	// alternative policy is `Parallel` which will create pods in parallel to match the desired scale
	// without waiting, and on scale down will delete all pods at once.
	PodManagementPolicy pulumi.StringInput `pulumi:"podManagementPolicy"`

	// replicas is the desired number of replicas of the given Template. These are replicas in the
	// sense that they are instantiations of the same Template, but individual replicas also have a
	// consistent identity. If unspecified, defaults to 1.
	Replicas pulumi.IntInput `pulumi:"replicas"`

	// revisionHistoryLimit is the maximum number of revisions that will be maintained in the
	// StatefulSet's revision history. The revision history consists of all revisions not represented
	// by a currently applied StatefulSetSpec version. The default value is 10.
	RevisionHistoryLimit pulumi.IntInput `pulumi:"revisionHistoryLimit"`

	// selector is a label query over pods that should match the replica count. If empty, defaulted to
	// labels on the pod template. More info:
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
	Selector metaV1.LabelSelectorInput `pulumi:"selector"`

	// updateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in
	// the StatefulSet when a revision is made to Template.
	UpdateStrategy StatefulSetUpdateStrategyInput `pulumi:"updateStrategy"`

	// volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet
	// controller is responsible for mapping network identities to claims in a way that maintains the
	// identity of a pod. Every claim in this list must have at least one matching (by name)
	// volumeMount in one container in the template. A claim in this list takes precedence over any
	// volumes in the template, with the same name.
	VolumeClaimTemplates coreV1.PersistentVolumeClaimPropertyArrayInput `pulumi:"volumeClaimTemplates"`

}

func (a StatefulSetSpecArgs) ElementType() reflect.Type {
	return _StatefulSetSpecType
}

func (a StatefulSetSpecArgs) ToStatefulSetSpecOutput() StatefulSetSpecOutput {
	return pulumi.ToOutput(a).(StatefulSetSpecOutput)
}

func (a StatefulSetSpecArgs) ToStatefulSetSpecOutputWithContext(ctx context.Context) StatefulSetSpecOutput {
	return pulumi.ToOutputWithContext(ctx, a).(StatefulSetSpecOutput)
}

// StatefulSetSpecOutput is an output type that resolves to a Input.
type StatefulSetSpecOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(StatefulSetSpecOutput{}) }

func (StatefulSetSpecOutput) ElementType() reflect.Type {
	return _StatefulSetSpecType
}

func (o StatefulSetSpecOutput) PodManagementPolicy() pulumi.StringOutput {
	return o.Apply(func(v StatefulSetSpec) *string {
		return v.PodManagementPolicy
	}).(pulumi.StringOutput)
}

func (o StatefulSetSpecOutput) Replicas() pulumi.IntOutput {
	return o.Apply(func(v StatefulSetSpec) *int {
		return v.Replicas
	}).(pulumi.IntOutput)
}

func (o StatefulSetSpecOutput) RevisionHistoryLimit() pulumi.IntOutput {
	return o.Apply(func(v StatefulSetSpec) *int {
		return v.RevisionHistoryLimit
	}).(pulumi.IntOutput)
}

func (o StatefulSetSpecOutput) Selector() metaV1.LabelSelectorOutput {
	return o.Apply(func(v StatefulSetSpec) *metaV1.LabelSelector {
		return v.Selector
	}).(metaV1.LabelSelectorOutput)
}

func (o StatefulSetSpecOutput) ServiceName() pulumi.StringOutput {
	return o.Apply(func(v StatefulSetSpec) string {
		return v.ServiceName
	}).(pulumi.StringOutput)
}

func (o StatefulSetSpecOutput) Template() coreV1.PodTemplateSpecOutput {
	return o.Apply(func(v StatefulSetSpec) coreV1.PodTemplateSpec {
		return v.Template
	}).(coreV1.PodTemplateSpecOutput)
}

func (o StatefulSetSpecOutput) UpdateStrategy() StatefulSetUpdateStrategyOutput {
	return o.Apply(func(v StatefulSetSpec) *StatefulSetUpdateStrategy {
		return v.UpdateStrategy
	}).(StatefulSetUpdateStrategyOutput)
}

func (o StatefulSetSpecOutput) VolumeClaimTemplates() coreV1.PersistentVolumeClaimPropertyArrayOutput {
	return o.Apply(func(v StatefulSetSpec) []coreV1.PersistentVolumeClaimProperty {
		return v.VolumeClaimTemplates
	}).(coreV1.PersistentVolumeClaimPropertyArrayOutput)
}

