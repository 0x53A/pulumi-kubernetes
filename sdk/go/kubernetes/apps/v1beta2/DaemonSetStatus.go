// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// DaemonSetStatus represents the current status of a daemon set.
type DaemonSetStatus struct {
	// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a
	// collision avoidance mechanism when it needs to create the name for the newest
	// ControllerRevision.
	CollisionCount *int `pulumi:"collisionCount"`

	// Represents the latest available observations of a DaemonSet's current state.
	Conditions []DaemonSetCondition `pulumi:"conditions"`

	// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon
	// pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	CurrentNumberScheduled int `pulumi:"currentNumberScheduled"`

	// The total number of nodes that should be running the daemon pod (including nodes correctly
	// running the daemon pod). More info:
	// https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	DesiredNumberScheduled int `pulumi:"desiredNumberScheduled"`

	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod
	// running and available (ready for at least spec.minReadySeconds)
	NumberAvailable *int `pulumi:"numberAvailable"`

	// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod.
	// More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	NumberMisscheduled int `pulumi:"numberMisscheduled"`

	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod
	// running and ready.
	NumberReady int `pulumi:"numberReady"`

	// The number of nodes that should be running the daemon pod and have none of the daemon pod
	// running and available (ready for at least spec.minReadySeconds)
	NumberUnavailable *int `pulumi:"numberUnavailable"`

	// The most recent generation observed by the daemon set controller.
	ObservedGeneration *int `pulumi:"observedGeneration"`

	// The total number of nodes that are running updated daemon pod
	UpdatedNumberScheduled *int `pulumi:"updatedNumberScheduled"`

}

var _DaemonSetStatusType = reflect.TypeOf((*DaemonSetStatus)(nil)).Elem()

// DaemonSetStatusInput represents an input type that resolves to a DaemonSetStatus.
type DaemonSetStatusInput interface {
	ElementType() reflect.Type

	ToDaemonSetStatusOutput() DaemonSetStatusOutput
	ToDaemonSetStatusOutputWithContext(ctx context.Context) DaemonSetStatusOutput
}

// DaemonSetStatusArgs is a DaemonSetStatusInput whose fields are all Input types.
type DaemonSetStatusArgs struct {
	// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon
	// pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	CurrentNumberScheduled pulumi.IntInput `pulumi:"currentNumberScheduled"`

	// The total number of nodes that should be running the daemon pod (including nodes correctly
	// running the daemon pod). More info:
	// https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	DesiredNumberScheduled pulumi.IntInput `pulumi:"desiredNumberScheduled"`

	// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod.
	// More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	NumberMisscheduled pulumi.IntInput `pulumi:"numberMisscheduled"`

	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod
	// running and ready.
	NumberReady pulumi.IntInput `pulumi:"numberReady"`

	// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a
	// collision avoidance mechanism when it needs to create the name for the newest
	// ControllerRevision.
	CollisionCount pulumi.IntInput `pulumi:"collisionCount"`

	// Represents the latest available observations of a DaemonSet's current state.
	Conditions DaemonSetConditionArrayInput `pulumi:"conditions"`

	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod
	// running and available (ready for at least spec.minReadySeconds)
	NumberAvailable pulumi.IntInput `pulumi:"numberAvailable"`

	// The number of nodes that should be running the daemon pod and have none of the daemon pod
	// running and available (ready for at least spec.minReadySeconds)
	NumberUnavailable pulumi.IntInput `pulumi:"numberUnavailable"`

	// The most recent generation observed by the daemon set controller.
	ObservedGeneration pulumi.IntInput `pulumi:"observedGeneration"`

	// The total number of nodes that are running updated daemon pod
	UpdatedNumberScheduled pulumi.IntInput `pulumi:"updatedNumberScheduled"`

}

func (a DaemonSetStatusArgs) ElementType() reflect.Type {
	return _DaemonSetStatusType
}

func (a DaemonSetStatusArgs) ToDaemonSetStatusOutput() DaemonSetStatusOutput {
	return pulumi.ToOutput(a).(DaemonSetStatusOutput)
}

func (a DaemonSetStatusArgs) ToDaemonSetStatusOutputWithContext(ctx context.Context) DaemonSetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, a).(DaemonSetStatusOutput)
}

// DaemonSetStatusOutput is an output type that resolves to a Input.
type DaemonSetStatusOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(DaemonSetStatusOutput{}) }

func (DaemonSetStatusOutput) ElementType() reflect.Type {
	return _DaemonSetStatusType
}

func (o DaemonSetStatusOutput) CollisionCount() pulumi.IntOutput {
	return o.Apply(func(v DaemonSetStatus) *int {
		return v.CollisionCount
	}).(pulumi.IntOutput)
}

func (o DaemonSetStatusOutput) Conditions() DaemonSetConditionArrayOutput {
	return o.Apply(func(v DaemonSetStatus) []DaemonSetCondition {
		return v.Conditions
	}).(DaemonSetConditionArrayOutput)
}

func (o DaemonSetStatusOutput) CurrentNumberScheduled() pulumi.IntOutput {
	return o.Apply(func(v DaemonSetStatus) int {
		return v.CurrentNumberScheduled
	}).(pulumi.IntOutput)
}

func (o DaemonSetStatusOutput) DesiredNumberScheduled() pulumi.IntOutput {
	return o.Apply(func(v DaemonSetStatus) int {
		return v.DesiredNumberScheduled
	}).(pulumi.IntOutput)
}

func (o DaemonSetStatusOutput) NumberAvailable() pulumi.IntOutput {
	return o.Apply(func(v DaemonSetStatus) *int {
		return v.NumberAvailable
	}).(pulumi.IntOutput)
}

func (o DaemonSetStatusOutput) NumberMisscheduled() pulumi.IntOutput {
	return o.Apply(func(v DaemonSetStatus) int {
		return v.NumberMisscheduled
	}).(pulumi.IntOutput)
}

func (o DaemonSetStatusOutput) NumberReady() pulumi.IntOutput {
	return o.Apply(func(v DaemonSetStatus) int {
		return v.NumberReady
	}).(pulumi.IntOutput)
}

func (o DaemonSetStatusOutput) NumberUnavailable() pulumi.IntOutput {
	return o.Apply(func(v DaemonSetStatus) *int {
		return v.NumberUnavailable
	}).(pulumi.IntOutput)
}

func (o DaemonSetStatusOutput) ObservedGeneration() pulumi.IntOutput {
	return o.Apply(func(v DaemonSetStatus) *int {
		return v.ObservedGeneration
	}).(pulumi.IntOutput)
}

func (o DaemonSetStatusOutput) UpdatedNumberScheduled() pulumi.IntOutput {
	return o.Apply(func(v DaemonSetStatus) *int {
		return v.UpdatedNumberScheduled
	}).(pulumi.IntOutput)
}

