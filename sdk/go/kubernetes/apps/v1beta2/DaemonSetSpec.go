// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	coreV1 "github.com/pulumi/pulumi-kubernetes/sdk/go/kubernetes/core/v1"
	metaV1 "github.com/pulumi/pulumi-kubernetes/sdk/go/kubernetes/meta/v1"
)

// DaemonSetSpec is the specification of a daemon set.
type DaemonSetSpec struct {
	// The minimum number of seconds for which a newly created DaemonSet pod should be ready without
	// any of its container crashing, for it to be considered available. Defaults to 0 (pod will be
	// considered available as soon as it is ready).
	MinReadySeconds *int `pulumi:"minReadySeconds"`

	// The number of old history to retain to allow rollback. This is a pointer to distinguish between
	// explicit zero and not specified. Defaults to 10.
	RevisionHistoryLimit *int `pulumi:"revisionHistoryLimit"`

	// A label query over pods that are managed by the daemon set. Must match in order to be
	// controlled. It must match the pod template's labels. More info:
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
	Selector metaV1.LabelSelector `pulumi:"selector"`

	// An object that describes the pod that will be created. The DaemonSet will create exactly one
	// copy of this pod on every node that matches the template's node selector (or on every node if no
	// node selector is specified). More info:
	// https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
	Template coreV1.PodTemplateSpec `pulumi:"template"`

	// An update strategy to replace existing DaemonSet pods with new pods.
	UpdateStrategy *DaemonSetUpdateStrategy `pulumi:"updateStrategy"`

}

var _DaemonSetSpecType = reflect.TypeOf((*DaemonSetSpec)(nil)).Elem()

// DaemonSetSpecInput represents an input type that resolves to a DaemonSetSpec.
type DaemonSetSpecInput interface {
	ElementType() reflect.Type

	ToDaemonSetSpecOutput() DaemonSetSpecOutput
	ToDaemonSetSpecOutputWithContext(ctx context.Context) DaemonSetSpecOutput
}

// DaemonSetSpecArgs is a DaemonSetSpecInput whose fields are all Input types.
type DaemonSetSpecArgs struct {
	// A label query over pods that are managed by the daemon set. Must match in order to be
	// controlled. It must match the pod template's labels. More info:
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
	Selector metaV1.LabelSelectorInput `pulumi:"selector"`

	// An object that describes the pod that will be created. The DaemonSet will create exactly one
	// copy of this pod on every node that matches the template's node selector (or on every node if no
	// node selector is specified). More info:
	// https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
	Template coreV1.PodTemplateSpecInput `pulumi:"template"`

	// The minimum number of seconds for which a newly created DaemonSet pod should be ready without
	// any of its container crashing, for it to be considered available. Defaults to 0 (pod will be
	// considered available as soon as it is ready).
	MinReadySeconds pulumi.IntInput `pulumi:"minReadySeconds"`

	// The number of old history to retain to allow rollback. This is a pointer to distinguish between
	// explicit zero and not specified. Defaults to 10.
	RevisionHistoryLimit pulumi.IntInput `pulumi:"revisionHistoryLimit"`

	// An update strategy to replace existing DaemonSet pods with new pods.
	UpdateStrategy DaemonSetUpdateStrategyInput `pulumi:"updateStrategy"`

}

func (a DaemonSetSpecArgs) ElementType() reflect.Type {
	return _DaemonSetSpecType
}

func (a DaemonSetSpecArgs) ToDaemonSetSpecOutput() DaemonSetSpecOutput {
	return pulumi.ToOutput(a).(DaemonSetSpecOutput)
}

func (a DaemonSetSpecArgs) ToDaemonSetSpecOutputWithContext(ctx context.Context) DaemonSetSpecOutput {
	return pulumi.ToOutputWithContext(ctx, a).(DaemonSetSpecOutput)
}

// DaemonSetSpecOutput is an output type that resolves to a Input.
type DaemonSetSpecOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(DaemonSetSpecOutput{}) }

func (DaemonSetSpecOutput) ElementType() reflect.Type {
	return _DaemonSetSpecType
}

func (o DaemonSetSpecOutput) MinReadySeconds() pulumi.IntOutput {
	return o.Apply(func(v DaemonSetSpec) *int {
		return v.MinReadySeconds
	}).(pulumi.IntOutput)
}

func (o DaemonSetSpecOutput) RevisionHistoryLimit() pulumi.IntOutput {
	return o.Apply(func(v DaemonSetSpec) *int {
		return v.RevisionHistoryLimit
	}).(pulumi.IntOutput)
}

func (o DaemonSetSpecOutput) Selector() metaV1.LabelSelectorOutput {
	return o.Apply(func(v DaemonSetSpec) metaV1.LabelSelector {
		return v.Selector
	}).(metaV1.LabelSelectorOutput)
}

func (o DaemonSetSpecOutput) Template() coreV1.PodTemplateSpecOutput {
	return o.Apply(func(v DaemonSetSpec) coreV1.PodTemplateSpec {
		return v.Template
	}).(coreV1.PodTemplateSpecOutput)
}

func (o DaemonSetSpecOutput) UpdateStrategy() DaemonSetUpdateStrategyOutput {
	return o.Apply(func(v DaemonSetSpec) *DaemonSetUpdateStrategy {
		return v.UpdateStrategy
	}).(DaemonSetUpdateStrategyOutput)
}

