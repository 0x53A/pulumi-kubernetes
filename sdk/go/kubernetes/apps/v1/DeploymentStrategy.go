// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// DeploymentStrategy describes how to replace existing pods with new ones.
type DeploymentStrategy struct {
	// Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.
	RollingUpdate *RollingUpdateDeployment `pulumi:"rollingUpdate"`

	// Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
	Type *string `pulumi:"type"`

}

var _DeploymentStrategyType = reflect.TypeOf((*DeploymentStrategy)(nil)).Elem()

// DeploymentStrategyInput represents an input type that resolves to a DeploymentStrategy.
type DeploymentStrategyInput interface {
	ElementType() reflect.Type

	ToDeploymentStrategyOutput() DeploymentStrategyOutput
	ToDeploymentStrategyOutputWithContext(ctx context.Context) DeploymentStrategyOutput
}

// DeploymentStrategyArgs is a DeploymentStrategyInput whose fields are all Input types.
type DeploymentStrategyArgs struct {
	// Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.
	RollingUpdate RollingUpdateDeploymentInput `pulumi:"rollingUpdate"`

	// Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
	Type pulumi.StringInput `pulumi:"type"`

}

func (a DeploymentStrategyArgs) ElementType() reflect.Type {
	return _DeploymentStrategyType
}

func (a DeploymentStrategyArgs) ToDeploymentStrategyOutput() DeploymentStrategyOutput {
	return pulumi.ToOutput(a).(DeploymentStrategyOutput)
}

func (a DeploymentStrategyArgs) ToDeploymentStrategyOutputWithContext(ctx context.Context) DeploymentStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, a).(DeploymentStrategyOutput)
}

// DeploymentStrategyOutput is an output type that resolves to a Input.
type DeploymentStrategyOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(DeploymentStrategyOutput{}) }

func (DeploymentStrategyOutput) ElementType() reflect.Type {
	return _DeploymentStrategyType
}

func (o DeploymentStrategyOutput) RollingUpdate() RollingUpdateDeploymentOutput {
	return o.Apply(func(v DeploymentStrategy) *RollingUpdateDeployment {
		return v.RollingUpdate
	}).(RollingUpdateDeploymentOutput)
}

func (o DeploymentStrategyOutput) Type() pulumi.StringOutput {
	return o.Apply(func(v DeploymentStrategy) *string {
		return v.Type
	}).(pulumi.StringOutput)
}

