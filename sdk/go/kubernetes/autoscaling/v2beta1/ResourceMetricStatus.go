// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as
// specified in requests and limits, describing each pod in the current scale target (e.g. CPU or
// memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of
// those available to normal per-pod metrics using the "pods" source.
type ResourceMetricStatus struct {
	// currentAverageUtilization is the current value of the average of the resource metric across all
	// relevant pods, represented as a percentage of the requested value of the resource for the pods.
	// It will only be present if `targetAverageValue` was set in the corresponding metric
	// specification.
	CurrentAverageUtilization *int `pulumi:"currentAverageUtilization"`

	// currentAverageValue is the current value of the average of the resource metric across all
	// relevant pods, as a raw value (instead of as a percentage of the request), similar to the "pods"
	// metric source type. It will always be set, regardless of the corresponding metric specification.
	CurrentAverageValue string `pulumi:"currentAverageValue"`

	// name is the name of the resource in question.
	Name string `pulumi:"name"`

}

var _ResourceMetricStatusType = reflect.TypeOf((*ResourceMetricStatus)(nil)).Elem()

// ResourceMetricStatusInput represents an input type that resolves to a ResourceMetricStatus.
type ResourceMetricStatusInput interface {
	ElementType() reflect.Type

	ToResourceMetricStatusOutput() ResourceMetricStatusOutput
	ToResourceMetricStatusOutputWithContext(ctx context.Context) ResourceMetricStatusOutput
}

// ResourceMetricStatusArgs is a ResourceMetricStatusInput whose fields are all Input types.
type ResourceMetricStatusArgs struct {
	// currentAverageValue is the current value of the average of the resource metric across all
	// relevant pods, as a raw value (instead of as a percentage of the request), similar to the "pods"
	// metric source type. It will always be set, regardless of the corresponding metric specification.
	CurrentAverageValue pulumi.StringInput `pulumi:"currentAverageValue"`

	// name is the name of the resource in question.
	Name pulumi.StringInput `pulumi:"name"`

	// currentAverageUtilization is the current value of the average of the resource metric across all
	// relevant pods, represented as a percentage of the requested value of the resource for the pods.
	// It will only be present if `targetAverageValue` was set in the corresponding metric
	// specification.
	CurrentAverageUtilization pulumi.IntInput `pulumi:"currentAverageUtilization"`

}

func (a ResourceMetricStatusArgs) ElementType() reflect.Type {
	return _ResourceMetricStatusType
}

func (a ResourceMetricStatusArgs) ToResourceMetricStatusOutput() ResourceMetricStatusOutput {
	return pulumi.ToOutput(a).(ResourceMetricStatusOutput)
}

func (a ResourceMetricStatusArgs) ToResourceMetricStatusOutputWithContext(ctx context.Context) ResourceMetricStatusOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ResourceMetricStatusOutput)
}

// ResourceMetricStatusOutput is an output type that resolves to a Input.
type ResourceMetricStatusOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ResourceMetricStatusOutput{}) }

func (ResourceMetricStatusOutput) ElementType() reflect.Type {
	return _ResourceMetricStatusType
}

func (o ResourceMetricStatusOutput) CurrentAverageUtilization() pulumi.IntOutput {
	return o.Apply(func(v ResourceMetricStatus) *int {
		return v.CurrentAverageUtilization
	}).(pulumi.IntOutput)
}

func (o ResourceMetricStatusOutput) CurrentAverageValue() pulumi.StringOutput {
	return o.Apply(func(v ResourceMetricStatus) string {
		return v.CurrentAverageValue
	}).(pulumi.StringOutput)
}

func (o ResourceMetricStatusOutput) Name() pulumi.StringOutput {
	return o.Apply(func(v ResourceMetricStatus) string {
		return v.Name
	}).(pulumi.StringOutput)
}

