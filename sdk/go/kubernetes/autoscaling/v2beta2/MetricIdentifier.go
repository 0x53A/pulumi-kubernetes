// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	metaV1 "github.com/pulumi/pulumi-kubernetes/sdk/go/kubernetes/meta/v1"
)

// MetricIdentifier defines the name and optionally selector for a metric
type MetricIdentifier struct {
	// name is the name of the given metric
	Name string `pulumi:"name"`

	// selector is the string-encoded form of a standard kubernetes label selector for the given metric
	// When set, it is passed as an additional parameter to the metrics server for more specific
	// metrics scoping. When unset, just the metricName will be used to gather metrics.
	Selector *metaV1.LabelSelector `pulumi:"selector"`

}

var _MetricIdentifierType = reflect.TypeOf((*MetricIdentifier)(nil)).Elem()

// MetricIdentifierInput represents an input type that resolves to a MetricIdentifier.
type MetricIdentifierInput interface {
	ElementType() reflect.Type

	ToMetricIdentifierOutput() MetricIdentifierOutput
	ToMetricIdentifierOutputWithContext(ctx context.Context) MetricIdentifierOutput
}

// MetricIdentifierArgs is a MetricIdentifierInput whose fields are all Input types.
type MetricIdentifierArgs struct {
	// name is the name of the given metric
	Name pulumi.StringInput `pulumi:"name"`

	// selector is the string-encoded form of a standard kubernetes label selector for the given metric
	// When set, it is passed as an additional parameter to the metrics server for more specific
	// metrics scoping. When unset, just the metricName will be used to gather metrics.
	Selector metaV1.LabelSelectorInput `pulumi:"selector"`

}

func (a MetricIdentifierArgs) ElementType() reflect.Type {
	return _MetricIdentifierType
}

func (a MetricIdentifierArgs) ToMetricIdentifierOutput() MetricIdentifierOutput {
	return pulumi.ToOutput(a).(MetricIdentifierOutput)
}

func (a MetricIdentifierArgs) ToMetricIdentifierOutputWithContext(ctx context.Context) MetricIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, a).(MetricIdentifierOutput)
}

// MetricIdentifierOutput is an output type that resolves to a Input.
type MetricIdentifierOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(MetricIdentifierOutput{}) }

func (MetricIdentifierOutput) ElementType() reflect.Type {
	return _MetricIdentifierType
}

func (o MetricIdentifierOutput) Name() pulumi.StringOutput {
	return o.Apply(func(v MetricIdentifier) string {
		return v.Name
	}).(pulumi.StringOutput)
}

func (o MetricIdentifierOutput) Selector() metaV1.LabelSelectorOutput {
	return o.Apply(func(v MetricIdentifier) *metaV1.LabelSelector {
		return v.Selector
	}).(metaV1.LabelSelectorOutput)
}

