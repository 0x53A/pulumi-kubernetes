// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// MetricTarget defines the target value, average value, or average utilization of a specific metric
type MetricTarget struct {
	// averageUtilization is the target value of the average of the resource metric across all relevant
	// pods, represented as a percentage of the requested value of the resource for the pods. Currently
	// only valid for Resource metric source type
	AverageUtilization *int `pulumi:"averageUtilization"`

	// averageValue is the target value of the average of the metric across all relevant pods (as a
	// quantity)
	AverageValue *string `pulumi:"averageValue"`

	// type represents whether the metric type is Utilization, Value, or AverageValue
	Type string `pulumi:"type"`

	// value is the target value of the metric (as a quantity).
	Value *string `pulumi:"value"`

}

var _MetricTargetType = reflect.TypeOf((*MetricTarget)(nil)).Elem()

// MetricTargetInput represents an input type that resolves to a MetricTarget.
type MetricTargetInput interface {
	ElementType() reflect.Type

	ToMetricTargetOutput() MetricTargetOutput
	ToMetricTargetOutputWithContext(ctx context.Context) MetricTargetOutput
}

// MetricTargetArgs is a MetricTargetInput whose fields are all Input types.
type MetricTargetArgs struct {
	// type represents whether the metric type is Utilization, Value, or AverageValue
	Type pulumi.StringInput `pulumi:"type"`

	// averageUtilization is the target value of the average of the resource metric across all relevant
	// pods, represented as a percentage of the requested value of the resource for the pods. Currently
	// only valid for Resource metric source type
	AverageUtilization pulumi.IntInput `pulumi:"averageUtilization"`

	// averageValue is the target value of the average of the metric across all relevant pods (as a
	// quantity)
	AverageValue pulumi.StringInput `pulumi:"averageValue"`

	// value is the target value of the metric (as a quantity).
	Value pulumi.StringInput `pulumi:"value"`

}

func (a MetricTargetArgs) ElementType() reflect.Type {
	return _MetricTargetType
}

func (a MetricTargetArgs) ToMetricTargetOutput() MetricTargetOutput {
	return pulumi.ToOutput(a).(MetricTargetOutput)
}

func (a MetricTargetArgs) ToMetricTargetOutputWithContext(ctx context.Context) MetricTargetOutput {
	return pulumi.ToOutputWithContext(ctx, a).(MetricTargetOutput)
}

// MetricTargetOutput is an output type that resolves to a Input.
type MetricTargetOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(MetricTargetOutput{}) }

func (MetricTargetOutput) ElementType() reflect.Type {
	return _MetricTargetType
}

func (o MetricTargetOutput) AverageUtilization() pulumi.IntOutput {
	return o.Apply(func(v MetricTarget) *int {
		return v.AverageUtilization
	}).(pulumi.IntOutput)
}

func (o MetricTargetOutput) AverageValue() pulumi.StringOutput {
	return o.Apply(func(v MetricTarget) *string {
		return v.AverageValue
	}).(pulumi.StringOutput)
}

func (o MetricTargetOutput) Type() pulumi.StringOutput {
	return o.Apply(func(v MetricTarget) string {
		return v.Type
	}).(pulumi.StringOutput)
}

func (o MetricTargetOutput) Value() pulumi.StringOutput {
	return o.Apply(func(v MetricTarget) *string {
		return v.Value
	}).(pulumi.StringOutput)
}

