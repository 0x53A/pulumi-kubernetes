// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for
// example, hits-per-second on an Ingress object).
type ObjectMetricSource struct {
	
	DescribedObject CrossVersionObjectReference `pulumi:"describedObject"`

	// metric identifies the target metric by name and selector
	Metric MetricIdentifier `pulumi:"metric"`

	// target specifies the target value for the given metric
	Target MetricTarget `pulumi:"target"`

}

var _ObjectMetricSourceType = reflect.TypeOf((*ObjectMetricSource)(nil)).Elem()

// ObjectMetricSourceInput represents an input type that resolves to a ObjectMetricSource.
type ObjectMetricSourceInput interface {
	ElementType() reflect.Type

	ToObjectMetricSourceOutput() ObjectMetricSourceOutput
	ToObjectMetricSourceOutputWithContext(ctx context.Context) ObjectMetricSourceOutput
}

// ObjectMetricSourceArgs is a ObjectMetricSourceInput whose fields are all Input types.
type ObjectMetricSourceArgs struct {
	
	DescribedObject CrossVersionObjectReferenceInput `pulumi:"describedObject"`

	// metric identifies the target metric by name and selector
	Metric MetricIdentifierInput `pulumi:"metric"`

	// target specifies the target value for the given metric
	Target MetricTargetInput `pulumi:"target"`

}

func (a ObjectMetricSourceArgs) ElementType() reflect.Type {
	return _ObjectMetricSourceType
}

func (a ObjectMetricSourceArgs) ToObjectMetricSourceOutput() ObjectMetricSourceOutput {
	return pulumi.ToOutput(a).(ObjectMetricSourceOutput)
}

func (a ObjectMetricSourceArgs) ToObjectMetricSourceOutputWithContext(ctx context.Context) ObjectMetricSourceOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ObjectMetricSourceOutput)
}

// ObjectMetricSourceOutput is an output type that resolves to a Input.
type ObjectMetricSourceOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ObjectMetricSourceOutput{}) }

func (ObjectMetricSourceOutput) ElementType() reflect.Type {
	return _ObjectMetricSourceType
}

func (o ObjectMetricSourceOutput) DescribedObject() CrossVersionObjectReferenceOutput {
	return o.Apply(func(v ObjectMetricSource) CrossVersionObjectReference {
		return v.DescribedObject
	}).(CrossVersionObjectReferenceOutput)
}

func (o ObjectMetricSourceOutput) Metric() MetricIdentifierOutput {
	return o.Apply(func(v ObjectMetricSource) MetricIdentifier {
		return v.Metric
	}).(MetricIdentifierOutput)
}

func (o ObjectMetricSourceOutput) Target() MetricTargetOutput {
	return o.Apply(func(v ObjectMetricSource) MetricTarget {
		return v.Target
	}).(MetricTargetOutput)
}

