// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// HorizontalPodAutoscalerCondition describes the state of a HorizontalPodAutoscaler at a certain
// point.
type HorizontalPodAutoscalerCondition struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another
	LastTransitionTime *string `pulumi:"lastTransitionTime"`

	// message is a human-readable explanation containing details about the transition
	Message *string `pulumi:"message"`

	// reason is the reason for the condition's last transition.
	Reason *string `pulumi:"reason"`

	// status is the status of the condition (True, False, Unknown)
	Status string `pulumi:"status"`

	// type describes the current condition
	Type string `pulumi:"type"`

}

var _HorizontalPodAutoscalerConditionType = reflect.TypeOf((*HorizontalPodAutoscalerCondition)(nil)).Elem()

// HorizontalPodAutoscalerConditionInput represents an input type that resolves to a HorizontalPodAutoscalerCondition.
type HorizontalPodAutoscalerConditionInput interface {
	ElementType() reflect.Type

	ToHorizontalPodAutoscalerConditionOutput() HorizontalPodAutoscalerConditionOutput
	ToHorizontalPodAutoscalerConditionOutputWithContext(ctx context.Context) HorizontalPodAutoscalerConditionOutput
}

// HorizontalPodAutoscalerConditionArgs is a HorizontalPodAutoscalerConditionInput whose fields are all Input types.
type HorizontalPodAutoscalerConditionArgs struct {
	// status is the status of the condition (True, False, Unknown)
	Status pulumi.StringInput `pulumi:"status"`

	// type describes the current condition
	Type pulumi.StringInput `pulumi:"type"`

	// lastTransitionTime is the last time the condition transitioned from one status to another
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`

	// message is a human-readable explanation containing details about the transition
	Message pulumi.StringInput `pulumi:"message"`

	// reason is the reason for the condition's last transition.
	Reason pulumi.StringInput `pulumi:"reason"`

}

func (a HorizontalPodAutoscalerConditionArgs) ElementType() reflect.Type {
	return _HorizontalPodAutoscalerConditionType
}

func (a HorizontalPodAutoscalerConditionArgs) ToHorizontalPodAutoscalerConditionOutput() HorizontalPodAutoscalerConditionOutput {
	return pulumi.ToOutput(a).(HorizontalPodAutoscalerConditionOutput)
}

func (a HorizontalPodAutoscalerConditionArgs) ToHorizontalPodAutoscalerConditionOutputWithContext(ctx context.Context) HorizontalPodAutoscalerConditionOutput {
	return pulumi.ToOutputWithContext(ctx, a).(HorizontalPodAutoscalerConditionOutput)
}

// HorizontalPodAutoscalerConditionOutput is an output type that resolves to a Input.
type HorizontalPodAutoscalerConditionOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(HorizontalPodAutoscalerConditionOutput{}) }

func (HorizontalPodAutoscalerConditionOutput) ElementType() reflect.Type {
	return _HorizontalPodAutoscalerConditionType
}

func (o HorizontalPodAutoscalerConditionOutput) LastTransitionTime() pulumi.StringOutput {
	return o.Apply(func(v HorizontalPodAutoscalerCondition) *string {
		return v.LastTransitionTime
	}).(pulumi.StringOutput)
}

func (o HorizontalPodAutoscalerConditionOutput) Message() pulumi.StringOutput {
	return o.Apply(func(v HorizontalPodAutoscalerCondition) *string {
		return v.Message
	}).(pulumi.StringOutput)
}

func (o HorizontalPodAutoscalerConditionOutput) Reason() pulumi.StringOutput {
	return o.Apply(func(v HorizontalPodAutoscalerCondition) *string {
		return v.Reason
	}).(pulumi.StringOutput)
}

func (o HorizontalPodAutoscalerConditionOutput) Status() pulumi.StringOutput {
	return o.Apply(func(v HorizontalPodAutoscalerCondition) string {
		return v.Status
	}).(pulumi.StringOutput)
}

func (o HorizontalPodAutoscalerConditionOutput) Type() pulumi.StringOutput {
	return o.Apply(func(v HorizontalPodAutoscalerCondition) string {
		return v.Type
	}).(pulumi.StringOutput)
}

var _HorizontalPodAutoscalerConditionArrayType = reflect.TypeOf((*[]HorizontalPodAutoscalerCondition)(nil)).Elem()

type HorizontalPodAutoscalerConditionArrayInput interface {
	ElementType() reflect.Type

	ToHorizontalPodAutoscalerConditionArrayOutput() HorizontalPodAutoscalerConditionArrayOutput
	ToHorizontalPodAutoscalerConditionArrayOutputWithContext(ctx context.Context) HorizontalPodAutoscalerConditionArrayOutput
}

type HorizontalPodAutoscalerConditionArray []HorizontalPodAutoscalerConditionInput

func (a HorizontalPodAutoscalerConditionArray) ElementType() reflect.Type {
	return _HorizontalPodAutoscalerConditionArrayType
}

func (a HorizontalPodAutoscalerConditionArray) ToHorizontalPodAutoscalerConditionArrayOutput() HorizontalPodAutoscalerConditionArrayOutput {
	return pulumi.ToOutput(a).(HorizontalPodAutoscalerConditionArrayOutput)
}

func (a HorizontalPodAutoscalerConditionArray) ToHorizontalPodAutoscalerConditionArrayOutputWithContext(ctx context.Context) HorizontalPodAutoscalerConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(HorizontalPodAutoscalerConditionArrayOutput)
}

type HorizontalPodAutoscalerConditionArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(HorizontalPodAutoscalerConditionArrayOutput{}) }

func (HorizontalPodAutoscalerConditionArrayOutput) ElementType() reflect.Type {
	return _HorizontalPodAutoscalerConditionArrayType
}

func (o HorizontalPodAutoscalerConditionArrayOutput) Index(i pulumi.IntInput) HorizontalPodAutoscalerConditionOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) HorizontalPodAutoscalerCondition {
		return vs[0].([]HorizontalPodAutoscalerCondition)[vs[1].(int)]
	}).(HorizontalPodAutoscalerConditionOutput)
}
