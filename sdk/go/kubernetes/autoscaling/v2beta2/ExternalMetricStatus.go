// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// ExternalMetricStatus indicates the current value of a global metric not associated with any
// Kubernetes object.
type ExternalMetricStatus struct {
	// current contains the current value for the given metric
	Current MetricValueStatus `pulumi:"current"`

	// metric identifies the target metric by name and selector
	Metric MetricIdentifier `pulumi:"metric"`

}

var _ExternalMetricStatusType = reflect.TypeOf((*ExternalMetricStatus)(nil)).Elem()

// ExternalMetricStatusInput represents an input type that resolves to a ExternalMetricStatus.
type ExternalMetricStatusInput interface {
	ElementType() reflect.Type

	ToExternalMetricStatusOutput() ExternalMetricStatusOutput
	ToExternalMetricStatusOutputWithContext(ctx context.Context) ExternalMetricStatusOutput
}

// ExternalMetricStatusArgs is a ExternalMetricStatusInput whose fields are all Input types.
type ExternalMetricStatusArgs struct {
	// current contains the current value for the given metric
	Current MetricValueStatusInput `pulumi:"current"`

	// metric identifies the target metric by name and selector
	Metric MetricIdentifierInput `pulumi:"metric"`

}

func (a ExternalMetricStatusArgs) ElementType() reflect.Type {
	return _ExternalMetricStatusType
}

func (a ExternalMetricStatusArgs) ToExternalMetricStatusOutput() ExternalMetricStatusOutput {
	return pulumi.ToOutput(a).(ExternalMetricStatusOutput)
}

func (a ExternalMetricStatusArgs) ToExternalMetricStatusOutputWithContext(ctx context.Context) ExternalMetricStatusOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ExternalMetricStatusOutput)
}

// ExternalMetricStatusOutput is an output type that resolves to a Input.
type ExternalMetricStatusOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ExternalMetricStatusOutput{}) }

func (ExternalMetricStatusOutput) ElementType() reflect.Type {
	return _ExternalMetricStatusType
}

func (o ExternalMetricStatusOutput) Current() MetricValueStatusOutput {
	return o.Apply(func(v ExternalMetricStatus) MetricValueStatus {
		return v.Current
	}).(MetricValueStatusOutput)
}

func (o ExternalMetricStatusOutput) Metric() MetricIdentifierOutput {
	return o.Apply(func(v ExternalMetricStatus) MetricIdentifier {
		return v.Metric
	}).(MetricIdentifierOutput)
}

