// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as
// specified in requests and limits, describing each pod in the current scale target (e.g. CPU or
// memory).  The values will be averaged together before being compared to the target.  Such metrics
// are built in to Kubernetes, and have special scaling options on top of those available to normal
// per-pod metrics using the "pods" source.  Only one "target" type should be set.
type ResourceMetricSource struct {
	// name is the name of the resource in question.
	Name string `pulumi:"name"`

	// target specifies the target value for the given metric
	Target MetricTarget `pulumi:"target"`

}

var _ResourceMetricSourceType = reflect.TypeOf((*ResourceMetricSource)(nil)).Elem()

// ResourceMetricSourceInput represents an input type that resolves to a ResourceMetricSource.
type ResourceMetricSourceInput interface {
	ElementType() reflect.Type

	ToResourceMetricSourceOutput() ResourceMetricSourceOutput
	ToResourceMetricSourceOutputWithContext(ctx context.Context) ResourceMetricSourceOutput
}

// ResourceMetricSourceArgs is a ResourceMetricSourceInput whose fields are all Input types.
type ResourceMetricSourceArgs struct {
	// name is the name of the resource in question.
	Name pulumi.StringInput `pulumi:"name"`

	// target specifies the target value for the given metric
	Target MetricTargetInput `pulumi:"target"`

}

func (a ResourceMetricSourceArgs) ElementType() reflect.Type {
	return _ResourceMetricSourceType
}

func (a ResourceMetricSourceArgs) ToResourceMetricSourceOutput() ResourceMetricSourceOutput {
	return pulumi.ToOutput(a).(ResourceMetricSourceOutput)
}

func (a ResourceMetricSourceArgs) ToResourceMetricSourceOutputWithContext(ctx context.Context) ResourceMetricSourceOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ResourceMetricSourceOutput)
}

// ResourceMetricSourceOutput is an output type that resolves to a Input.
type ResourceMetricSourceOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(ResourceMetricSourceOutput{}) }

func (ResourceMetricSourceOutput) ElementType() reflect.Type {
	return _ResourceMetricSourceType
}

func (o ResourceMetricSourceOutput) Name() pulumi.StringOutput {
	return o.Apply(func(v ResourceMetricSource) string {
		return v.Name
	}).(pulumi.StringOutput)
}

func (o ResourceMetricSourceOutput) Target() MetricTargetOutput {
	return o.Apply(func(v ResourceMetricSource) MetricTarget {
		return v.Target
	}).(MetricTargetOutput)
}

