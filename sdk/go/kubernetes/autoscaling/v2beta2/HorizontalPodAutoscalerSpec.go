// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.
type HorizontalPodAutoscalerSpec struct {
	// maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up.
	// It cannot be less that minReplicas.
	MaxReplicas int `pulumi:"maxReplicas"`

	// metrics contains the specifications for which to use to calculate the desired replica count (the
	// maximum replica count across all metrics will be used).  The desired replica count is calculated
	// multiplying the ratio between the target value and the current value by the current number of
	// pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the
	// individual metric source types for more information about how each type of metric must respond.
	// If not set, the default metric will be set to 80% average CPU utilization.
	Metrics []MetricSpec `pulumi:"metrics"`

	// minReplicas is the lower limit for the number of replicas to which the autoscaler can scale
	// down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate
	// HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is
	// active as long as at least one metric value is available.
	MinReplicas *int `pulumi:"minReplicas"`

	// scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics
	// should be collected, as well as to actually change the replica count.
	ScaleTargetRef CrossVersionObjectReference `pulumi:"scaleTargetRef"`

}

var _HorizontalPodAutoscalerSpecType = reflect.TypeOf((*HorizontalPodAutoscalerSpec)(nil)).Elem()

// HorizontalPodAutoscalerSpecInput represents an input type that resolves to a HorizontalPodAutoscalerSpec.
type HorizontalPodAutoscalerSpecInput interface {
	ElementType() reflect.Type

	ToHorizontalPodAutoscalerSpecOutput() HorizontalPodAutoscalerSpecOutput
	ToHorizontalPodAutoscalerSpecOutputWithContext(ctx context.Context) HorizontalPodAutoscalerSpecOutput
}

// HorizontalPodAutoscalerSpecArgs is a HorizontalPodAutoscalerSpecInput whose fields are all Input types.
type HorizontalPodAutoscalerSpecArgs struct {
	// maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up.
	// It cannot be less that minReplicas.
	MaxReplicas pulumi.IntInput `pulumi:"maxReplicas"`

	// scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics
	// should be collected, as well as to actually change the replica count.
	ScaleTargetRef CrossVersionObjectReferenceInput `pulumi:"scaleTargetRef"`

	// metrics contains the specifications for which to use to calculate the desired replica count (the
	// maximum replica count across all metrics will be used).  The desired replica count is calculated
	// multiplying the ratio between the target value and the current value by the current number of
	// pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the
	// individual metric source types for more information about how each type of metric must respond.
	// If not set, the default metric will be set to 80% average CPU utilization.
	Metrics MetricSpecArrayInput `pulumi:"metrics"`

	// minReplicas is the lower limit for the number of replicas to which the autoscaler can scale
	// down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate
	// HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is
	// active as long as at least one metric value is available.
	MinReplicas pulumi.IntInput `pulumi:"minReplicas"`

}

func (a HorizontalPodAutoscalerSpecArgs) ElementType() reflect.Type {
	return _HorizontalPodAutoscalerSpecType
}

func (a HorizontalPodAutoscalerSpecArgs) ToHorizontalPodAutoscalerSpecOutput() HorizontalPodAutoscalerSpecOutput {
	return pulumi.ToOutput(a).(HorizontalPodAutoscalerSpecOutput)
}

func (a HorizontalPodAutoscalerSpecArgs) ToHorizontalPodAutoscalerSpecOutputWithContext(ctx context.Context) HorizontalPodAutoscalerSpecOutput {
	return pulumi.ToOutputWithContext(ctx, a).(HorizontalPodAutoscalerSpecOutput)
}

// HorizontalPodAutoscalerSpecOutput is an output type that resolves to a Input.
type HorizontalPodAutoscalerSpecOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(HorizontalPodAutoscalerSpecOutput{}) }

func (HorizontalPodAutoscalerSpecOutput) ElementType() reflect.Type {
	return _HorizontalPodAutoscalerSpecType
}

func (o HorizontalPodAutoscalerSpecOutput) MaxReplicas() pulumi.IntOutput {
	return o.Apply(func(v HorizontalPodAutoscalerSpec) int {
		return v.MaxReplicas
	}).(pulumi.IntOutput)
}

func (o HorizontalPodAutoscalerSpecOutput) Metrics() MetricSpecArrayOutput {
	return o.Apply(func(v HorizontalPodAutoscalerSpec) []MetricSpec {
		return v.Metrics
	}).(MetricSpecArrayOutput)
}

func (o HorizontalPodAutoscalerSpecOutput) MinReplicas() pulumi.IntOutput {
	return o.Apply(func(v HorizontalPodAutoscalerSpec) *int {
		return v.MinReplicas
	}).(pulumi.IntOutput)
}

func (o HorizontalPodAutoscalerSpecOutput) ScaleTargetRef() CrossVersionObjectReferenceOutput {
	return o.Apply(func(v HorizontalPodAutoscalerSpec) CrossVersionObjectReference {
		return v.ScaleTargetRef
	}).(CrossVersionObjectReferenceOutput)
}

