// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// PodsMetricSource indicates how to scale on a metric describing each pod in the current scale
// target (for example, transactions-processed-per-second). The values will be averaged together
// before being compared to the target value.
type PodsMetricSource struct {
	// metric identifies the target metric by name and selector
	Metric MetricIdentifier `pulumi:"metric"`

	// target specifies the target value for the given metric
	Target MetricTarget `pulumi:"target"`

}

var _PodsMetricSourceType = reflect.TypeOf((*PodsMetricSource)(nil)).Elem()

// PodsMetricSourceInput represents an input type that resolves to a PodsMetricSource.
type PodsMetricSourceInput interface {
	ElementType() reflect.Type

	ToPodsMetricSourceOutput() PodsMetricSourceOutput
	ToPodsMetricSourceOutputWithContext(ctx context.Context) PodsMetricSourceOutput
}

// PodsMetricSourceArgs is a PodsMetricSourceInput whose fields are all Input types.
type PodsMetricSourceArgs struct {
	// metric identifies the target metric by name and selector
	Metric MetricIdentifierInput `pulumi:"metric"`

	// target specifies the target value for the given metric
	Target MetricTargetInput `pulumi:"target"`

}

func (a PodsMetricSourceArgs) ElementType() reflect.Type {
	return _PodsMetricSourceType
}

func (a PodsMetricSourceArgs) ToPodsMetricSourceOutput() PodsMetricSourceOutput {
	return pulumi.ToOutput(a).(PodsMetricSourceOutput)
}

func (a PodsMetricSourceArgs) ToPodsMetricSourceOutputWithContext(ctx context.Context) PodsMetricSourceOutput {
	return pulumi.ToOutputWithContext(ctx, a).(PodsMetricSourceOutput)
}

// PodsMetricSourceOutput is an output type that resolves to a Input.
type PodsMetricSourceOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(PodsMetricSourceOutput{}) }

func (PodsMetricSourceOutput) ElementType() reflect.Type {
	return _PodsMetricSourceType
}

func (o PodsMetricSourceOutput) Metric() MetricIdentifierOutput {
	return o.Apply(func(v PodsMetricSource) MetricIdentifier {
		return v.Metric
	}).(MetricIdentifierOutput)
}

func (o PodsMetricSourceOutput) Target() MetricTargetOutput {
	return o.Apply(func(v PodsMetricSource) MetricTarget {
		return v.Target
	}).(MetricTargetOutput)
}

