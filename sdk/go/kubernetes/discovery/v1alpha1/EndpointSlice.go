// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
	metaV1 "github.com/pulumi/pulumi-kubernetes/sdk/go/kubernetes/meta/v1"
)

// EndpointSlice represents a subset of the endpoints that implement a service. For a given service
// there may be multiple EndpointSlice objects, selected by labels, which must be joined to produce
// the full set of endpoints.
type EndpointSlice struct {
	pulumi.CustomResourceState

	// addressType specifies the type of address carried by this EndpointSlice. All addresses in this
	// slice must be the same type. Default is IP
	AddressType pulumi.StringOutput `pulumi:"addressType"`

	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`

	// endpoints is a list of unique endpoints in this slice. Each slice may include a maximum of 1000
	// endpoints.
	Endpoints EndpointArrayOutput `pulumi:"endpoints"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`

	// Standard object's metadata.
	Metadata metaV1.ObjectMetaOutput `pulumi:"metadata"`

	// ports specifies the list of network ports exposed by each endpoint in this slice. Each port must
	// have a unique name. When ports is empty, it indicates that there are no defined ports. When a
	// port is defined with a nil port value, it indicates "all ports". Each slice may include a
	// maximum of 100 ports.
	Ports EndpointPortArrayOutput `pulumi:"ports"`

}

// EndpointSliceArgs is the set of arguments needed to create a EndpointSlice resource.
type EndpointSliceArgs struct {
	// endpoints is a list of unique endpoints in this slice. Each slice may include a maximum of 1000
	// endpoints.
	Endpoints EndpointArrayInput `pulumi:"endpoints"`

	// addressType specifies the type of address carried by this EndpointSlice. All addresses in this
	// slice must be the same type. Default is IP
	AddressType pulumi.StringInput `pulumi:"addressType"`

	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringInput `pulumi:"kind"`

	// Standard object's metadata.
	Metadata metaV1.ObjectMetaInput `pulumi:"metadata"`

	// ports specifies the list of network ports exposed by each endpoint in this slice. Each port must
	// have a unique name. When ports is empty, it indicates that there are no defined ports. When a
	// port is defined with a nil port value, it indicates "all ports". Each slice may include a
	// maximum of 100 ports.
	Ports EndpointPortArrayInput `pulumi:"ports"`

}

// NewEndpointSlice creates a EndpointSlice resource with the given unique name, arguments, and options.
func NewEndpointSlice(ctx *pulumi.Context, name string, args *EndpointSliceArgs, opts ...pulumi.ResourceOption) (*EndpointSlice, error) {
	inputs := map[string]pulumi.Input{}
	if args == nil || args.Endpoints == nil {
		return nil, errors.New("missing required argument 'Endpoints'")
	}
	if args != nil {
		args.ApiVersion = pulumi.String("discovery.k8s.io/v1alpha1")
		args.Kind = pulumi.String("EndpointSlice")
		inputs["endpoints"] = args.Endpoints.ToEndpointArrayOutput()
		if i := args.AddressType; i != nil {
			inputs["addressType"] = i.ToStringOutput()
		}
		if i := args.ApiVersion; i != nil {
			inputs["apiVersion"] = i.ToStringOutput()
		}
		if i := args.Kind; i != nil {
			inputs["kind"] = i.ToStringOutput()
		}
		if i := args.Metadata; i != nil {
			inputs["metadata"] = i.ToObjectMetaOutput()
		}
		if i := args.Ports; i != nil {
			inputs["ports"] = i.ToEndpointPortArrayOutput()
		}
	}
	var resource EndpointSlice
	err := ctx.RegisterResource("kubernetes:discovery.k8s.io/v1alpha1:EndpointSlice", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointSlice gets an existing EndpointSlice resource's state with the given name and ID.
func GetEndpointSlice(ctx *pulumi.Context, name string, id pulumi.IDInput, opts ...pulumi.ResourceOption) (*EndpointSlice, error) {
	var resource EndpointSlice
	err := ctx.ReadResource("kubernetes:discovery.k8s.io/v1alpha1:EndpointSlice", name, id, nil, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// EndpointSlice represents a subset of the endpoints that implement a service. For a given service
// there may be multiple EndpointSlice objects, selected by labels, which must be joined to produce
// the full set of endpoints.
type EndpointSliceProperty struct {
	// addressType specifies the type of address carried by this EndpointSlice. All addresses in this
	// slice must be the same type. Default is IP
	AddressType *string `pulumi:"addressType"`

	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`

	// endpoints is a list of unique endpoints in this slice. Each slice may include a maximum of 1000
	// endpoints.
	Endpoints []Endpoint `pulumi:"endpoints"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`

	// Standard object's metadata.
	Metadata *metaV1.ObjectMeta `pulumi:"metadata"`

	// ports specifies the list of network ports exposed by each endpoint in this slice. Each port must
	// have a unique name. When ports is empty, it indicates that there are no defined ports. When a
	// port is defined with a nil port value, it indicates "all ports". Each slice may include a
	// maximum of 100 ports.
	Ports []EndpointPort `pulumi:"ports"`

}

var _EndpointSlicePropertyType = reflect.TypeOf((*EndpointSliceProperty)(nil)).Elem()

// EndpointSlicePropertyInput represents an input type that resolves to a EndpointSliceProperty.
type EndpointSlicePropertyInput interface {
	ElementType() reflect.Type

	ToEndpointSlicePropertyOutput() EndpointSlicePropertyOutput
	ToEndpointSlicePropertyOutputWithContext(ctx context.Context) EndpointSlicePropertyOutput
}

// EndpointSlicePropertyArgs is a EndpointSlicePropertyInput whose fields are all Input types.
type EndpointSlicePropertyArgs struct {
	// endpoints is a list of unique endpoints in this slice. Each slice may include a maximum of 1000
	// endpoints.
	Endpoints EndpointArrayInput `pulumi:"endpoints"`

	// addressType specifies the type of address carried by this EndpointSlice. All addresses in this
	// slice must be the same type. Default is IP
	AddressType pulumi.StringInput `pulumi:"addressType"`

	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringInput `pulumi:"kind"`

	// Standard object's metadata.
	Metadata metaV1.ObjectMetaInput `pulumi:"metadata"`

	// ports specifies the list of network ports exposed by each endpoint in this slice. Each port must
	// have a unique name. When ports is empty, it indicates that there are no defined ports. When a
	// port is defined with a nil port value, it indicates "all ports". Each slice may include a
	// maximum of 100 ports.
	Ports EndpointPortArrayInput `pulumi:"ports"`

}

func (a EndpointSlicePropertyArgs) ElementType() reflect.Type {
	return _EndpointSlicePropertyType
}

func (a EndpointSlicePropertyArgs) ToEndpointSlicePropertyOutput() EndpointSlicePropertyOutput {
	return pulumi.ToOutput(a).(EndpointSlicePropertyOutput)
}

func (a EndpointSlicePropertyArgs) ToEndpointSlicePropertyOutputWithContext(ctx context.Context) EndpointSlicePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, a).(EndpointSlicePropertyOutput)
}

// EndpointSlicePropertyOutput is an output type that resolves to a Input.
type EndpointSlicePropertyOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(EndpointSlicePropertyOutput{}) }

func (EndpointSlicePropertyOutput) ElementType() reflect.Type {
	return _EndpointSlicePropertyType
}

func (o EndpointSlicePropertyOutput) AddressType() pulumi.StringOutput {
	return o.Apply(func(v EndpointSliceProperty) *string {
		return v.AddressType
	}).(pulumi.StringOutput)
}

func (o EndpointSlicePropertyOutput) ApiVersion() pulumi.StringOutput {
	return o.Apply(func(v EndpointSliceProperty) *string {
		return v.ApiVersion
	}).(pulumi.StringOutput)
}

func (o EndpointSlicePropertyOutput) Endpoints() EndpointArrayOutput {
	return o.Apply(func(v EndpointSliceProperty) []Endpoint {
		return v.Endpoints
	}).(EndpointArrayOutput)
}

func (o EndpointSlicePropertyOutput) Kind() pulumi.StringOutput {
	return o.Apply(func(v EndpointSliceProperty) *string {
		return v.Kind
	}).(pulumi.StringOutput)
}

func (o EndpointSlicePropertyOutput) Metadata() metaV1.ObjectMetaOutput {
	return o.Apply(func(v EndpointSliceProperty) *metaV1.ObjectMeta {
		return v.Metadata
	}).(metaV1.ObjectMetaOutput)
}

func (o EndpointSlicePropertyOutput) Ports() EndpointPortArrayOutput {
	return o.Apply(func(v EndpointSliceProperty) []EndpointPort {
		return v.Ports
	}).(EndpointPortArrayOutput)
}

var _EndpointSlicePropertyArrayType = reflect.TypeOf((*[]EndpointSliceProperty)(nil)).Elem()

type EndpointSlicePropertyArrayInput interface {
	ElementType() reflect.Type

	ToEndpointSlicePropertyArrayOutput() EndpointSlicePropertyArrayOutput
	ToEndpointSlicePropertyArrayOutputWithContext(ctx context.Context) EndpointSlicePropertyArrayOutput
}

type EndpointSlicePropertyArray []EndpointSlicePropertyInput

func (a EndpointSlicePropertyArray) ElementType() reflect.Type {
	return _EndpointSlicePropertyArrayType
}

func (a EndpointSlicePropertyArray) ToEndpointSlicePropertyArrayOutput() EndpointSlicePropertyArrayOutput {
	return pulumi.ToOutput(a).(EndpointSlicePropertyArrayOutput)
}

func (a EndpointSlicePropertyArray) ToEndpointSlicePropertyArrayOutputWithContext(ctx context.Context) EndpointSlicePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(EndpointSlicePropertyArrayOutput)
}

type EndpointSlicePropertyArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(EndpointSlicePropertyArrayOutput{}) }

func (EndpointSlicePropertyArrayOutput) ElementType() reflect.Type {
	return _EndpointSlicePropertyArrayType
}

func (o EndpointSlicePropertyArrayOutput) Index(i pulumi.IntInput) EndpointSlicePropertyOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) EndpointSliceProperty {
		return vs[0].([]EndpointSliceProperty)[vs[1].(int)]
	}).(EndpointSlicePropertyOutput)
}
