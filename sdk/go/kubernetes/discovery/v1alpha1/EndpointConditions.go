// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// EndpointConditions represents the current condition of an endpoint.
type EndpointConditions struct {
	// ready indicates that this endpoint is prepared to receive traffic, according to whatever system
	// is managing the endpoint. A nil value indicates an unknown state. In most cases consumers should
	// interpret this unknown state as ready.
	Ready *bool `pulumi:"ready"`

}

var _EndpointConditionsType = reflect.TypeOf((*EndpointConditions)(nil)).Elem()

// EndpointConditionsInput represents an input type that resolves to a EndpointConditions.
type EndpointConditionsInput interface {
	ElementType() reflect.Type

	ToEndpointConditionsOutput() EndpointConditionsOutput
	ToEndpointConditionsOutputWithContext(ctx context.Context) EndpointConditionsOutput
}

// EndpointConditionsArgs is a EndpointConditionsInput whose fields are all Input types.
type EndpointConditionsArgs struct {
	// ready indicates that this endpoint is prepared to receive traffic, according to whatever system
	// is managing the endpoint. A nil value indicates an unknown state. In most cases consumers should
	// interpret this unknown state as ready.
	Ready pulumi.BoolInput `pulumi:"ready"`

}

func (a EndpointConditionsArgs) ElementType() reflect.Type {
	return _EndpointConditionsType
}

func (a EndpointConditionsArgs) ToEndpointConditionsOutput() EndpointConditionsOutput {
	return pulumi.ToOutput(a).(EndpointConditionsOutput)
}

func (a EndpointConditionsArgs) ToEndpointConditionsOutputWithContext(ctx context.Context) EndpointConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, a).(EndpointConditionsOutput)
}

// EndpointConditionsOutput is an output type that resolves to a Input.
type EndpointConditionsOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(EndpointConditionsOutput{}) }

func (EndpointConditionsOutput) ElementType() reflect.Type {
	return _EndpointConditionsType
}

func (o EndpointConditionsOutput) Ready() pulumi.BoolOutput {
	return o.Apply(func(v EndpointConditions) *bool {
		return v.Ready
	}).(pulumi.BoolOutput)
}

