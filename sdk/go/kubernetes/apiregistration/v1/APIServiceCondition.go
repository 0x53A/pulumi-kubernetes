// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// APIServiceCondition describes the state of an APIService at a particular point
type APIServiceCondition struct {
	// Last time the condition transitioned from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`

	// Human-readable message indicating details about last transition.
	Message *string `pulumi:"message"`

	// Unique, one-word, CamelCase reason for the condition's last transition.
	Reason *string `pulumi:"reason"`

	// Status is the status of the condition. Can be True, False, Unknown.
	Status string `pulumi:"status"`

	// Type is the type of the condition.
	Type string `pulumi:"type"`

}

var _APIServiceConditionType = reflect.TypeOf((*APIServiceCondition)(nil)).Elem()

// APIServiceConditionInput represents an input type that resolves to a APIServiceCondition.
type APIServiceConditionInput interface {
	ElementType() reflect.Type

	ToAPIServiceConditionOutput() APIServiceConditionOutput
	ToAPIServiceConditionOutputWithContext(ctx context.Context) APIServiceConditionOutput
}

// APIServiceConditionArgs is a APIServiceConditionInput whose fields are all Input types.
type APIServiceConditionArgs struct {
	// Status is the status of the condition. Can be True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`

	// Type is the type of the condition.
	Type pulumi.StringInput `pulumi:"type"`

	// Last time the condition transitioned from one status to another.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`

	// Human-readable message indicating details about last transition.
	Message pulumi.StringInput `pulumi:"message"`

	// Unique, one-word, CamelCase reason for the condition's last transition.
	Reason pulumi.StringInput `pulumi:"reason"`

}

func (a APIServiceConditionArgs) ElementType() reflect.Type {
	return _APIServiceConditionType
}

func (a APIServiceConditionArgs) ToAPIServiceConditionOutput() APIServiceConditionOutput {
	return pulumi.ToOutput(a).(APIServiceConditionOutput)
}

func (a APIServiceConditionArgs) ToAPIServiceConditionOutputWithContext(ctx context.Context) APIServiceConditionOutput {
	return pulumi.ToOutputWithContext(ctx, a).(APIServiceConditionOutput)
}

// APIServiceConditionOutput is an output type that resolves to a Input.
type APIServiceConditionOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(APIServiceConditionOutput{}) }

func (APIServiceConditionOutput) ElementType() reflect.Type {
	return _APIServiceConditionType
}

func (o APIServiceConditionOutput) LastTransitionTime() pulumi.StringOutput {
	return o.Apply(func(v APIServiceCondition) *string {
		return v.LastTransitionTime
	}).(pulumi.StringOutput)
}

func (o APIServiceConditionOutput) Message() pulumi.StringOutput {
	return o.Apply(func(v APIServiceCondition) *string {
		return v.Message
	}).(pulumi.StringOutput)
}

func (o APIServiceConditionOutput) Reason() pulumi.StringOutput {
	return o.Apply(func(v APIServiceCondition) *string {
		return v.Reason
	}).(pulumi.StringOutput)
}

func (o APIServiceConditionOutput) Status() pulumi.StringOutput {
	return o.Apply(func(v APIServiceCondition) string {
		return v.Status
	}).(pulumi.StringOutput)
}

func (o APIServiceConditionOutput) Type() pulumi.StringOutput {
	return o.Apply(func(v APIServiceCondition) string {
		return v.Type
	}).(pulumi.StringOutput)
}

var _APIServiceConditionArrayType = reflect.TypeOf((*[]APIServiceCondition)(nil)).Elem()

type APIServiceConditionArrayInput interface {
	ElementType() reflect.Type

	ToAPIServiceConditionArrayOutput() APIServiceConditionArrayOutput
	ToAPIServiceConditionArrayOutputWithContext(ctx context.Context) APIServiceConditionArrayOutput
}

type APIServiceConditionArray []APIServiceConditionInput

func (a APIServiceConditionArray) ElementType() reflect.Type {
	return _APIServiceConditionArrayType
}

func (a APIServiceConditionArray) ToAPIServiceConditionArrayOutput() APIServiceConditionArrayOutput {
	return pulumi.ToOutput(a).(APIServiceConditionArrayOutput)
}

func (a APIServiceConditionArray) ToAPIServiceConditionArrayOutputWithContext(ctx context.Context) APIServiceConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(APIServiceConditionArrayOutput)
}

type APIServiceConditionArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(APIServiceConditionArrayOutput{}) }

func (APIServiceConditionArrayOutput) ElementType() reflect.Type {
	return _APIServiceConditionArrayType
}

func (o APIServiceConditionArrayOutput) Index(i pulumi.IntInput) APIServiceConditionOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) APIServiceCondition {
		return vs[0].([]APIServiceCondition)[vs[1].(int)]
	}).(APIServiceConditionOutput)
}
