// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	metaV1 "github.com/pulumi/pulumi-kubernetes/sdk/go/kubernetes/meta/v1"
)

// APIService represents a server for a particular GroupVersion. Name must be "version.group".
type APIService struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`

	
	Metadata metaV1.ObjectMetaOutput `pulumi:"metadata"`

	// Spec contains information for locating and communicating with a server
	Spec APIServiceSpecOutput `pulumi:"spec"`

	// Status contains derived information about an API server
	Status APIServiceStatusOutput `pulumi:"status"`

}

// APIServiceArgs is the set of arguments needed to create a APIService resource.
type APIServiceArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringInput `pulumi:"kind"`

	
	Metadata metaV1.ObjectMetaInput `pulumi:"metadata"`

	// Spec contains information for locating and communicating with a server
	Spec APIServiceSpecInput `pulumi:"spec"`

}

// NewAPIService creates a APIService resource with the given unique name, arguments, and options.
func NewAPIService(ctx *pulumi.Context, name string, args *APIServiceArgs, opts ...pulumi.ResourceOption) (*APIService, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		args.ApiVersion = pulumi.String("apiregistration.k8s.io/v1beta1")
		args.Kind = pulumi.String("APIService")
		if i := args.ApiVersion; i != nil {
			inputs["apiVersion"] = i.ToStringOutput()
		}
		if i := args.Kind; i != nil {
			inputs["kind"] = i.ToStringOutput()
		}
		if i := args.Metadata; i != nil {
			inputs["metadata"] = i.ToObjectMetaOutput()
		}
		if i := args.Spec; i != nil {
			inputs["spec"] = i.ToAPIServiceSpecOutput()
		}
	}
	var resource APIService
	err := ctx.RegisterResource("kubernetes:apiregistration/v1beta1:APIService", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAPIService gets an existing APIService resource's state with the given name and ID.
func GetAPIService(ctx *pulumi.Context, name string, id pulumi.IDInput, opts ...pulumi.ResourceOption) (*APIService, error) {
	var resource APIService
	err := ctx.ReadResource("kubernetes:apiregistration/v1beta1:APIService", name, id, nil, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// APIService represents a server for a particular GroupVersion. Name must be "version.group".
type APIServiceProperty struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`

	
	Metadata *metaV1.ObjectMeta `pulumi:"metadata"`

	// Spec contains information for locating and communicating with a server
	Spec *APIServiceSpec `pulumi:"spec"`

	// Status contains derived information about an API server
	Status APIServiceStatus `pulumi:"status"`

}

var _APIServicePropertyType = reflect.TypeOf((*APIServiceProperty)(nil)).Elem()

// APIServicePropertyInput represents an input type that resolves to a APIServiceProperty.
type APIServicePropertyInput interface {
	ElementType() reflect.Type

	ToAPIServicePropertyOutput() APIServicePropertyOutput
	ToAPIServicePropertyOutputWithContext(ctx context.Context) APIServicePropertyOutput
}

// APIServicePropertyArgs is a APIServicePropertyInput whose fields are all Input types.
type APIServicePropertyArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringInput `pulumi:"kind"`

	
	Metadata metaV1.ObjectMetaInput `pulumi:"metadata"`

	// Spec contains information for locating and communicating with a server
	Spec APIServiceSpecInput `pulumi:"spec"`

}

func (a APIServicePropertyArgs) ElementType() reflect.Type {
	return _APIServicePropertyType
}

func (a APIServicePropertyArgs) ToAPIServicePropertyOutput() APIServicePropertyOutput {
	return pulumi.ToOutput(a).(APIServicePropertyOutput)
}

func (a APIServicePropertyArgs) ToAPIServicePropertyOutputWithContext(ctx context.Context) APIServicePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, a).(APIServicePropertyOutput)
}

// APIServicePropertyOutput is an output type that resolves to a Input.
type APIServicePropertyOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(APIServicePropertyOutput{}) }

func (APIServicePropertyOutput) ElementType() reflect.Type {
	return _APIServicePropertyType
}

func (o APIServicePropertyOutput) ApiVersion() pulumi.StringOutput {
	return o.Apply(func(v APIServiceProperty) *string {
		return v.ApiVersion
	}).(pulumi.StringOutput)
}

func (o APIServicePropertyOutput) Kind() pulumi.StringOutput {
	return o.Apply(func(v APIServiceProperty) *string {
		return v.Kind
	}).(pulumi.StringOutput)
}

func (o APIServicePropertyOutput) Metadata() metaV1.ObjectMetaOutput {
	return o.Apply(func(v APIServiceProperty) *metaV1.ObjectMeta {
		return v.Metadata
	}).(metaV1.ObjectMetaOutput)
}

func (o APIServicePropertyOutput) Spec() APIServiceSpecOutput {
	return o.Apply(func(v APIServiceProperty) *APIServiceSpec {
		return v.Spec
	}).(APIServiceSpecOutput)
}

func (o APIServicePropertyOutput) Status() APIServiceStatusOutput {
	return o.Apply(func(v APIServiceProperty) APIServiceStatus {
		return v.Status
	}).(APIServiceStatusOutput)
}

var _APIServicePropertyArrayType = reflect.TypeOf((*[]APIServiceProperty)(nil)).Elem()

type APIServicePropertyArrayInput interface {
	ElementType() reflect.Type

	ToAPIServicePropertyArrayOutput() APIServicePropertyArrayOutput
	ToAPIServicePropertyArrayOutputWithContext(ctx context.Context) APIServicePropertyArrayOutput
}

type APIServicePropertyArray []APIServicePropertyInput

func (a APIServicePropertyArray) ElementType() reflect.Type {
	return _APIServicePropertyArrayType
}

func (a APIServicePropertyArray) ToAPIServicePropertyArrayOutput() APIServicePropertyArrayOutput {
	return pulumi.ToOutput(a).(APIServicePropertyArrayOutput)
}

func (a APIServicePropertyArray) ToAPIServicePropertyArrayOutputWithContext(ctx context.Context) APIServicePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(APIServicePropertyArrayOutput)
}

type APIServicePropertyArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(APIServicePropertyArrayOutput{}) }

func (APIServicePropertyArrayOutput) ElementType() reflect.Type {
	return _APIServicePropertyArrayType
}

func (o APIServicePropertyArrayOutput) Index(i pulumi.IntInput) APIServicePropertyOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) APIServiceProperty {
		return vs[0].([]APIServiceProperty)[vs[1].(int)]
	}).(APIServicePropertyOutput)
}
