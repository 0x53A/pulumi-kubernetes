// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// TokenReviewStatus is the result of the token authentication request.
type TokenReviewStatus struct {
	// Audiences are audience identifiers chosen by the authenticator that are compatible with both the
	// TokenReview and token. An identifier is any identifier in the intersection of the
	// TokenReviewSpec audiences and the token's audiences. A client of the TokenReview API that sets
	// the spec.audiences field should validate that a compatible audience identifier is returned in
	// the status.audiences field to ensure that the TokenReview server is audience aware. If a
	// TokenReview returns an empty status.audience field where status.authenticated is "true", the
	// token is valid against the audience of the Kubernetes API server.
	Audiences []string `pulumi:"audiences"`

	// Authenticated indicates that the token was associated with a known user.
	Authenticated *bool `pulumi:"authenticated"`

	// Error indicates that the token couldn't be checked
	Error *string `pulumi:"error"`

	// User is the UserInfo associated with the provided token.
	User *UserInfo `pulumi:"user"`

}

var _TokenReviewStatusType = reflect.TypeOf((*TokenReviewStatus)(nil)).Elem()

// TokenReviewStatusInput represents an input type that resolves to a TokenReviewStatus.
type TokenReviewStatusInput interface {
	ElementType() reflect.Type

	ToTokenReviewStatusOutput() TokenReviewStatusOutput
	ToTokenReviewStatusOutputWithContext(ctx context.Context) TokenReviewStatusOutput
}

// TokenReviewStatusArgs is a TokenReviewStatusInput whose fields are all Input types.
type TokenReviewStatusArgs struct {
	// Audiences are audience identifiers chosen by the authenticator that are compatible with both the
	// TokenReview and token. An identifier is any identifier in the intersection of the
	// TokenReviewSpec audiences and the token's audiences. A client of the TokenReview API that sets
	// the spec.audiences field should validate that a compatible audience identifier is returned in
	// the status.audiences field to ensure that the TokenReview server is audience aware. If a
	// TokenReview returns an empty status.audience field where status.authenticated is "true", the
	// token is valid against the audience of the Kubernetes API server.
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`

	// Authenticated indicates that the token was associated with a known user.
	Authenticated pulumi.BoolInput `pulumi:"authenticated"`

	// Error indicates that the token couldn't be checked
	Error pulumi.StringInput `pulumi:"error"`

	// User is the UserInfo associated with the provided token.
	User UserInfoInput `pulumi:"user"`

}

func (a TokenReviewStatusArgs) ElementType() reflect.Type {
	return _TokenReviewStatusType
}

func (a TokenReviewStatusArgs) ToTokenReviewStatusOutput() TokenReviewStatusOutput {
	return pulumi.ToOutput(a).(TokenReviewStatusOutput)
}

func (a TokenReviewStatusArgs) ToTokenReviewStatusOutputWithContext(ctx context.Context) TokenReviewStatusOutput {
	return pulumi.ToOutputWithContext(ctx, a).(TokenReviewStatusOutput)
}

// TokenReviewStatusOutput is an output type that resolves to a Input.
type TokenReviewStatusOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(TokenReviewStatusOutput{}) }

func (TokenReviewStatusOutput) ElementType() reflect.Type {
	return _TokenReviewStatusType
}

func (o TokenReviewStatusOutput) Audiences() pulumi.StringArrayOutput {
	return o.Apply(func(v TokenReviewStatus) []string {
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

func (o TokenReviewStatusOutput) Authenticated() pulumi.BoolOutput {
	return o.Apply(func(v TokenReviewStatus) *bool {
		return v.Authenticated
	}).(pulumi.BoolOutput)
}

func (o TokenReviewStatusOutput) Error() pulumi.StringOutput {
	return o.Apply(func(v TokenReviewStatus) *string {
		return v.Error
	}).(pulumi.StringOutput)
}

func (o TokenReviewStatusOutput) User() UserInfoOutput {
	return o.Apply(func(v TokenReviewStatus) *UserInfo {
		return v.User
	}).(UserInfoOutput)
}

