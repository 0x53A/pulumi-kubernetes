// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	metaV1 "github.com/pulumi/pulumi-kubernetes/sdk/go/kubernetes/meta/v1"
)

// AuditSink represents a cluster level audit sink
type AuditSink struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`

	
	Metadata metaV1.ObjectMetaOutput `pulumi:"metadata"`

	// Spec defines the audit configuration spec
	Spec AuditSinkSpecOutput `pulumi:"spec"`

}

// AuditSinkArgs is the set of arguments needed to create a AuditSink resource.
type AuditSinkArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringInput `pulumi:"kind"`

	
	Metadata metaV1.ObjectMetaInput `pulumi:"metadata"`

	// Spec defines the audit configuration spec
	Spec AuditSinkSpecInput `pulumi:"spec"`

}

// NewAuditSink creates a AuditSink resource with the given unique name, arguments, and options.
func NewAuditSink(ctx *pulumi.Context, name string, args *AuditSinkArgs, opts ...pulumi.ResourceOption) (*AuditSink, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		args.ApiVersion = pulumi.String("auditregistration.k8s.io/v1alpha1")
		args.Kind = pulumi.String("AuditSink")
		if i := args.ApiVersion; i != nil {
			inputs["apiVersion"] = i.ToStringOutput()
		}
		if i := args.Kind; i != nil {
			inputs["kind"] = i.ToStringOutput()
		}
		if i := args.Metadata; i != nil {
			inputs["metadata"] = i.ToObjectMetaOutput()
		}
		if i := args.Spec; i != nil {
			inputs["spec"] = i.ToAuditSinkSpecOutput()
		}
	}
	var resource AuditSink
	err := ctx.RegisterResource("kubernetes:auditregistration.k8s.io/v1alpha1:AuditSink", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuditSink gets an existing AuditSink resource's state with the given name and ID.
func GetAuditSink(ctx *pulumi.Context, name string, id pulumi.IDInput, opts ...pulumi.ResourceOption) (*AuditSink, error) {
	var resource AuditSink
	err := ctx.ReadResource("kubernetes:auditregistration.k8s.io/v1alpha1:AuditSink", name, id, nil, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// AuditSink represents a cluster level audit sink
type AuditSinkProperty struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`

	
	Metadata *metaV1.ObjectMeta `pulumi:"metadata"`

	// Spec defines the audit configuration spec
	Spec *AuditSinkSpec `pulumi:"spec"`

}

var _AuditSinkPropertyType = reflect.TypeOf((*AuditSinkProperty)(nil)).Elem()

// AuditSinkPropertyInput represents an input type that resolves to a AuditSinkProperty.
type AuditSinkPropertyInput interface {
	ElementType() reflect.Type

	ToAuditSinkPropertyOutput() AuditSinkPropertyOutput
	ToAuditSinkPropertyOutputWithContext(ctx context.Context) AuditSinkPropertyOutput
}

// AuditSinkPropertyArgs is a AuditSinkPropertyInput whose fields are all Input types.
type AuditSinkPropertyArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringInput `pulumi:"kind"`

	
	Metadata metaV1.ObjectMetaInput `pulumi:"metadata"`

	// Spec defines the audit configuration spec
	Spec AuditSinkSpecInput `pulumi:"spec"`

}

func (a AuditSinkPropertyArgs) ElementType() reflect.Type {
	return _AuditSinkPropertyType
}

func (a AuditSinkPropertyArgs) ToAuditSinkPropertyOutput() AuditSinkPropertyOutput {
	return pulumi.ToOutput(a).(AuditSinkPropertyOutput)
}

func (a AuditSinkPropertyArgs) ToAuditSinkPropertyOutputWithContext(ctx context.Context) AuditSinkPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, a).(AuditSinkPropertyOutput)
}

// AuditSinkPropertyOutput is an output type that resolves to a Input.
type AuditSinkPropertyOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(AuditSinkPropertyOutput{}) }

func (AuditSinkPropertyOutput) ElementType() reflect.Type {
	return _AuditSinkPropertyType
}

func (o AuditSinkPropertyOutput) ApiVersion() pulumi.StringOutput {
	return o.Apply(func(v AuditSinkProperty) *string {
		return v.ApiVersion
	}).(pulumi.StringOutput)
}

func (o AuditSinkPropertyOutput) Kind() pulumi.StringOutput {
	return o.Apply(func(v AuditSinkProperty) *string {
		return v.Kind
	}).(pulumi.StringOutput)
}

func (o AuditSinkPropertyOutput) Metadata() metaV1.ObjectMetaOutput {
	return o.Apply(func(v AuditSinkProperty) *metaV1.ObjectMeta {
		return v.Metadata
	}).(metaV1.ObjectMetaOutput)
}

func (o AuditSinkPropertyOutput) Spec() AuditSinkSpecOutput {
	return o.Apply(func(v AuditSinkProperty) *AuditSinkSpec {
		return v.Spec
	}).(AuditSinkSpecOutput)
}

var _AuditSinkPropertyArrayType = reflect.TypeOf((*[]AuditSinkProperty)(nil)).Elem()

type AuditSinkPropertyArrayInput interface {
	ElementType() reflect.Type

	ToAuditSinkPropertyArrayOutput() AuditSinkPropertyArrayOutput
	ToAuditSinkPropertyArrayOutputWithContext(ctx context.Context) AuditSinkPropertyArrayOutput
}

type AuditSinkPropertyArray []AuditSinkPropertyInput

func (a AuditSinkPropertyArray) ElementType() reflect.Type {
	return _AuditSinkPropertyArrayType
}

func (a AuditSinkPropertyArray) ToAuditSinkPropertyArrayOutput() AuditSinkPropertyArrayOutput {
	return pulumi.ToOutput(a).(AuditSinkPropertyArrayOutput)
}

func (a AuditSinkPropertyArray) ToAuditSinkPropertyArrayOutputWithContext(ctx context.Context) AuditSinkPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(AuditSinkPropertyArrayOutput)
}

type AuditSinkPropertyArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(AuditSinkPropertyArrayOutput{}) }

func (AuditSinkPropertyArrayOutput) ElementType() reflect.Type {
	return _AuditSinkPropertyArrayType
}

func (o AuditSinkPropertyArrayOutput) Index(i pulumi.IntInput) AuditSinkPropertyOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) AuditSinkProperty {
		return vs[0].([]AuditSinkProperty)[vs[1].(int)]
	}).(AuditSinkPropertyOutput)
}
