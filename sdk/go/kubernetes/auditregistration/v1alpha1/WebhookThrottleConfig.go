// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// WebhookThrottleConfig holds the configuration for throttling events
type WebhookThrottleConfig struct {
	// ThrottleBurst is the maximum number of events sent at the same moment default 15 QPS
	Burst *int `pulumi:"burst"`

	// ThrottleQPS maximum number of batches per second default 10 QPS
	Qps *int `pulumi:"qps"`

}

var _WebhookThrottleConfigType = reflect.TypeOf((*WebhookThrottleConfig)(nil)).Elem()

// WebhookThrottleConfigInput represents an input type that resolves to a WebhookThrottleConfig.
type WebhookThrottleConfigInput interface {
	ElementType() reflect.Type

	ToWebhookThrottleConfigOutput() WebhookThrottleConfigOutput
	ToWebhookThrottleConfigOutputWithContext(ctx context.Context) WebhookThrottleConfigOutput
}

// WebhookThrottleConfigArgs is a WebhookThrottleConfigInput whose fields are all Input types.
type WebhookThrottleConfigArgs struct {
	// ThrottleBurst is the maximum number of events sent at the same moment default 15 QPS
	Burst pulumi.IntInput `pulumi:"burst"`

	// ThrottleQPS maximum number of batches per second default 10 QPS
	Qps pulumi.IntInput `pulumi:"qps"`

}

func (a WebhookThrottleConfigArgs) ElementType() reflect.Type {
	return _WebhookThrottleConfigType
}

func (a WebhookThrottleConfigArgs) ToWebhookThrottleConfigOutput() WebhookThrottleConfigOutput {
	return pulumi.ToOutput(a).(WebhookThrottleConfigOutput)
}

func (a WebhookThrottleConfigArgs) ToWebhookThrottleConfigOutputWithContext(ctx context.Context) WebhookThrottleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, a).(WebhookThrottleConfigOutput)
}

// WebhookThrottleConfigOutput is an output type that resolves to a Input.
type WebhookThrottleConfigOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(WebhookThrottleConfigOutput{}) }

func (WebhookThrottleConfigOutput) ElementType() reflect.Type {
	return _WebhookThrottleConfigType
}

func (o WebhookThrottleConfigOutput) Burst() pulumi.IntOutput {
	return o.Apply(func(v WebhookThrottleConfig) *int {
		return v.Burst
	}).(pulumi.IntOutput)
}

func (o WebhookThrottleConfigOutput) Qps() pulumi.IntOutput {
	return o.Apply(func(v WebhookThrottleConfig) *int {
		return v.Qps
	}).(pulumi.IntOutput)
}

