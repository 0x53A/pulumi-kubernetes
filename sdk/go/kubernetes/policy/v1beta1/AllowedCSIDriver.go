// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// AllowedCSIDriver represents a single inline CSI Driver that is allowed to be used.
type AllowedCSIDriver struct {
	// Name is the registered name of the CSI driver
	Name string `pulumi:"name"`

}

var _AllowedCSIDriverType = reflect.TypeOf((*AllowedCSIDriver)(nil)).Elem()

// AllowedCSIDriverInput represents an input type that resolves to a AllowedCSIDriver.
type AllowedCSIDriverInput interface {
	ElementType() reflect.Type

	ToAllowedCSIDriverOutput() AllowedCSIDriverOutput
	ToAllowedCSIDriverOutputWithContext(ctx context.Context) AllowedCSIDriverOutput
}

// AllowedCSIDriverArgs is a AllowedCSIDriverInput whose fields are all Input types.
type AllowedCSIDriverArgs struct {
	// Name is the registered name of the CSI driver
	Name pulumi.StringInput `pulumi:"name"`

}

func (a AllowedCSIDriverArgs) ElementType() reflect.Type {
	return _AllowedCSIDriverType
}

func (a AllowedCSIDriverArgs) ToAllowedCSIDriverOutput() AllowedCSIDriverOutput {
	return pulumi.ToOutput(a).(AllowedCSIDriverOutput)
}

func (a AllowedCSIDriverArgs) ToAllowedCSIDriverOutputWithContext(ctx context.Context) AllowedCSIDriverOutput {
	return pulumi.ToOutputWithContext(ctx, a).(AllowedCSIDriverOutput)
}

// AllowedCSIDriverOutput is an output type that resolves to a Input.
type AllowedCSIDriverOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(AllowedCSIDriverOutput{}) }

func (AllowedCSIDriverOutput) ElementType() reflect.Type {
	return _AllowedCSIDriverType
}

func (o AllowedCSIDriverOutput) Name() pulumi.StringOutput {
	return o.Apply(func(v AllowedCSIDriver) string {
		return v.Name
	}).(pulumi.StringOutput)
}

var _AllowedCSIDriverArrayType = reflect.TypeOf((*[]AllowedCSIDriver)(nil)).Elem()

type AllowedCSIDriverArrayInput interface {
	ElementType() reflect.Type

	ToAllowedCSIDriverArrayOutput() AllowedCSIDriverArrayOutput
	ToAllowedCSIDriverArrayOutputWithContext(ctx context.Context) AllowedCSIDriverArrayOutput
}

type AllowedCSIDriverArray []AllowedCSIDriverInput

func (a AllowedCSIDriverArray) ElementType() reflect.Type {
	return _AllowedCSIDriverArrayType
}

func (a AllowedCSIDriverArray) ToAllowedCSIDriverArrayOutput() AllowedCSIDriverArrayOutput {
	return pulumi.ToOutput(a).(AllowedCSIDriverArrayOutput)
}

func (a AllowedCSIDriverArray) ToAllowedCSIDriverArrayOutputWithContext(ctx context.Context) AllowedCSIDriverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(AllowedCSIDriverArrayOutput)
}

type AllowedCSIDriverArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(AllowedCSIDriverArrayOutput{}) }

func (AllowedCSIDriverArrayOutput) ElementType() reflect.Type {
	return _AllowedCSIDriverArrayType
}

func (o AllowedCSIDriverArrayOutput) Index(i pulumi.IntInput) AllowedCSIDriverOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) AllowedCSIDriver {
		return vs[0].([]AllowedCSIDriver)[vs[1].(int)]
	}).(AllowedCSIDriverOutput)
}
