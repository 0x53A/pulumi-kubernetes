// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// RunAsGroupStrategyOptions defines the strategy type and any options used to create the strategy.
type RunAsGroupStrategyOptions struct {
	// ranges are the allowed ranges of gids that may be used. If you would like to force a single gid
	// then supply a single range with the same start and end. Required for MustRunAs.
	Ranges []IDRange `pulumi:"ranges"`

	// rule is the strategy that will dictate the allowable RunAsGroup values that may be set.
	Rule string `pulumi:"rule"`

}

var _RunAsGroupStrategyOptionsType = reflect.TypeOf((*RunAsGroupStrategyOptions)(nil)).Elem()

// RunAsGroupStrategyOptionsInput represents an input type that resolves to a RunAsGroupStrategyOptions.
type RunAsGroupStrategyOptionsInput interface {
	ElementType() reflect.Type

	ToRunAsGroupStrategyOptionsOutput() RunAsGroupStrategyOptionsOutput
	ToRunAsGroupStrategyOptionsOutputWithContext(ctx context.Context) RunAsGroupStrategyOptionsOutput
}

// RunAsGroupStrategyOptionsArgs is a RunAsGroupStrategyOptionsInput whose fields are all Input types.
type RunAsGroupStrategyOptionsArgs struct {
	// rule is the strategy that will dictate the allowable RunAsGroup values that may be set.
	Rule pulumi.StringInput `pulumi:"rule"`

	// ranges are the allowed ranges of gids that may be used. If you would like to force a single gid
	// then supply a single range with the same start and end. Required for MustRunAs.
	Ranges IDRangeArrayInput `pulumi:"ranges"`

}

func (a RunAsGroupStrategyOptionsArgs) ElementType() reflect.Type {
	return _RunAsGroupStrategyOptionsType
}

func (a RunAsGroupStrategyOptionsArgs) ToRunAsGroupStrategyOptionsOutput() RunAsGroupStrategyOptionsOutput {
	return pulumi.ToOutput(a).(RunAsGroupStrategyOptionsOutput)
}

func (a RunAsGroupStrategyOptionsArgs) ToRunAsGroupStrategyOptionsOutputWithContext(ctx context.Context) RunAsGroupStrategyOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, a).(RunAsGroupStrategyOptionsOutput)
}

// RunAsGroupStrategyOptionsOutput is an output type that resolves to a Input.
type RunAsGroupStrategyOptionsOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(RunAsGroupStrategyOptionsOutput{}) }

func (RunAsGroupStrategyOptionsOutput) ElementType() reflect.Type {
	return _RunAsGroupStrategyOptionsType
}

func (o RunAsGroupStrategyOptionsOutput) Ranges() IDRangeArrayOutput {
	return o.Apply(func(v RunAsGroupStrategyOptions) []IDRange {
		return v.Ranges
	}).(IDRangeArrayOutput)
}

func (o RunAsGroupStrategyOptionsOutput) Rule() pulumi.StringOutput {
	return o.Apply(func(v RunAsGroupStrategyOptions) string {
		return v.Rule
	}).(pulumi.StringOutput)
}

