// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	coreV1 "github.com/pulumi/pulumi-kubernetes/sdk/go/kubernetes/core/v1"
)

// VolumeAttachmentSource represents a volume that should be attached. Right now only
// PersistenVolumes can be attached via external attacher, in future we may allow also inline
// volumes in pods. Exactly one member can be set.
type VolumeAttachmentSource struct {
	// inlineVolumeSpec contains all the information necessary to attach a persistent volume defined by
	// a pod's inline VolumeSource. This field is populated only for the CSIMigration feature. It
	// contains translated fields from a pod's inline VolumeSource to a PersistentVolumeSpec. This
	// field is alpha-level and is only honored by servers that enabled the CSIMigration feature.
	InlineVolumeSpec *coreV1.PersistentVolumeSpec `pulumi:"inlineVolumeSpec"`

	// Name of the persistent volume to attach.
	PersistentVolumeName *string `pulumi:"persistentVolumeName"`

}

var _VolumeAttachmentSourceType = reflect.TypeOf((*VolumeAttachmentSource)(nil)).Elem()

// VolumeAttachmentSourceInput represents an input type that resolves to a VolumeAttachmentSource.
type VolumeAttachmentSourceInput interface {
	ElementType() reflect.Type

	ToVolumeAttachmentSourceOutput() VolumeAttachmentSourceOutput
	ToVolumeAttachmentSourceOutputWithContext(ctx context.Context) VolumeAttachmentSourceOutput
}

// VolumeAttachmentSourceArgs is a VolumeAttachmentSourceInput whose fields are all Input types.
type VolumeAttachmentSourceArgs struct {
	// inlineVolumeSpec contains all the information necessary to attach a persistent volume defined by
	// a pod's inline VolumeSource. This field is populated only for the CSIMigration feature. It
	// contains translated fields from a pod's inline VolumeSource to a PersistentVolumeSpec. This
	// field is alpha-level and is only honored by servers that enabled the CSIMigration feature.
	InlineVolumeSpec coreV1.PersistentVolumeSpecInput `pulumi:"inlineVolumeSpec"`

	// Name of the persistent volume to attach.
	PersistentVolumeName pulumi.StringInput `pulumi:"persistentVolumeName"`

}

func (a VolumeAttachmentSourceArgs) ElementType() reflect.Type {
	return _VolumeAttachmentSourceType
}

func (a VolumeAttachmentSourceArgs) ToVolumeAttachmentSourceOutput() VolumeAttachmentSourceOutput {
	return pulumi.ToOutput(a).(VolumeAttachmentSourceOutput)
}

func (a VolumeAttachmentSourceArgs) ToVolumeAttachmentSourceOutputWithContext(ctx context.Context) VolumeAttachmentSourceOutput {
	return pulumi.ToOutputWithContext(ctx, a).(VolumeAttachmentSourceOutput)
}

// VolumeAttachmentSourceOutput is an output type that resolves to a Input.
type VolumeAttachmentSourceOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(VolumeAttachmentSourceOutput{}) }

func (VolumeAttachmentSourceOutput) ElementType() reflect.Type {
	return _VolumeAttachmentSourceType
}

func (o VolumeAttachmentSourceOutput) InlineVolumeSpec() coreV1.PersistentVolumeSpecOutput {
	return o.Apply(func(v VolumeAttachmentSource) *coreV1.PersistentVolumeSpec {
		return v.InlineVolumeSpec
	}).(coreV1.PersistentVolumeSpecOutput)
}

func (o VolumeAttachmentSourceOutput) PersistentVolumeName() pulumi.StringOutput {
	return o.Apply(func(v VolumeAttachmentSource) *string {
		return v.PersistentVolumeName
	}).(pulumi.StringOutput)
}

