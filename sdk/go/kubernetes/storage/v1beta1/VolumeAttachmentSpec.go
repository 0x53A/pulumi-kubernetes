// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// VolumeAttachmentSpec is the specification of a VolumeAttachment request.
type VolumeAttachmentSpec struct {
	// Attacher indicates the name of the volume driver that MUST handle this request. This is the name
	// returned by GetPluginName().
	Attacher string `pulumi:"attacher"`

	// The node that the volume should be attached to.
	NodeName string `pulumi:"nodeName"`

	// Source represents the volume that should be attached.
	Source VolumeAttachmentSource `pulumi:"source"`

}

var _VolumeAttachmentSpecType = reflect.TypeOf((*VolumeAttachmentSpec)(nil)).Elem()

// VolumeAttachmentSpecInput represents an input type that resolves to a VolumeAttachmentSpec.
type VolumeAttachmentSpecInput interface {
	ElementType() reflect.Type

	ToVolumeAttachmentSpecOutput() VolumeAttachmentSpecOutput
	ToVolumeAttachmentSpecOutputWithContext(ctx context.Context) VolumeAttachmentSpecOutput
}

// VolumeAttachmentSpecArgs is a VolumeAttachmentSpecInput whose fields are all Input types.
type VolumeAttachmentSpecArgs struct {
	// Attacher indicates the name of the volume driver that MUST handle this request. This is the name
	// returned by GetPluginName().
	Attacher pulumi.StringInput `pulumi:"attacher"`

	// The node that the volume should be attached to.
	NodeName pulumi.StringInput `pulumi:"nodeName"`

	// Source represents the volume that should be attached.
	Source VolumeAttachmentSourceInput `pulumi:"source"`

}

func (a VolumeAttachmentSpecArgs) ElementType() reflect.Type {
	return _VolumeAttachmentSpecType
}

func (a VolumeAttachmentSpecArgs) ToVolumeAttachmentSpecOutput() VolumeAttachmentSpecOutput {
	return pulumi.ToOutput(a).(VolumeAttachmentSpecOutput)
}

func (a VolumeAttachmentSpecArgs) ToVolumeAttachmentSpecOutputWithContext(ctx context.Context) VolumeAttachmentSpecOutput {
	return pulumi.ToOutputWithContext(ctx, a).(VolumeAttachmentSpecOutput)
}

// VolumeAttachmentSpecOutput is an output type that resolves to a Input.
type VolumeAttachmentSpecOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(VolumeAttachmentSpecOutput{}) }

func (VolumeAttachmentSpecOutput) ElementType() reflect.Type {
	return _VolumeAttachmentSpecType
}

func (o VolumeAttachmentSpecOutput) Attacher() pulumi.StringOutput {
	return o.Apply(func(v VolumeAttachmentSpec) string {
		return v.Attacher
	}).(pulumi.StringOutput)
}

func (o VolumeAttachmentSpecOutput) NodeName() pulumi.StringOutput {
	return o.Apply(func(v VolumeAttachmentSpec) string {
		return v.NodeName
	}).(pulumi.StringOutput)
}

func (o VolumeAttachmentSpecOutput) Source() VolumeAttachmentSourceOutput {
	return o.Apply(func(v VolumeAttachmentSpec) VolumeAttachmentSource {
		return v.Source
	}).(VolumeAttachmentSourceOutput)
}

