// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// RoleRef contains information that points to the role being used
type RoleRef struct {
	// APIGroup is the group for the resource being referenced
	ApiGroup string `pulumi:"apiGroup"`

	// Kind is the type of resource being referenced
	Kind string `pulumi:"kind"`

	// Name is the name of resource being referenced
	Name string `pulumi:"name"`

}

var _RoleRefType = reflect.TypeOf((*RoleRef)(nil)).Elem()

// RoleRefInput represents an input type that resolves to a RoleRef.
type RoleRefInput interface {
	ElementType() reflect.Type

	ToRoleRefOutput() RoleRefOutput
	ToRoleRefOutputWithContext(ctx context.Context) RoleRefOutput
}

// RoleRefArgs is a RoleRefInput whose fields are all Input types.
type RoleRefArgs struct {
	// APIGroup is the group for the resource being referenced
	ApiGroup pulumi.StringInput `pulumi:"apiGroup"`

	// Kind is the type of resource being referenced
	Kind pulumi.StringInput `pulumi:"kind"`

	// Name is the name of resource being referenced
	Name pulumi.StringInput `pulumi:"name"`

}

func (a RoleRefArgs) ElementType() reflect.Type {
	return _RoleRefType
}

func (a RoleRefArgs) ToRoleRefOutput() RoleRefOutput {
	return pulumi.ToOutput(a).(RoleRefOutput)
}

func (a RoleRefArgs) ToRoleRefOutputWithContext(ctx context.Context) RoleRefOutput {
	return pulumi.ToOutputWithContext(ctx, a).(RoleRefOutput)
}

// RoleRefOutput is an output type that resolves to a Input.
type RoleRefOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(RoleRefOutput{}) }

func (RoleRefOutput) ElementType() reflect.Type {
	return _RoleRefType
}

func (o RoleRefOutput) ApiGroup() pulumi.StringOutput {
	return o.Apply(func(v RoleRef) string {
		return v.ApiGroup
	}).(pulumi.StringOutput)
}

func (o RoleRefOutput) Kind() pulumi.StringOutput {
	return o.Apply(func(v RoleRef) string {
		return v.Kind
	}).(pulumi.StringOutput)
}

func (o RoleRefOutput) Name() pulumi.StringOutput {
	return o.Apply(func(v RoleRef) string {
		return v.Name
	}).(pulumi.StringOutput)
}

