// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	metaV1 "github.com/pulumi/pulumi-kubernetes/sdk/go/kubernetes/meta/v1"
)

// AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole
type AggregationRule struct {
	// ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and
	// create the rules. If any of the selectors match, then the ClusterRole's permissions will be
	// added
	ClusterRoleSelectors []metaV1.LabelSelector `pulumi:"clusterRoleSelectors"`

}

var _AggregationRuleType = reflect.TypeOf((*AggregationRule)(nil)).Elem()

// AggregationRuleInput represents an input type that resolves to a AggregationRule.
type AggregationRuleInput interface {
	ElementType() reflect.Type

	ToAggregationRuleOutput() AggregationRuleOutput
	ToAggregationRuleOutputWithContext(ctx context.Context) AggregationRuleOutput
}

// AggregationRuleArgs is a AggregationRuleInput whose fields are all Input types.
type AggregationRuleArgs struct {
	// ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and
	// create the rules. If any of the selectors match, then the ClusterRole's permissions will be
	// added
	ClusterRoleSelectors metaV1.LabelSelectorArrayInput `pulumi:"clusterRoleSelectors"`

}

func (a AggregationRuleArgs) ElementType() reflect.Type {
	return _AggregationRuleType
}

func (a AggregationRuleArgs) ToAggregationRuleOutput() AggregationRuleOutput {
	return pulumi.ToOutput(a).(AggregationRuleOutput)
}

func (a AggregationRuleArgs) ToAggregationRuleOutputWithContext(ctx context.Context) AggregationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, a).(AggregationRuleOutput)
}

// AggregationRuleOutput is an output type that resolves to a Input.
type AggregationRuleOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(AggregationRuleOutput{}) }

func (AggregationRuleOutput) ElementType() reflect.Type {
	return _AggregationRuleType
}

func (o AggregationRuleOutput) ClusterRoleSelectors() metaV1.LabelSelectorArrayOutput {
	return o.Apply(func(v AggregationRule) []metaV1.LabelSelector {
		return v.ClusterRoleSelectors
	}).(metaV1.LabelSelectorArrayOutput)
}

