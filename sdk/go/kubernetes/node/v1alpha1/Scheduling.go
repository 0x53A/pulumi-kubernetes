// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	coreV1 "github.com/pulumi/pulumi-kubernetes/sdk/go/kubernetes/core/v1"
)

// Scheduling specifies the scheduling constraints for nodes supporting a RuntimeClass.
type Scheduling struct {
	// nodeSelector lists labels that must be present on nodes that support this RuntimeClass. Pods
	// using this RuntimeClass can only be scheduled to a node matched by this selector. The
	// RuntimeClass nodeSelector is merged with a pod's existing nodeSelector. Any conflicts will cause
	// the pod to be rejected in admission.
	NodeSelector map[string]string `pulumi:"nodeSelector"`

	// tolerations are appended (excluding duplicates) to pods running with this RuntimeClass during
	// admission, effectively unioning the set of nodes tolerated by the pod and the RuntimeClass.
	Tolerations []coreV1.Toleration `pulumi:"tolerations"`

}

var _SchedulingType = reflect.TypeOf((*Scheduling)(nil)).Elem()

// SchedulingInput represents an input type that resolves to a Scheduling.
type SchedulingInput interface {
	ElementType() reflect.Type

	ToSchedulingOutput() SchedulingOutput
	ToSchedulingOutputWithContext(ctx context.Context) SchedulingOutput
}

// SchedulingArgs is a SchedulingInput whose fields are all Input types.
type SchedulingArgs struct {
	// nodeSelector lists labels that must be present on nodes that support this RuntimeClass. Pods
	// using this RuntimeClass can only be scheduled to a node matched by this selector. The
	// RuntimeClass nodeSelector is merged with a pod's existing nodeSelector. Any conflicts will cause
	// the pod to be rejected in admission.
	NodeSelector pulumi.StringMapInput `pulumi:"nodeSelector"`

	// tolerations are appended (excluding duplicates) to pods running with this RuntimeClass during
	// admission, effectively unioning the set of nodes tolerated by the pod and the RuntimeClass.
	Tolerations coreV1.TolerationArrayInput `pulumi:"tolerations"`

}

func (a SchedulingArgs) ElementType() reflect.Type {
	return _SchedulingType
}

func (a SchedulingArgs) ToSchedulingOutput() SchedulingOutput {
	return pulumi.ToOutput(a).(SchedulingOutput)
}

func (a SchedulingArgs) ToSchedulingOutputWithContext(ctx context.Context) SchedulingOutput {
	return pulumi.ToOutputWithContext(ctx, a).(SchedulingOutput)
}

// SchedulingOutput is an output type that resolves to a Input.
type SchedulingOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(SchedulingOutput{}) }

func (SchedulingOutput) ElementType() reflect.Type {
	return _SchedulingType
}

func (o SchedulingOutput) NodeSelector() pulumi.StringMapOutput {
	return o.Apply(func(v Scheduling) map[string]string {
		return v.NodeSelector
	}).(pulumi.StringMapOutput)
}

func (o SchedulingOutput) Tolerations() coreV1.TolerationArrayOutput {
	return o.Apply(func(v Scheduling) []coreV1.Toleration {
		return v.Tolerations
	}).(coreV1.TolerationArrayOutput)
}

