// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// DEPRECATED 1.9 - This group version of IPBlock is deprecated by networking/v1/IPBlock. IPBlock
// describes a particular CIDR (Ex. "192.168.1.1/24") that is allowed to the pods matched by a
// NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included
// within this rule.
type IPBlock struct {
	// CIDR is a string representing the IP Block Valid examples are "192.168.1.1/24"
	Cidr string `pulumi:"cidr"`

	// Except is a slice of CIDRs that should not be included within an IP Block Valid examples are
	// "192.168.1.1/24" Except values will be rejected if they are outside the CIDR range
	Except []string `pulumi:"except"`

}

var _IPBlockType = reflect.TypeOf((*IPBlock)(nil)).Elem()

// IPBlockInput represents an input type that resolves to a IPBlock.
type IPBlockInput interface {
	ElementType() reflect.Type

	ToIPBlockOutput() IPBlockOutput
	ToIPBlockOutputWithContext(ctx context.Context) IPBlockOutput
}

// IPBlockArgs is a IPBlockInput whose fields are all Input types.
type IPBlockArgs struct {
	// CIDR is a string representing the IP Block Valid examples are "192.168.1.1/24"
	Cidr pulumi.StringInput `pulumi:"cidr"`

	// Except is a slice of CIDRs that should not be included within an IP Block Valid examples are
	// "192.168.1.1/24" Except values will be rejected if they are outside the CIDR range
	Except pulumi.StringArrayInput `pulumi:"except"`

}

func (a IPBlockArgs) ElementType() reflect.Type {
	return _IPBlockType
}

func (a IPBlockArgs) ToIPBlockOutput() IPBlockOutput {
	return pulumi.ToOutput(a).(IPBlockOutput)
}

func (a IPBlockArgs) ToIPBlockOutputWithContext(ctx context.Context) IPBlockOutput {
	return pulumi.ToOutputWithContext(ctx, a).(IPBlockOutput)
}

// IPBlockOutput is an output type that resolves to a Input.
type IPBlockOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(IPBlockOutput{}) }

func (IPBlockOutput) ElementType() reflect.Type {
	return _IPBlockType
}

func (o IPBlockOutput) Cidr() pulumi.StringOutput {
	return o.Apply(func(v IPBlock) string {
		return v.Cidr
	}).(pulumi.StringOutput)
}

func (o IPBlockOutput) Except() pulumi.StringArrayOutput {
	return o.Apply(func(v IPBlock) []string {
		return v.Except
	}).(pulumi.StringArrayOutput)
}

