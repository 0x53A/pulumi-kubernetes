// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy.
// Deprecated: use RunAsUserStrategyOptions from policy API Group instead.
type RunAsUserStrategyOptions struct {
	// ranges are the allowed ranges of uids that may be used. If you would like to force a single uid
	// then supply a single range with the same start and end. Required for MustRunAs.
	Ranges []IDRange `pulumi:"ranges"`

	// rule is the strategy that will dictate the allowable RunAsUser values that may be set.
	Rule string `pulumi:"rule"`

}

var _RunAsUserStrategyOptionsType = reflect.TypeOf((*RunAsUserStrategyOptions)(nil)).Elem()

// RunAsUserStrategyOptionsInput represents an input type that resolves to a RunAsUserStrategyOptions.
type RunAsUserStrategyOptionsInput interface {
	ElementType() reflect.Type

	ToRunAsUserStrategyOptionsOutput() RunAsUserStrategyOptionsOutput
	ToRunAsUserStrategyOptionsOutputWithContext(ctx context.Context) RunAsUserStrategyOptionsOutput
}

// RunAsUserStrategyOptionsArgs is a RunAsUserStrategyOptionsInput whose fields are all Input types.
type RunAsUserStrategyOptionsArgs struct {
	// rule is the strategy that will dictate the allowable RunAsUser values that may be set.
	Rule pulumi.StringInput `pulumi:"rule"`

	// ranges are the allowed ranges of uids that may be used. If you would like to force a single uid
	// then supply a single range with the same start and end. Required for MustRunAs.
	Ranges IDRangeArrayInput `pulumi:"ranges"`

}

func (a RunAsUserStrategyOptionsArgs) ElementType() reflect.Type {
	return _RunAsUserStrategyOptionsType
}

func (a RunAsUserStrategyOptionsArgs) ToRunAsUserStrategyOptionsOutput() RunAsUserStrategyOptionsOutput {
	return pulumi.ToOutput(a).(RunAsUserStrategyOptionsOutput)
}

func (a RunAsUserStrategyOptionsArgs) ToRunAsUserStrategyOptionsOutputWithContext(ctx context.Context) RunAsUserStrategyOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, a).(RunAsUserStrategyOptionsOutput)
}

// RunAsUserStrategyOptionsOutput is an output type that resolves to a Input.
type RunAsUserStrategyOptionsOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(RunAsUserStrategyOptionsOutput{}) }

func (RunAsUserStrategyOptionsOutput) ElementType() reflect.Type {
	return _RunAsUserStrategyOptionsType
}

func (o RunAsUserStrategyOptionsOutput) Ranges() IDRangeArrayOutput {
	return o.Apply(func(v RunAsUserStrategyOptions) []IDRange {
		return v.Ranges
	}).(IDRangeArrayOutput)
}

func (o RunAsUserStrategyOptionsOutput) Rule() pulumi.StringOutput {
	return o.Apply(func(v RunAsUserStrategyOptions) string {
		return v.Rule
	}).(pulumi.StringOutput)
}

