// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete
// depending on the set of authorizers the server is configured with and any errors experienced
// during evaluation. Because authorization rules are additive, if a rule appears in a list it's
// safe to assume the subject has that permission, even if that list is incomplete.
type SubjectRulesReviewStatus struct {
	// EvaluationError can appear in combination with Rules. It indicates an error occurred during rule
	// evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules
	// and/or NonResourceRules may be incomplete.
	EvaluationError *string `pulumi:"evaluationError"`

	// Incomplete is true when the rules returned by this call are incomplete. This is most commonly
	// encountered when an authorizer, such as an external authorizer, doesn't support rules
	// evaluation.
	Incomplete bool `pulumi:"incomplete"`

	// NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The
	// list ordering isn't significant, may contain duplicates, and possibly be incomplete.
	NonResourceRules []NonResourceRule `pulumi:"nonResourceRules"`

	// ResourceRules is the list of actions the subject is allowed to perform on resources. The list
	// ordering isn't significant, may contain duplicates, and possibly be incomplete.
	ResourceRules []ResourceRule `pulumi:"resourceRules"`

}

var _SubjectRulesReviewStatusType = reflect.TypeOf((*SubjectRulesReviewStatus)(nil)).Elem()

// SubjectRulesReviewStatusInput represents an input type that resolves to a SubjectRulesReviewStatus.
type SubjectRulesReviewStatusInput interface {
	ElementType() reflect.Type

	ToSubjectRulesReviewStatusOutput() SubjectRulesReviewStatusOutput
	ToSubjectRulesReviewStatusOutputWithContext(ctx context.Context) SubjectRulesReviewStatusOutput
}

// SubjectRulesReviewStatusArgs is a SubjectRulesReviewStatusInput whose fields are all Input types.
type SubjectRulesReviewStatusArgs struct {
	// Incomplete is true when the rules returned by this call are incomplete. This is most commonly
	// encountered when an authorizer, such as an external authorizer, doesn't support rules
	// evaluation.
	Incomplete pulumi.BoolInput `pulumi:"incomplete"`

	// NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The
	// list ordering isn't significant, may contain duplicates, and possibly be incomplete.
	NonResourceRules NonResourceRuleArrayInput `pulumi:"nonResourceRules"`

	// ResourceRules is the list of actions the subject is allowed to perform on resources. The list
	// ordering isn't significant, may contain duplicates, and possibly be incomplete.
	ResourceRules ResourceRuleArrayInput `pulumi:"resourceRules"`

	// EvaluationError can appear in combination with Rules. It indicates an error occurred during rule
	// evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules
	// and/or NonResourceRules may be incomplete.
	EvaluationError pulumi.StringInput `pulumi:"evaluationError"`

}

func (a SubjectRulesReviewStatusArgs) ElementType() reflect.Type {
	return _SubjectRulesReviewStatusType
}

func (a SubjectRulesReviewStatusArgs) ToSubjectRulesReviewStatusOutput() SubjectRulesReviewStatusOutput {
	return pulumi.ToOutput(a).(SubjectRulesReviewStatusOutput)
}

func (a SubjectRulesReviewStatusArgs) ToSubjectRulesReviewStatusOutputWithContext(ctx context.Context) SubjectRulesReviewStatusOutput {
	return pulumi.ToOutputWithContext(ctx, a).(SubjectRulesReviewStatusOutput)
}

// SubjectRulesReviewStatusOutput is an output type that resolves to a Input.
type SubjectRulesReviewStatusOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(SubjectRulesReviewStatusOutput{}) }

func (SubjectRulesReviewStatusOutput) ElementType() reflect.Type {
	return _SubjectRulesReviewStatusType
}

func (o SubjectRulesReviewStatusOutput) EvaluationError() pulumi.StringOutput {
	return o.Apply(func(v SubjectRulesReviewStatus) *string {
		return v.EvaluationError
	}).(pulumi.StringOutput)
}

func (o SubjectRulesReviewStatusOutput) Incomplete() pulumi.BoolOutput {
	return o.Apply(func(v SubjectRulesReviewStatus) bool {
		return v.Incomplete
	}).(pulumi.BoolOutput)
}

func (o SubjectRulesReviewStatusOutput) NonResourceRules() NonResourceRuleArrayOutput {
	return o.Apply(func(v SubjectRulesReviewStatus) []NonResourceRule {
		return v.NonResourceRules
	}).(NonResourceRuleArrayOutput)
}

func (o SubjectRulesReviewStatusOutput) ResourceRules() ResourceRuleArrayOutput {
	return o.Apply(func(v SubjectRulesReviewStatus) []ResourceRule {
		return v.ResourceRules
	}).(ResourceRuleArrayOutput)
}

