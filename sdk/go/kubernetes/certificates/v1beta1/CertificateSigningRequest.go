// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	metaV1 "github.com/pulumi/pulumi-kubernetes/sdk/go/kubernetes/meta/v1"
)

// Describes a certificate signing request
type CertificateSigningRequest struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`

	
	Metadata metaV1.ObjectMetaOutput `pulumi:"metadata"`

	// The certificate request itself and any additional information.
	Spec CertificateSigningRequestSpecOutput `pulumi:"spec"`

	// Derived information about the request.
	Status CertificateSigningRequestStatusOutput `pulumi:"status"`

}

// CertificateSigningRequestArgs is the set of arguments needed to create a CertificateSigningRequest resource.
type CertificateSigningRequestArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringInput `pulumi:"kind"`

	
	Metadata metaV1.ObjectMetaInput `pulumi:"metadata"`

	// The certificate request itself and any additional information.
	Spec CertificateSigningRequestSpecInput `pulumi:"spec"`

}

// NewCertificateSigningRequest creates a CertificateSigningRequest resource with the given unique name, arguments, and options.
func NewCertificateSigningRequest(ctx *pulumi.Context, name string, args *CertificateSigningRequestArgs, opts ...pulumi.ResourceOption) (*CertificateSigningRequest, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		args.ApiVersion = pulumi.String("certificates.k8s.io/v1beta1")
		args.Kind = pulumi.String("CertificateSigningRequest")
		if i := args.ApiVersion; i != nil {
			inputs["apiVersion"] = i.ToStringOutput()
		}
		if i := args.Kind; i != nil {
			inputs["kind"] = i.ToStringOutput()
		}
		if i := args.Metadata; i != nil {
			inputs["metadata"] = i.ToObjectMetaOutput()
		}
		if i := args.Spec; i != nil {
			inputs["spec"] = i.ToCertificateSigningRequestSpecOutput()
		}
	}
	var resource CertificateSigningRequest
	err := ctx.RegisterResource("kubernetes:certificates.k8s.io/v1beta1:CertificateSigningRequest", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCertificateSigningRequest gets an existing CertificateSigningRequest resource's state with the given name and ID.
func GetCertificateSigningRequest(ctx *pulumi.Context, name string, id pulumi.IDInput, opts ...pulumi.ResourceOption) (*CertificateSigningRequest, error) {
	var resource CertificateSigningRequest
	err := ctx.ReadResource("kubernetes:certificates.k8s.io/v1beta1:CertificateSigningRequest", name, id, nil, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Describes a certificate signing request
type CertificateSigningRequestProperty struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`

	
	Metadata *metaV1.ObjectMeta `pulumi:"metadata"`

	// The certificate request itself and any additional information.
	Spec *CertificateSigningRequestSpec `pulumi:"spec"`

	// Derived information about the request.
	Status CertificateSigningRequestStatus `pulumi:"status"`

}

var _CertificateSigningRequestPropertyType = reflect.TypeOf((*CertificateSigningRequestProperty)(nil)).Elem()

// CertificateSigningRequestPropertyInput represents an input type that resolves to a CertificateSigningRequestProperty.
type CertificateSigningRequestPropertyInput interface {
	ElementType() reflect.Type

	ToCertificateSigningRequestPropertyOutput() CertificateSigningRequestPropertyOutput
	ToCertificateSigningRequestPropertyOutputWithContext(ctx context.Context) CertificateSigningRequestPropertyOutput
}

// CertificateSigningRequestPropertyArgs is a CertificateSigningRequestPropertyInput whose fields are all Input types.
type CertificateSigningRequestPropertyArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should
	// convert recognized schemas to the latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer
	// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
	// info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringInput `pulumi:"kind"`

	
	Metadata metaV1.ObjectMetaInput `pulumi:"metadata"`

	// The certificate request itself and any additional information.
	Spec CertificateSigningRequestSpecInput `pulumi:"spec"`

}

func (a CertificateSigningRequestPropertyArgs) ElementType() reflect.Type {
	return _CertificateSigningRequestPropertyType
}

func (a CertificateSigningRequestPropertyArgs) ToCertificateSigningRequestPropertyOutput() CertificateSigningRequestPropertyOutput {
	return pulumi.ToOutput(a).(CertificateSigningRequestPropertyOutput)
}

func (a CertificateSigningRequestPropertyArgs) ToCertificateSigningRequestPropertyOutputWithContext(ctx context.Context) CertificateSigningRequestPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, a).(CertificateSigningRequestPropertyOutput)
}

// CertificateSigningRequestPropertyOutput is an output type that resolves to a Input.
type CertificateSigningRequestPropertyOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(CertificateSigningRequestPropertyOutput{}) }

func (CertificateSigningRequestPropertyOutput) ElementType() reflect.Type {
	return _CertificateSigningRequestPropertyType
}

func (o CertificateSigningRequestPropertyOutput) ApiVersion() pulumi.StringOutput {
	return o.Apply(func(v CertificateSigningRequestProperty) *string {
		return v.ApiVersion
	}).(pulumi.StringOutput)
}

func (o CertificateSigningRequestPropertyOutput) Kind() pulumi.StringOutput {
	return o.Apply(func(v CertificateSigningRequestProperty) *string {
		return v.Kind
	}).(pulumi.StringOutput)
}

func (o CertificateSigningRequestPropertyOutput) Metadata() metaV1.ObjectMetaOutput {
	return o.Apply(func(v CertificateSigningRequestProperty) *metaV1.ObjectMeta {
		return v.Metadata
	}).(metaV1.ObjectMetaOutput)
}

func (o CertificateSigningRequestPropertyOutput) Spec() CertificateSigningRequestSpecOutput {
	return o.Apply(func(v CertificateSigningRequestProperty) *CertificateSigningRequestSpec {
		return v.Spec
	}).(CertificateSigningRequestSpecOutput)
}

func (o CertificateSigningRequestPropertyOutput) Status() CertificateSigningRequestStatusOutput {
	return o.Apply(func(v CertificateSigningRequestProperty) CertificateSigningRequestStatus {
		return v.Status
	}).(CertificateSigningRequestStatusOutput)
}

var _CertificateSigningRequestPropertyArrayType = reflect.TypeOf((*[]CertificateSigningRequestProperty)(nil)).Elem()

type CertificateSigningRequestPropertyArrayInput interface {
	ElementType() reflect.Type

	ToCertificateSigningRequestPropertyArrayOutput() CertificateSigningRequestPropertyArrayOutput
	ToCertificateSigningRequestPropertyArrayOutputWithContext(ctx context.Context) CertificateSigningRequestPropertyArrayOutput
}

type CertificateSigningRequestPropertyArray []CertificateSigningRequestPropertyInput

func (a CertificateSigningRequestPropertyArray) ElementType() reflect.Type {
	return _CertificateSigningRequestPropertyArrayType
}

func (a CertificateSigningRequestPropertyArray) ToCertificateSigningRequestPropertyArrayOutput() CertificateSigningRequestPropertyArrayOutput {
	return pulumi.ToOutput(a).(CertificateSigningRequestPropertyArrayOutput)
}

func (a CertificateSigningRequestPropertyArray) ToCertificateSigningRequestPropertyArrayOutputWithContext(ctx context.Context) CertificateSigningRequestPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(CertificateSigningRequestPropertyArrayOutput)
}

type CertificateSigningRequestPropertyArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(CertificateSigningRequestPropertyArrayOutput{}) }

func (CertificateSigningRequestPropertyArrayOutput) ElementType() reflect.Type {
	return _CertificateSigningRequestPropertyArrayType
}

func (o CertificateSigningRequestPropertyArrayOutput) Index(i pulumi.IntInput) CertificateSigningRequestPropertyOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) CertificateSigningRequestProperty {
		return vs[0].([]CertificateSigningRequestProperty)[vs[1].(int)]
	}).(CertificateSigningRequestPropertyOutput)
}
