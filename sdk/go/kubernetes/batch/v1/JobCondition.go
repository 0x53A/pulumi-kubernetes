// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// JobCondition describes current state of a job.
type JobCondition struct {
	// Last time the condition was checked.
	LastProbeTime *string `pulumi:"lastProbeTime"`

	// Last time the condition transit from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`

	// Human readable message indicating details about last transition.
	Message *string `pulumi:"message"`

	// (brief) reason for the condition's last transition.
	Reason *string `pulumi:"reason"`

	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`

	// Type of job condition, Complete or Failed.
	Type string `pulumi:"type"`

}

var _JobConditionType = reflect.TypeOf((*JobCondition)(nil)).Elem()

// JobConditionInput represents an input type that resolves to a JobCondition.
type JobConditionInput interface {
	ElementType() reflect.Type

	ToJobConditionOutput() JobConditionOutput
	ToJobConditionOutputWithContext(ctx context.Context) JobConditionOutput
}

// JobConditionArgs is a JobConditionInput whose fields are all Input types.
type JobConditionArgs struct {
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`

	// Type of job condition, Complete or Failed.
	Type pulumi.StringInput `pulumi:"type"`

	// Last time the condition was checked.
	LastProbeTime pulumi.StringInput `pulumi:"lastProbeTime"`

	// Last time the condition transit from one status to another.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`

	// Human readable message indicating details about last transition.
	Message pulumi.StringInput `pulumi:"message"`

	// (brief) reason for the condition's last transition.
	Reason pulumi.StringInput `pulumi:"reason"`

}

func (a JobConditionArgs) ElementType() reflect.Type {
	return _JobConditionType
}

func (a JobConditionArgs) ToJobConditionOutput() JobConditionOutput {
	return pulumi.ToOutput(a).(JobConditionOutput)
}

func (a JobConditionArgs) ToJobConditionOutputWithContext(ctx context.Context) JobConditionOutput {
	return pulumi.ToOutputWithContext(ctx, a).(JobConditionOutput)
}

// JobConditionOutput is an output type that resolves to a Input.
type JobConditionOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(JobConditionOutput{}) }

func (JobConditionOutput) ElementType() reflect.Type {
	return _JobConditionType
}

func (o JobConditionOutput) LastProbeTime() pulumi.StringOutput {
	return o.Apply(func(v JobCondition) *string {
		return v.LastProbeTime
	}).(pulumi.StringOutput)
}

func (o JobConditionOutput) LastTransitionTime() pulumi.StringOutput {
	return o.Apply(func(v JobCondition) *string {
		return v.LastTransitionTime
	}).(pulumi.StringOutput)
}

func (o JobConditionOutput) Message() pulumi.StringOutput {
	return o.Apply(func(v JobCondition) *string {
		return v.Message
	}).(pulumi.StringOutput)
}

func (o JobConditionOutput) Reason() pulumi.StringOutput {
	return o.Apply(func(v JobCondition) *string {
		return v.Reason
	}).(pulumi.StringOutput)
}

func (o JobConditionOutput) Status() pulumi.StringOutput {
	return o.Apply(func(v JobCondition) string {
		return v.Status
	}).(pulumi.StringOutput)
}

func (o JobConditionOutput) Type() pulumi.StringOutput {
	return o.Apply(func(v JobCondition) string {
		return v.Type
	}).(pulumi.StringOutput)
}

var _JobConditionArrayType = reflect.TypeOf((*[]JobCondition)(nil)).Elem()

type JobConditionArrayInput interface {
	ElementType() reflect.Type

	ToJobConditionArrayOutput() JobConditionArrayOutput
	ToJobConditionArrayOutputWithContext(ctx context.Context) JobConditionArrayOutput
}

type JobConditionArray []JobConditionInput

func (a JobConditionArray) ElementType() reflect.Type {
	return _JobConditionArrayType
}

func (a JobConditionArray) ToJobConditionArrayOutput() JobConditionArrayOutput {
	return pulumi.ToOutput(a).(JobConditionArrayOutput)
}

func (a JobConditionArray) ToJobConditionArrayOutputWithContext(ctx context.Context) JobConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(JobConditionArrayOutput)
}

type JobConditionArrayOutput struct { *pulumi.OutputState }

func init() { pulumi.RegisterOutputType(JobConditionArrayOutput{}) }

func (JobConditionArrayOutput) ElementType() reflect.Type {
	return _JobConditionArrayType
}

func (o JobConditionArrayOutput) Index(i pulumi.IntInput) JobConditionOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) JobCondition {
		return vs[0].([]JobCondition)[vs[1].(int)]
	}).(JobConditionOutput)
}
