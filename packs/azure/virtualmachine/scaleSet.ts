// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";

export class ScaleSet extends lumi.NamedResource implements ScaleSetArgs {
    public readonly extension?: { autoUpgradeMinorVersion?: boolean, _name: string, protectedSettings?: string, publisher: string, settings?: string, type: string, typeHandlerVersion: string }[];
    public readonly location: string;
    public readonly _name: string;
    public readonly networkProfile: { ipConfiguration: { loadBalancerBackendAddressPoolIds?: string[], loadBalancerInboundNatRulesIds?: string[], _name: string, subnetId: string }[], _name: string, primary: boolean }[];
    public readonly osProfile: { adminPassword: string, adminUsername: string, computerNamePrefix: string, customData?: string }[];
    public readonly osProfileLinuxConfig?: { disablePasswordAuthentication?: boolean, sshKeys?: { keyData?: string, path: string }[] }[];
    public readonly osProfileSecrets?: { sourceVaultId: string, vaultCertificates?: { certificateStore?: string, certificateUrl: string }[] }[];
    public readonly osProfileWindowsConfig?: { additionalUnattendConfig?: { component: string, content: string, pass: string, settingName: string }[], enableAutomaticUpgrades?: boolean, provisionVmAgent?: boolean, winrm?: { certificateUrl?: string, protocol: string }[] }[];
    public readonly overprovision?: boolean;
    public readonly resourceGroupName: string;
    public readonly singlePlacementGroup?: boolean;
    public readonly sku: { capacity: number, _name: string, tier?: string }[];
    public readonly storageProfileDataDisk?: { caching?: string, createOption: string, diskSizeGb?: number, lun: number, managedDiskType?: string }[];
    public readonly storageProfileImageReference?: { offer: string, publisher: string, sku: string, version: string }[];
    public readonly storageProfileOsDisk: { caching?: string, createOption: string, image?: string, managedDiskType?: string, _name?: string, osType?: string, vhdContainers?: string[] }[];
    public readonly tags?: {[key: string]: any};
    public readonly upgradePolicyMode: string;

    constructor(name: string, args: ScaleSetArgs) {
        super(name);
        this.extension = args.extension;
        this.location = args.location;
        this._name = args._name;
        this.networkProfile = args.networkProfile;
        this.osProfile = args.osProfile;
        this.osProfileLinuxConfig = args.osProfileLinuxConfig;
        this.osProfileSecrets = args.osProfileSecrets;
        this.osProfileWindowsConfig = args.osProfileWindowsConfig;
        this.overprovision = args.overprovision;
        this.resourceGroupName = args.resourceGroupName;
        this.singlePlacementGroup = args.singlePlacementGroup;
        this.sku = args.sku;
        this.storageProfileDataDisk = args.storageProfileDataDisk;
        this.storageProfileImageReference = args.storageProfileImageReference;
        this.storageProfileOsDisk = args.storageProfileOsDisk;
        this.tags = args.tags;
        this.upgradePolicyMode = args.upgradePolicyMode;
    }
}

export interface ScaleSetArgs {
    readonly extension?: { autoUpgradeMinorVersion?: boolean, _name: string, protectedSettings?: string, publisher: string, settings?: string, type: string, typeHandlerVersion: string }[];
    readonly location: string;
    readonly _name: string;
    readonly networkProfile: { ipConfiguration: { loadBalancerBackendAddressPoolIds?: string[], loadBalancerInboundNatRulesIds?: string[], _name: string, subnetId: string }[], _name: string, primary: boolean }[];
    readonly osProfile: { adminPassword: string, adminUsername: string, computerNamePrefix: string, customData?: string }[];
    readonly osProfileLinuxConfig?: { disablePasswordAuthentication?: boolean, sshKeys?: { keyData?: string, path: string }[] }[];
    readonly osProfileSecrets?: { sourceVaultId: string, vaultCertificates?: { certificateStore?: string, certificateUrl: string }[] }[];
    readonly osProfileWindowsConfig?: { additionalUnattendConfig?: { component: string, content: string, pass: string, settingName: string }[], enableAutomaticUpgrades?: boolean, provisionVmAgent?: boolean, winrm?: { certificateUrl?: string, protocol: string }[] }[];
    readonly overprovision?: boolean;
    readonly resourceGroupName: string;
    readonly singlePlacementGroup?: boolean;
    readonly sku: { capacity: number, _name: string, tier?: string }[];
    readonly storageProfileDataDisk?: { caching?: string, createOption: string, diskSizeGb?: number, lun: number, managedDiskType?: string }[];
    readonly storageProfileImageReference?: { offer: string, publisher: string, sku: string, version: string }[];
    readonly storageProfileOsDisk: { caching?: string, createOption: string, image?: string, managedDiskType?: string, _name?: string, osType?: string, vhdContainers?: string[] }[];
    readonly tags?: {[key: string]: any};
    readonly upgradePolicyMode: string;
}

