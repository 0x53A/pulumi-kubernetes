// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";

export class ElasticPool extends lumi.NamedResource implements ElasticPoolArgs {
    public /*out*/ readonly creationDate: string;
    public readonly dbDtuMax: number;
    public readonly dbDtuMin: number;
    public readonly dtu: number;
    public readonly edition: string;
    public readonly location: string;
    public readonly elasticPoolName?: string;
    public readonly poolSize: number;
    public readonly resourceGroupName: string;
    public readonly serverName: string;
    public readonly tags: {[key: string]: any};

    constructor(name: string, args: ElasticPoolArgs) {
        super(name);
        this.dbDtuMax = args.dbDtuMax;
        this.dbDtuMin = args.dbDtuMin;
        if (args.dtu === undefined) {
            throw new Error("Property argument 'dtu' is required, but was missing");
        }
        this.dtu = args.dtu;
        if (args.edition === undefined) {
            throw new Error("Property argument 'edition' is required, but was missing");
        }
        this.edition = args.edition;
        if (args.location === undefined) {
            throw new Error("Property argument 'location' is required, but was missing");
        }
        this.location = args.location;
        this.elasticPoolName = args.elasticPoolName;
        this.poolSize = args.poolSize;
        if (args.resourceGroupName === undefined) {
            throw new Error("Property argument 'resourceGroupName' is required, but was missing");
        }
        this.resourceGroupName = args.resourceGroupName;
        if (args.serverName === undefined) {
            throw new Error("Property argument 'serverName' is required, but was missing");
        }
        this.serverName = args.serverName;
        this.tags = args.tags;
    }
}

export interface ElasticPoolArgs {
    readonly dbDtuMax?: number;
    readonly dbDtuMin?: number;
    readonly dtu: number;
    readonly edition: string;
    readonly location: string;
    readonly elasticPoolName?: string;
    readonly poolSize?: number;
    readonly resourceGroupName: string;
    readonly serverName: string;
    readonly tags?: {[key: string]: any};
}

