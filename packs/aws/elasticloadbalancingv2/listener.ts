// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";

export class Listener extends lumi.NamedResource implements ListenerArgs {
    public /*out*/ readonly arn: string;
    public readonly certificateArn?: string;
    public readonly defaultAction: { targetGroupArn: string, type: string }[];
    public readonly loadBalancerArn: string;
    public readonly port: number;
    public readonly protocol?: string;
    public readonly sslPolicy: string;

    constructor(name: string, args: ListenerArgs) {
        super(name);
        this.certificateArn = args.certificateArn;
        if (args.defaultAction === undefined) {
            throw new Error("Property argument 'defaultAction' is required, but was missing");
        }
        this.defaultAction = args.defaultAction;
        if (args.loadBalancerArn === undefined) {
            throw new Error("Property argument 'loadBalancerArn' is required, but was missing");
        }
        this.loadBalancerArn = args.loadBalancerArn;
        if (args.port === undefined) {
            throw new Error("Property argument 'port' is required, but was missing");
        }
        this.port = args.port;
        this.protocol = args.protocol;
        this.sslPolicy = args.sslPolicy;
    }
}

export interface ListenerArgs {
    readonly certificateArn?: string;
    readonly defaultAction: { targetGroupArn: string, type: string }[];
    readonly loadBalancerArn: string;
    readonly port: number;
    readonly protocol?: string;
    readonly sslPolicy?: string;
}

