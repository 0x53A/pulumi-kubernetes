// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";

export class KeyPair extends lumi.NamedResource implements KeyPairArgs {
    public readonly arn?: string;
    public readonly encryptedFingerprint?: string;
    public readonly encryptedPrivateKey?: string;
    public readonly fingerprint?: string;
    public readonly namePrefix?: string;
    public readonly pgpKey?: string;
    public readonly privateKey?: string;
    public readonly publicKey?: string;

    constructor(name: string, args: KeyPairArgs) {
        super(name);
        if (args.arn === undefined) {
            throw new Error("Property argument 'arn' is required, but was missing");
        }
        this.arn = args.arn;
        if (args.encryptedFingerprint === undefined) {
            throw new Error("Property argument 'encryptedFingerprint' is required, but was missing");
        }
        this.encryptedFingerprint = args.encryptedFingerprint;
        if (args.encryptedPrivateKey === undefined) {
            throw new Error("Property argument 'encryptedPrivateKey' is required, but was missing");
        }
        this.encryptedPrivateKey = args.encryptedPrivateKey;
        if (args.fingerprint === undefined) {
            throw new Error("Property argument 'fingerprint' is required, but was missing");
        }
        this.fingerprint = args.fingerprint;
        this.namePrefix = args.namePrefix;
        this.pgpKey = args.pgpKey;
        if (args.privateKey === undefined) {
            throw new Error("Property argument 'privateKey' is required, but was missing");
        }
        this.privateKey = args.privateKey;
        this.publicKey = args.publicKey;
    }
}

export interface KeyPairArgs {
    readonly arn?: string;
    readonly encryptedFingerprint?: string;
    readonly encryptedPrivateKey?: string;
    readonly fingerprint?: string;
    readonly namePrefix?: string;
    readonly pgpKey?: string;
    readonly privateKey?: string;
    readonly publicKey?: string;
}

