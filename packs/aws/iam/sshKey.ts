// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";

export class SshKey extends lumi.NamedResource implements SshKeyArgs {
    public readonly encoding: string;
    public readonly fingerprint?: string;
    public readonly publicKey: string;
    public readonly sshPublicKeyId?: string;
    public readonly status?: string;
    public readonly username: string;

    constructor(name: string, args: SshKeyArgs) {
        super(name);
        if (args.encoding === undefined) {
            throw new Error("Property argument 'encoding' is required, but was missing");
        }
        this.encoding = args.encoding;
        if (args.fingerprint === undefined) {
            throw new Error("Property argument 'fingerprint' is required, but was missing");
        }
        this.fingerprint = args.fingerprint;
        if (args.publicKey === undefined) {
            throw new Error("Property argument 'publicKey' is required, but was missing");
        }
        this.publicKey = args.publicKey;
        if (args.sshPublicKeyId === undefined) {
            throw new Error("Property argument 'sshPublicKeyId' is required, but was missing");
        }
        this.sshPublicKeyId = args.sshPublicKeyId;
        this.status = args.status;
        if (args.username === undefined) {
            throw new Error("Property argument 'username' is required, but was missing");
        }
        this.username = args.username;
    }
}

export interface SshKeyArgs {
    readonly encoding: string;
    readonly fingerprint?: string;
    readonly publicKey: string;
    readonly sshPublicKeyId?: string;
    readonly status?: string;
    readonly username: string;
}

