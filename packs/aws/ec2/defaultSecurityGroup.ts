// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";

export class DefaultSecurityGroup extends lumi.NamedResource implements DefaultSecurityGroupArgs {
    public readonly egress?: { cidrBlocks?: string[], fromPort: number, ipv6CidrBlocks?: string[], prefixListIds?: string[], protocol: string, securityGroups?: string[], self?: boolean, toPort: number }[];
    public readonly ingress?: { cidrBlocks?: string[], fromPort: number, ipv6CidrBlocks?: string[], protocol: string, securityGroups?: string[], self?: boolean, toPort: number }[];
    public readonly ownerId?: string;
    public readonly tags?: {[key: string]: any};
    public readonly vpcId?: string;

    constructor(name: string, args: DefaultSecurityGroupArgs) {
        super(name);
        this.egress = args.egress;
        this.ingress = args.ingress;
        if (args.ownerId === undefined) {
            throw new Error("Property argument 'ownerId' is required, but was missing");
        }
        this.ownerId = args.ownerId;
        this.tags = args.tags;
        this.vpcId = args.vpcId;
    }
}

export interface DefaultSecurityGroupArgs {
    readonly egress?: { cidrBlocks?: string[], fromPort: number, ipv6CidrBlocks?: string[], prefixListIds?: string[], protocol: string, securityGroups?: string[], self?: boolean, toPort: number }[];
    readonly ingress?: { cidrBlocks?: string[], fromPort: number, ipv6CidrBlocks?: string[], protocol: string, securityGroups?: string[], self?: boolean, toPort: number }[];
    readonly ownerId?: string;
    readonly tags?: {[key: string]: any};
    readonly vpcId?: string;
}

