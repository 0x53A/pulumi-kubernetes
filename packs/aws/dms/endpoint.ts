// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";

export class Endpoint extends lumi.NamedResource implements EndpointArgs {
    public readonly certificateArn?: string;
    public readonly databaseName?: string;
    public readonly endpointArn?: string;
    public readonly endpointId: string;
    public readonly endpointType: string;
    public readonly engineName: string;
    public readonly extraConnectionAttributes?: string;
    public readonly kmsKeyArn?: string;
    public readonly password?: string;
    public readonly port?: number;
    public readonly serverName?: string;
    public readonly serviceAccessRole?: string;
    public readonly sslMode?: string;
    public readonly tags?: {[key: string]: any};
    public readonly username?: string;

    constructor(name: string, args: EndpointArgs) {
        super(name);
        this.certificateArn = args.certificateArn;
        this.databaseName = args.databaseName;
        if (args.endpointArn === undefined) {
            throw new Error("Property argument 'endpointArn' is required, but was missing");
        }
        this.endpointArn = args.endpointArn;
        if (args.endpointId === undefined) {
            throw new Error("Property argument 'endpointId' is required, but was missing");
        }
        this.endpointId = args.endpointId;
        if (args.endpointType === undefined) {
            throw new Error("Property argument 'endpointType' is required, but was missing");
        }
        this.endpointType = args.endpointType;
        if (args.engineName === undefined) {
            throw new Error("Property argument 'engineName' is required, but was missing");
        }
        this.engineName = args.engineName;
        this.extraConnectionAttributes = args.extraConnectionAttributes;
        this.kmsKeyArn = args.kmsKeyArn;
        this.password = args.password;
        this.port = args.port;
        this.serverName = args.serverName;
        this.serviceAccessRole = args.serviceAccessRole;
        this.sslMode = args.sslMode;
        this.tags = args.tags;
        this.username = args.username;
    }
}

export interface EndpointArgs {
    readonly certificateArn?: string;
    readonly databaseName?: string;
    readonly endpointArn?: string;
    readonly endpointId: string;
    readonly endpointType: string;
    readonly engineName: string;
    readonly extraConnectionAttributes?: string;
    readonly kmsKeyArn?: string;
    readonly password?: string;
    readonly port?: number;
    readonly serverName?: string;
    readonly serviceAccessRole?: string;
    readonly sslMode?: string;
    readonly tags?: {[key: string]: any};
    readonly username?: string;
}

