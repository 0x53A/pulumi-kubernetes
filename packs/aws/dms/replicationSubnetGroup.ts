// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";

export class ReplicationSubnetGroup extends lumi.NamedResource implements ReplicationSubnetGroupArgs {
    public readonly replicationSubnetGroupArn?: string;
    public readonly replicationSubnetGroupDescription: string;
    public readonly replicationSubnetGroupId: string;
    public readonly subnetIds: string[];
    public readonly tags?: {[key: string]: any};
    public readonly vpcId?: string;

    constructor(name: string, args: ReplicationSubnetGroupArgs) {
        super(name);
        if (args.replicationSubnetGroupArn === undefined) {
            throw new Error("Property argument 'replicationSubnetGroupArn' is required, but was missing");
        }
        this.replicationSubnetGroupArn = args.replicationSubnetGroupArn;
        if (args.replicationSubnetGroupDescription === undefined) {
            throw new Error("Property argument 'replicationSubnetGroupDescription' is required, but was missing");
        }
        this.replicationSubnetGroupDescription = args.replicationSubnetGroupDescription;
        if (args.replicationSubnetGroupId === undefined) {
            throw new Error("Property argument 'replicationSubnetGroupId' is required, but was missing");
        }
        this.replicationSubnetGroupId = args.replicationSubnetGroupId;
        if (args.subnetIds === undefined) {
            throw new Error("Property argument 'subnetIds' is required, but was missing");
        }
        this.subnetIds = args.subnetIds;
        this.tags = args.tags;
        if (args.vpcId === undefined) {
            throw new Error("Property argument 'vpcId' is required, but was missing");
        }
        this.vpcId = args.vpcId;
    }
}

export interface ReplicationSubnetGroupArgs {
    readonly replicationSubnetGroupArn?: string;
    readonly replicationSubnetGroupDescription: string;
    readonly replicationSubnetGroupId: string;
    readonly subnetIds: string[];
    readonly tags?: {[key: string]: any};
    readonly vpcId?: string;
}

